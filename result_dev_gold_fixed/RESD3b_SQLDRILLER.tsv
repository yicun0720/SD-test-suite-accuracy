1	select count ( * ) from singer	SELECT count(*) FROM singer
1	select count ( * ) from singer	SELECT count(*) FROM singer
1	select name , country , age from singer order by age desc , singer_id asc	SELECT name, country, age FROM singer ORDER BY age DESC, Singer_ID ASC
1	select name , country , age from singer order by age desc , singer_id asc	SELECT name, country, age FROM singer ORDER BY age DESC, Singer_ID ASC
1	select avg ( age ) , min ( age ) , max ( age ) from singer where country = 'France'	SELECT avg(age) , min(age) , max(age) FROM singer WHERE country = 'France'
1	select avg ( age ) , min ( age ) , max ( age ) from singer where country = 'France'	SELECT avg(age) , min(age) , max(age) FROM singer WHERE country = 'France'
0	select song_name , song_release_year from singer order by age asc limit 1	SELECT song_name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer)
0	select name , song_release_year from singer where age = ( select min ( age ) from singer )	SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)
1	select distinct country from singer where age > 20	SELECT DISTINCT country FROM singer WHERE age > 20
1	select distinct country from singer where age > 20	SELECT DISTINCT country FROM singer WHERE age > 20
1	select country , count ( * ) from singer group by country	SELECT country , count(*) FROM singer GROUP BY country
1	select country , count ( * ) from singer group by country	SELECT country , count(*) FROM singer GROUP BY country
1	select distinct song_name from singer where age > ( select avg ( age ) from singer )	SELECT DISTINCT song_name FROM singer WHERE age > (SELECT avg(age) FROM singer)
1	select distinct song_name from singer where age > ( select avg ( age ) from singer )	SELECT DISTINCT song_name FROM singer WHERE age > (SELECT avg(age) FROM singer)
1	select location , name from stadium where capacity between 5000 and 10000	SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
1	select location , name from stadium where capacity between 5000 and 10000	SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
1	select max ( capacity ) , avg ( capacity ) from stadium	SELECT MAX(Capacity), AVG(Capacity) FROM stadium
0	select max ( capacity ) , avg ( average ) from stadium	select avg(capacity) , max(capacity) from stadium
0	select s.name , s.capacity from stadium s where s.average = ( select max ( average ) from stadium ) order by s.lowest asc limit 1	SELECT name, capacity FROM stadium ORDER BY average DESC, Stadium_ID ASC LIMIT 1
1	select s.name , s.capacity from stadium s where s.average = ( select max ( avg_cnt ) from ( select avg ( average ) as avg_cnt from stadium group by average ) )	SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)
1	select count ( * ) from concert where year = 2014 or year = 2015	SELECT count(*) FROM concert WHERE YEAR = 2014 OR YEAR = 2015
1	select count ( * ) from concert where year = 2014 or year = 2015	SELECT count(*) FROM concert WHERE YEAR = 2014 OR YEAR = 2015
1	select name , ( select count ( * ) from concert where stadium_id = stadium.stadium_id ) as concert_count from stadium	SELECT s.name as StadiumName, (SELECT COUNT(*) FROM concert WHERE stadium_id = s.stadium_id) AS NumberOfConcerts FROM stadium s
0	select stadium.name , count ( * ) from concert join stadium on concert.stadium_id = stadium.stadium_id group by stadium.stadium_id	SELECT s.stadium_id, COUNT(c.concert_id) AS concert_count FROM stadium s LEFT JOIN concert c ON s.stadium_id = c.stadium_id GROUP BY s.stadium_id
0	select stadium.name , stadium.capacity from concert join stadium on concert.stadium_id = stadium.stadium_id where concert.year >= 2014 group by stadium.stadium_id having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from concert where year >= 2014 group by stadium_id ) )	SELECT T2.name , T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.year >= 2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1
0	select s.name , s.capacity from stadium s where exists ( select 1 from concert c where c.stadium_id = s.stadium_id and c.year > 2013 group by c.stadium_id having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from concert where year > 2013 group by stadium_id ) as counts ) )	SELECT first.name, first.capacity FROM (SELECT s.name, s.capacity FROM stadium s, concert c WHERE s.stadium_id = c.stadium_id AND c.year > 2013 GROUP BY s.stadium_id HAVING COUNT(*) = (SELECT MAX(count) FROM (SELECT COUNT(*) as count FROM concert GROUP BY stadium_id) as subquery)) AS first
1	select year from concert group by year having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from concert group by year ) )	SELECT Year FROM concert GROUP BY Year HAVING COUNT(*) = (SELECT MAX(c) FROM (SELECT COUNT(*) AS c FROM concert GROUP BY Year) AS max_count)
1	select year from concert group by year having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from concert group by year ) )	SELECT Year FROM concert GROUP BY Year HAVING count(*) = (SELECT count(*) as cnt FROM concert GROUP BY Year ORDER BY cnt DESC LIMIT 1)
1	select name from stadium where stadium_id not in ( select stadium_id from concert )	SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
1	select name from stadium where stadium_id not in ( select stadium_id from concert )	SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
1	select country from singer where age > 40 intersect select country from singer where age < 30	SELECT country FROM singer WHERE age > 40 INTERSECT SELECT country FROM singer WHERE age < 30
1	select name from stadium where stadium_id not in ( select stadium_id from concert where year = 2014 )	SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)
1	select name from stadium where stadium_id not in ( select stadium_id from concert where year = 2014 )	SELECT s.name FROM stadium s WHERE s.stadium_id NOT IN (SELECT c.stadium_id FROM concert c WHERE c.year = 2014)
0	select concert_name , theme , ( select count ( distinct singer_id ) from singer_in_concert where concert_id = singer_in_concert.concert_id ) as singer_count from concert	SELECT concert_name, theme, (SELECT COUNT(*) FROM singer_in_concert WHERE singer_in_concert.concert_id = concert.concert_id) AS number_of_singers FROM concert
1	select concert_name , theme , ( select count ( * ) from singer_in_concert where singer_in_concert.concert_id = concert.concert_id ) as singer_count from concert	SELECT concert.concert_name, concert.theme, COUNT(DISTINCT sic.singer_id) num_singers FROM concert LEFT JOIN singer_in_concert sic ON concert.concert_id = sic.concert_id GROUP BY concert.concert_id, concert.concert_name, concert.theme
1	select name , ( select count ( concert_id ) from singer_in_concert where singer_id = singer.singer_id ) as concert_count from singer	SELECT name as SingerName, (SELECT COUNT(*) FROM singer_in_concert WHERE singer_id = singer.singer_id) as ConcertCount FROM singer
0	select name , ( select count ( * ) from singer_in_concert where singer_id = singer.singer_id ) as concert_count from singer	SELECT T2.name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id
1	select distinct singer.name from singer_in_concert join concert on singer_in_concert.concert_id = concert.concert_id join singer on singer_in_concert.singer_id = singer.singer_id where concert.year = 2014	SELECT DISTINCT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014
1	select distinct singer.name from concert join singer_in_concert on concert.concert_id = singer_in_concert.concert_id join singer on singer_in_concert.singer_id = singer.singer_id where concert.year = 2014	SELECT DISTINCT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014
0	select name , country from singer where song_name like '%Hey%'	SELECT name, country FROM singer WHERE INSTR(song_name, 'Hey') > 0
0	select name , country from singer where song_name like '%Hey%'	SELECT name, country FROM singer WHERE instr(song_name, 'Hey') > 0
1	select name , location from stadium where stadium_id in ( select stadium_id from concert where year = 2014 intersect select stadium_id from concert where year = 2015 )	SELECT Name, Location FROM stadium where Stadium_ID in (SELECT Stadium_ID FROM concert WHERE year = 2014 INTERSECT SELECT Stadium_ID FROM concert WHERE year = 2015)
1	select name , location from stadium where stadium_id in ( select stadium_id from concert where year = 2014 intersect select stadium_id from concert where year = 2015 )	SELECT Name, Location FROM stadium where Stadium_ID in (SELECT Stadium_ID FROM concert WHERE year = 2014 INTERSECT SELECT Stadium_ID FROM concert WHERE year = 2015)
1	select count ( * ) from concert join stadium on concert.stadium_id = stadium.stadium_id where stadium.capacity = ( select max ( capacity ) from stadium )	SELECT COUNT(c.concert_ID) FROM concert AS c WHERE c.Stadium_ID in (SELECT Stadium_ID FROM stadium where Capacity = (SELECT MAX(Capacity) FROM stadium))
1	select count ( * ) from concert join stadium on concert.stadium_id = stadium.stadium_id where stadium.capacity = ( select max ( capacity ) from stadium )	SELECT COUNT(c.concert_ID) FROM concert AS c WHERE c.Stadium_ID in (SELECT Stadium_ID FROM stadium where Capacity = (SELECT MAX(Capacity) FROM stadium))
1	select count ( * ) from pets where weight > 10	SELECT count(*) FROM pets WHERE weight > 10
1	select count ( * ) from pets where weight > 10	SELECT count(*) FROM pets WHERE weight > 10
0	select weight from pets where pet_age = ( select min ( pet_age ) from pets )	SELECT weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog') AND PetType = 'dog'
0	select weight from pets where pet_age = ( select min ( pet_age ) from pets )	SELECT weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets WHERE PetType = 'dog') AND PetType = 'dog'
1	select max ( weight ) , pettype from pets group by pettype	SELECT max(weight) , petType FROM pets GROUP BY petType
1	select max ( weight ) , pettype from pets group by pettype	SELECT max(weight) , petType FROM pets GROUP BY petType
0	select count ( * ) from pets join has_pet on pets.petid = has_pet.petid join student on student.stuid = has_pet.stuid where student.age > 20	SELECT COUNT(DISTINCT hp.petid) FROM has_pet hp INNER JOIN student s ON hp.stuid = s.stuid WHERE s.age > 20
0	select count ( * ) from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where student.age > 20	SELECT COUNT(*) FROM pets WHERE petid IN (SELECT petid FROM has_pet WHERE stuid IN (SELECT stuid FROM student WHERE age > 20));
0	select count ( distinct pets.petid ) from pets join has_pet on pets.petid = has_pet.petid join student on has_pet.stuid = student.stuid where student.sex = 'F' and pets.pettype = 'Dog'	SELECT COUNT(DISTINCT pets.petid) FROM student, has_pet, pets WHERE student.stuid = has_pet.stuid AND has_pet.petid = pets.petid AND student.sex = 'F' AND pets.pettype = 'dog'
0	select count ( * ) from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where student.sex = 'F' and pets.pettype = 'Dog'	SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T1.sex = 'F' AND T3.pettype = 'dog'
1	select count ( distinct pettype ) from pets	SELECT count(DISTINCT pettype) FROM pets
1	select count ( distinct pettype ) from pets	SELECT count(DISTINCT pettype) FROM pets
0	select fname from student where stuid in ( select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype in ( 'Cat' , 'Dog' ) )	SELECT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat' OR pettype = 'dog'))
0	select fname from student where stuid in ( select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype in ( 'Cat' , 'Dog' ) )	SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog'
0	select fname from student where stuid in ( select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'Cat' intersect select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'Dog' )	SELECT s.fname FROM student s WHERE StuID in (SELECT hp.StuID FROM has_pet hp JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY hp.StuID HAVING COUNT(DISTINCT p.pettype) = 2)
0	select fname from student where stuid in ( select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'Cat' intersect select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'Dog' )	SELECT s.fname FROM student s WHERE StuID in (SELECT hp.StuID FROM has_pet hp JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY hp.StuID HAVING COUNT(DISTINCT p.pettype) = 2)
0	select major , age from student where stuid not in ( select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'Cat' )	SELECT major , age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')
0	select student.major , student.age from student where stuid not in ( select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'Cat' )	SELECT major , age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')
0	select stuid from student except select stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'Cat'	SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat'
0	select stuid from student except select stuid from has_pet join pets on has_pet.petid = pets.petid where pettype = 'Cat'	SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat'
0	select student.fname , student.age from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pets.pettype = 'Dog' except select student.fname , student.age from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pets.pettype = 'Cat'	SELECT s.fname, s.age FROM student s WHERE EXISTS (SELECT 1 FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' AND has_pet.stuid = s.stuid) AND NOT EXISTS (SELECT 1 FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' AND has_pet.stuid = s.stuid)
1	select fname from student where stuid in ( select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'dog' except select has_pet.stuid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'cat' )	SELECT s1.fname FROM student s1 WHERE EXISTS (SELECT * FROM has_pet hp1 JOIN pets p1 ON hp1.petid = p1.petid WHERE p1.pettype = 'dog' AND hp1.stuid = s1.stuid) AND NOT EXISTS (SELECT * FROM has_pet hp2 JOIN pets p2 ON hp2.petid = p2.petid WHERE p2.pettype = 'cat' AND hp2.stuid = s1.stuid)
1	select pettype , weight from pets where pet_age = ( select min ( pet_age ) from pets )	SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
1	select pettype , weight from pets where pet_age = ( select min ( pet_age ) from pets )	SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
1	select petid , weight from pets where pet_age > 1	SELECT petid , weight FROM pets WHERE pet_age > 1
1	select petid , weight from pets where pet_age > 1	SELECT petid , weight FROM pets WHERE pet_age > 1
1	select pettype , avg ( pet_age ) , max ( pet_age ) from pets group by pettype	SELECT avg(pet_age) , max(pet_age) , pettype FROM pets GROUP BY pettype
1	select pettype , avg ( pet_age ) , max ( pet_age ) from pets group by pettype	SELECT avg(pet_age) , max(pet_age) , pettype FROM pets GROUP BY pettype
1	select pettype , avg ( weight ) from pets group by pettype	SELECT avg(weight) , pettype FROM pets GROUP BY pettype
1	select pettype , avg ( weight ) from pets group by pettype	SELECT avg(weight) , pettype FROM pets GROUP BY pettype
1	select fname , age from student where stuid in ( select has_pet.stuid from has_pet )	SELECT fname, age FROM student WHERE stuid IN (SELECT stuid FROM has_pet);
1	select distinct student.fname , student.age from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid	SELECT DISTINCT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid
0	select pets.petid from pets join has_pet on pets.petid = has_pet.petid join student on student.stuid = has_pet.stuid where student.lname = 'Smith'	SELECT petid FROM pets WHERE petid IN (SELECT petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE lname = 'Smith')
0	select pets.petid from pets join has_pet on pets.petid = has_pet.petid join student on student.stuid = has_pet.stuid where student.lname = 'Smith'	SELECT petid FROM pets WHERE petid IN (SELECT petid FROM has_pet WHERE stuid IN (SELECT stuid FROM student WHERE lname = 'Smith'))
1	select count ( * ) , stuid from has_pet group by stuid	SELECT count(*) , T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid
1	select count ( * ) , student.stuid from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid group by student.stuid	select count(*) , t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid
1	select student.fname , student.sex from student join has_pet on student.stuid = has_pet.stuid group by has_pet.stuid having count ( * ) > 1	SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count(*) > 1
1	select student.fname , student.sex from student join has_pet on student.stuid = has_pet.stuid group by has_pet.stuid having count ( * ) > 1	SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count(*) > 1
0	select student.lname from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pets.pet_age = 3 and student.lname = 'Kitty'	SELECT lname FROM student WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat' AND pet_age = 3))
0	select student.lname from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pets.pet_age = 3 and student.age = 16	SELECT lname FROM student WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat' AND pet_age = 3))
1	select avg ( age ) from student where stuid not in ( select stuid from has_pet )	select avg(age) from student where stuid not in (select stuid from has_pet)
1	select avg ( age ) from student where stuid not in ( select stuid from has_pet )	select avg(age) from student where stuid not in (select stuid from has_pet)
1	select count ( * ) from continents	SELECT count(*) FROM CONTINENTS;
1	select count ( * ) from continents	SELECT count(*) FROM CONTINENTS;
1	select continents.contid , continents.continent , count ( countries.countryid ) as country_count from continents left join countries on continents.contid = countries.continent group by continents.contid , continents.continent	SELECT a.contid, a.continent, COALESCE(b.num_countries, 0) AS num_countries FROM continents a LEFT JOIN (SELECT continent, COUNT(*) AS num_countries FROM countries GROUP BY continent) b ON a.contid = b.continent
0	select continents.contid , continents.continent , count ( * ) from continents join countries on continents.contid = countries.continent group by continents.contid	SELECT contid, continent, (SELECT COUNT(*) FROM countries WHERE continent = continents.contid) AS country_count FROM continents;
1	select count ( * ) from countries	SELECT count(*) FROM COUNTRIES;
1	select count ( * ) from countries	SELECT count(*) FROM COUNTRIES;
1	select car_makers.fullname , car_makers.id , count ( model_list.model ) as models_produced from car_makers left join model_list on car_makers.id = model_list.maker group by car_makers.id	SELECT fullName, id, (SELECT COUNT(*) FROM model_list WHERE model_list.maker = car_makers.id) AS model_count FROM car_makers
0	select car_makers.fullname , car_makers.id , count ( * ) from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id	SELECT id, fullname, (SELECT COUNT(modelid) FROM model_list WHERE model_list.maker = car_makers.id) AS TotalModels FROM car_makers
0	select model_list.model from cars_data join model_list on cars_data.id = model_list.model where cars_data.horsepower = ( select min ( horsepower ) from cars_data )	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
0	select m.model from model_list as m inner join cars_data as c on m.modelid = c.id where c.horsepower = ( select min ( horsepower ) from cars_data )	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Horsepower = (SELECT MIN(Horsepower) FROM CARS_DATA)
0	select model_list.model from cars_data join model_list on cars_data.id = model_list.maker where cars_data.weight < ( select avg ( weight ) from cars_data )	SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT avg(Weight) FROM CARS_DATA)
0	select cd.id from cars_data cd where cd.weight < ( select avg ( weight ) from cars_data )	SELECT T1.ModelId FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T3.Weight < (SELECT AVG(Weight) FROM cars_data)
0	select car_makers.fullname from cars_data join car_makers on cars_data.id = car_makers.id where cars_data.year = 1970	SELECT DISTINCT T1.FullName FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker JOIN CAR_NAMES AS T3 ON T2.model = T3.model JOIN CARS_DATA AS T4 ON T3.MakeId = T4.id WHERE T4.year = '1970'
0	select distinct car_makers.maker from cars_data join car_makers on cars_data.id = car_makers.id where cars_data.year = 1970	SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker JOIN CAR_NAMES AS T3 ON T2.model = T3.model JOIN CARS_DATA AS T4 ON T3.MakeId = T4.id WHERE T4.year = '1970';
1	select car_names.make , cars_data.year from cars_data join car_names on cars_data.id = car_names.makeid where cars_data.year = ( select min ( year ) from cars_data )	SELECT T2.Make , T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = (SELECT min(YEAR) FROM CARS_DATA);
0	select car_makers.fullname , cars_data.year from car_makers join cars_data on car_makers.id = cars_data.id where cars_data.year = ( select min ( year ) from cars_data )	SELECT T4.FullName , T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model JOIN car_makers AS T4 ON T3.Maker = T4.Id WHERE T1.Year = (SELECT min(YEAR) FROM CARS_DATA);
0	select car_makers.fullname , cars_data.year from car_makers join cars_data on car_makers.id = cars_data.id where cars_data.year = ( select min ( year ) from cars_data )	SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model = T2.model JOIN CARS_DATA AS T3 ON T2.MakeId = T3.id WHERE T3.year > 1980;
0	select distinct car_names.model , car_names.make from cars_data join car_names on cars_data.id = car_names.makeid where cars_data.year > 1980	SELECT DISTINCT T1.ModelId, T1.Model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model = T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId = T3.Id WHERE T3.Year > 1980
1	select continents.continent , count ( * ) from continents join countries on continents.contid = countries.continent join car_makers on countries.countryid = car_makers.country group by continents.continent	SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent;
0	select continents.continent , count ( * ) from continents join countries on continents.contid = countries.continent join car_makers on countries.countryid = car_makers.country group by continents.contid	SELECT cont.continent, numMakers FROM (SELECT contid, COUNT(DISTINCT car_makers.id) as numMakers FROM continents LEFT JOIN countries ON continents.contid = countries.continent LEFT JOIN car_makers ON car_makers.country = countries.countryid GROUP BY contid) AS subquery JOIN continents cont ON cont.contid = subquery.contid
1	select countries.countryname from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) = ( select max ( cnt ) from ( select count ( * ) as cnt from car_makers group by country ) )	SELECT c.countryname FROM countries c JOIN car_makers m ON c.countryid = m.country GROUP BY c.countryid HAVING COUNT(m.id) = (SELECT MAX(cm.count) FROM (SELECT COUNT(id) AS count FROM car_makers GROUP BY country) cm)
0	select countries.countryname from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid order by count ( * ) desc limit 1	SELECT T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T1.Country, T2.CountryName HAVING COUNT(*) = (SELECT MAX(car_count) FROM (SELECT COUNT(*) as car_count FROM car_makers GROUP BY Country) as counts)
1	select count ( * ) , car_makers.fullname from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id	select count(*) , t2.fullname from model_list as t1 join car_makers as t2 on t1.maker = t2.id group by t2.id;
1	select car_makers.id , car_makers.fullname , count ( model_list.model ) as models_count from car_makers left join model_list on car_makers.id = model_list.maker group by car_makers.id	SELECT cm.id, cm.fullname, (SELECT COUNT(*) FROM model_list WHERE model_list.maker = cm.id) AS model_count FROM car_makers cm GROUP BY cm.id, cm.fullname
1	select cars_data.accelerate from cars_data join car_names on cars_data.id = car_names.makeid where car_names.make = 'amc hornet sportabout (sw)'	SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc hornet sportabout (sw)';
1	select cars_data.accelerate from cars_data join car_names on cars_data.id = car_names.makeid where car_names.make = 'amc hornet sportabout (sw)'	SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc hornet sportabout (sw)';
0	select count ( * ) from car_makers join countries on car_makers.country = countries.countryid where countries.countryname = 'France'	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france';
0	select count ( * ) from car_makers join countries on car_makers.country = countries.countryid where countries.countryname = 'France'	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france';
0	select count ( * ) from car_makers join countries on car_makers.country = countries.countryid where countries.countryname = 'France'	SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id JOIN COUNTRIES AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa';
1	select count ( distinct model_list.model ) from car_makers join model_list on car_makers.id = model_list.maker join countries on car_makers.country = countries.countryid where countries.countryname = 'usa'	SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id JOIN COUNTRIES AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa';
1	select avg ( mpg ) from cars_data where cylinders = 4	SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders = 4;
1	select avg ( mpg ) from cars_data where cylinders = 4	SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders = 4;
1	select min ( weight ) from cars_data where cylinders = 8 and year = 1974	select min(weight) from cars_data where cylinders = 8 and year = 1974
1	select min ( weight ) from cars_data where cylinders = 8 and year = 1974	select min(weight) from cars_data where cylinders = 8 and year = 1974
1	select car_makers.fullname , model_list.model from car_makers join model_list on car_makers.id = model_list.maker	SELECT T2.FullName , T1.Model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id;
1	select car_makers.fullname , model_list.model from car_makers join model_list on car_makers.id = model_list.maker	SELECT T2.FullName , T1.Model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id;
1	select countries.countryname , countries.countryid from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) >= 1	SELECT T1.CountryName , T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING count(*) >= 1;
1	select countries.countryname , countries.countryid from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) >= 1	SELECT T1.CountryName , T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING count(*) >= 1;
1	select count ( * ) from cars_data where horsepower > 150	SELECT count(*) FROM CARS_DATA WHERE horsepower > 150;
1	select count ( * ) from cars_data where horsepower > 150	SELECT count(*) FROM CARS_DATA WHERE horsepower > 150;
1	select avg ( weight ) , year from cars_data group by year	SELECT avg(Weight) , YEAR FROM CARS_DATA GROUP BY YEAR;
1	select avg ( weight ) , year from cars_data group by year	SELECT avg(Weight), YEAR FROM CARS_DATA GROUP BY YEAR;
0	select countries.countryname from countries join car_makers on countries.countryid = car_makers.country where countries.continent = 'Europe' group by countries.countryname having count ( * ) >= 3	SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent = T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId = T3.Country WHERE T2.Continent = 'europe' GROUP BY T1.CountryName HAVING count(*) >= 3;
0	select countryname from countries where countryid in ( select country from car_makers group by country having count ( * ) >= 3 )	SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent = T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId = T3.Country WHERE T2.Continent = 'europe' GROUP BY T1.CountryName HAVING count(*) >= 3;
0	select max ( cars_data.horsepower ) , car_names.make from cars_data join car_names on cars_data.id = car_names.makeid where cars_data.cylinders = 3	SELECT T2.horsepower , T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.cylinders = 3 ORDER BY T2.horsepower DESC LIMIT 1;
0	select max ( cars_data.horsepower ) , car_names.make from cars_data join car_names on cars_data.id = car_names.makeid where cars_data.cylinders = 3	SELECT T2.horsepower , T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.cylinders = 3 ORDER BY T2.horsepower DESC LIMIT 1;
0	select model from model_list where model = ( select max ( mpg ) from cars_data )	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id ORDER BY T2.mpg DESC LIMIT 1;
0	select m.model from model_list m where m.model in ( select model from cars_data where mpg = ( select max ( mpg ) from cars_data ) )	select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1;
1	select avg ( horsepower ) from cars_data where year < 1980	SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR < 1980;
1	select avg ( horsepower ) from cars_data where year < 1980	select avg(horsepower) from cars_data where year < 1980;
1	select avg ( cars_data.edispl ) from cars_data join car_names on cars_data.id = car_names.makeid where car_names.model = 'volvo'	SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T1.Model = 'volvo';
0	select avg ( edispl ) from cars_data join car_names on cars_data.id = car_names.makeid where car_names.make = 'Volvo'	SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T1.Model = 'volvo';
1	select max ( accelerate ) , cylinders from cars_data group by cylinders	SELECT max(Accelerate) , Cylinders FROM CARS_DATA GROUP BY Cylinders;
0	select max ( accelerate ) from cars_data group by cylinders	SELECT max(Accelerate) , Cylinders FROM CARS_DATA GROUP BY Cylinders;
0	select model_list.modelid from model_list join car_names on model_list.model = car_names.model group by model_list.modelid order by count ( distinct car_names.makeid ) desc limit 1	SELECT T2.ModelId FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model = T2.Model GROUP BY T2.Model HAVING count(DISTINCT T1.Make) = (SELECT max(cnt) FROM (SELECT count(DISTINCT T3.Make) AS cnt FROM CAR_NAMES AS T3 JOIN MODEL_LIST AS T4 ON T3.Model = T4.Model GROUP BY T4.Model));
0	select model_list.modelid from model_list join car_names on model_list.model = car_names.model group by model_list.modelid order by count ( * ) desc limit 1	SELECT T2.ModelId FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model = T2.Model GROUP BY T2.Model HAVING count(DISTINCT T1.Make) = (SELECT max(cnt) FROM (SELECT count(DISTINCT T3.Make) AS cnt FROM CAR_NAMES AS T3 JOIN MODEL_LIST AS T4 ON T3.Model = T4.Model GROUP BY T4.Model));
1	select count ( * ) from cars_data where cylinders > 4	SELECT count(*) FROM CARS_DATA WHERE Cylinders > 4;
1	select count ( * ) from cars_data where cylinders > 4	SELECT count(*) FROM CARS_DATA WHERE Cylinders > 4;
1	select count ( * ) from cars_data where year = 1980	SELECT count(*) FROM CARS_DATA WHERE YEAR = 1980;
1	select count ( * ) from cars_data where year = 1980	SELECT count(*) FROM CARS_DATA WHERE YEAR = 1980;
1	select count ( distinct model_list.model ) from model_list join car_makers on model_list.maker = car_makers.id where car_makers.fullname = 'American Motor Company'	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company';
1	select count ( distinct model_list.model ) from model_list join car_makers on model_list.maker = car_makers.id where car_makers.fullname = 'American Motor Company'	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company';
1	select car_makers.fullname , car_makers.id from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id having count ( * ) > 3	SELECT T1.FullName , T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING count(*) > 3;
0	select car_makers.maker , car_makers.id from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id having count ( * ) > 3	SELECT T1.FullName , T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING count(*) > 3;
0	select distinct model_list.model from model_list join cars_data on model_list.maker = cars_data.id join car_makers on model_list.maker = car_makers.id where car_makers.fullname = 'General Motors' or cars_data.weight > 3500	SELECT DISTINCT model FROM model_list WHERE maker IN (SELECT id FROM car_makers WHERE fullname = 'General Motors') OR model IN (SELECT cn.model FROM car_names cn JOIN cars_data cd ON cn.makeid = cd.id WHERE cd.weight > 3500)
0	select distinct model_list.model from model_list join cars_data on model_list.maker = cars_data.id join car_makers on model_list.maker = car_makers.id where car_makers.fullname = 'General Motors' or cars_data.weight > 3500	SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model = T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker = T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId = T4.Id WHERE T3.FullName = 'General Motors' OR T4.weight > 3500;
1	select distinct year from cars_data where weight between 3000 and 4000	select distinct year from cars_data where weight between 3000 and 4000;
0	select distinct year from cars_data where weight < 4000 and weight > 3000	SELECT year FROM (SELECT year FROM cars_data WHERE weight > 3000 INTERSECT SELECT year FROM cars_data WHERE weight < 4000)
0	select horsepower from ( select horsepower , max ( accelerate ) as max_accelerate from cars_data group by horsepower ) where max_accelerate = ( select max ( accelerate ) from cars_data )	SELECT d.horsepower FROM cars_data AS d WHERE d.accelerate = (SELECT MAX(accelerate) FROM cars_data)
1	select horsepower from cars_data where accelerate = ( select max ( accelerate ) from cars_data )	SELECT T1.horsepower FROM CARS_DATA AS T1 WHERE T1.accelerate = (SELECT MAX(T2.accelerate) FROM CARS_DATA AS T2)
0	select cylinders from cars_data join car_names on cars_data.id = car_names.makeid where car_names.model = 'Volvo' order by cars_data.accelerate asc limit 1	SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
0	select cylinders from cars_data join car_names on cars_data.id = car_names.makeid where car_names.model = 'Volvo' order by cars_data.accelerate asc limit 1	SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
0	select count ( * ) from cars_data where accelerate > ( select max ( accelerate ) from cars_data )	SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate > ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
0	select count ( * ) from cars_data where accelerate > ( select max ( accelerate ) from cars_data where horsepower = ( select max ( horsepower ) from cars_data ) )	SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate > ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
1	select count ( * ) from ( select country from car_makers group by country having count ( * ) > 2 )	SELECT COUNT(countryid) FROM (SELECT countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countryid HAVING COUNT(car_makers.id) > 2)
1	select count ( * ) from ( select country from car_makers group by country having count ( * ) > 2 )	SELECT COUNT(countryid) FROM (SELECT countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countryid HAVING COUNT(car_makers.id) > 2)
1	select count ( * ) from cars_data where cylinders > 6	SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders > 6;
1	select count ( * ) from cars_data where cylinders > 6	SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders > 6;
0	select count ( * ) from cars_data where cylinders > 6	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.horsepower DESC LIMIT 1;
0	select count ( * ) from cars_data where cylinders > 6	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.horsepower DESC LIMIT 1;
1	select car_names.makeid , car_names.make from cars_data join car_names on cars_data.id = car_names.makeid where cars_data.horsepower > ( select min ( horsepower ) from cars_data ) and cylinders <= 3	SELECT T2.MakeId , T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower > (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders <= 3;
0	select makeid , make from car_names where makeid not in ( select min ( horsepower ) from cars_data )	select t2.makeid , t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.horsepower > (select min(horsepower) from cars_data) and t1.cylinders < 4;
1	select max ( mpg ) from cars_data where cylinders = 8 or year < 1980	select max(mpg) from cars_data where cylinders = 8 or year < 1980
1	select max ( mpg ) from cars_data where cylinders = 8 or year < 1980	select max(mpg) from cars_data where cylinders = 8 or year < 1980
0	select id from cars_data where weight < 3500 except select id from car_makers where maker = 'Ford Motor Company'	SELECT DISTINCT T1.ModelId FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model = T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId = T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker = T4.Id WHERE T3.weight < 3500 AND T4.FullName != 'Ford Motor Company'
0	select id from cars_data where weight < 3500 except select id from car_makers where maker = 'Ford Motor Company'	SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model = T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId = T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker = T4.Id WHERE T3.weight < 3500 AND T4.FullName != 'Ford Motor Company';
1	select countryname from countries where countryid not in ( select country from car_makers )	SELECT countryname FROM countries WHERE countryid NOT IN (SELECT country FROM car_makers)
1	select countryname from countries where countryid not in ( select country from car_makers )	SELECT countryname FROM countries WHERE countryid NOT IN (SELECT country FROM car_makers)
0	select car_makers.id , car_makers.maker from model_list join car_names on model_list.model = car_names.model join car_makers on car_names.makeid = car_makers.id group by car_makers.id having count ( * ) >= 2 intersect select car_makers.id , car_makers.maker from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id having count ( * ) >= 3	select t1.id , t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count(*) >= 2 intersect select t1.id , t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker join car_names as t3 on t2.model = t3.model group by t1.id having count(*) > 3;
0	select car_makers.id , car_makers.maker from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id having count ( * ) >= 2 intersect select car_makers.id , car_makers.maker from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id having count ( * ) > 3	SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING count(*) >= 2 INTERSECT SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker JOIN CAR_NAMES AS T3 ON T2.model = T3.model GROUP BY T1.Id HAVING count(*) > 3;
0	select countries.countryid , countries.countryname from countries join car_makers on countries.countryid = car_makers.country group by countries.countryid having count ( * ) > 3 union select countryid , countryname from countries join car_makers on countries.countryid = car_makers.country where car_makers.maker in ( select maker from model_list where model = 'fiat' )	SELECT T1.countryId , T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.countryId HAVING count(*) > 3 UNION SELECT T1.countryId , T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country JOIN MODEL_LIST AS T3 ON T2.Id = T3.Maker WHERE T3.Model = 'fiat';
0	select countryid , countryname from countries group by countryid having count ( * ) > 3 union select countryid , countryname from countries where countryid in ( select country from car_makers where maker = 'Fiat' )	select t1.countryid , t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count(*) > 3 union select t1.countryid , t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country join model_list as t3 on t2.id = t3.maker where t3.model = 'fiat';
1	select country from airlines where airline = 'JetBlue Airways'	SELECT Country FROM AIRLINES WHERE Airline = 'JetBlue Airways'
0	select country from airlines where airline = 'Jetblue Airways'	SELECT Country FROM AIRLINES WHERE Airline = 'JetBlue Airways'
1	select abbreviation from airlines where airline = 'JetBlue Airways'	SELECT Abbreviation FROM AIRLINES WHERE Airline = 'JetBlue Airways'
1	select abbreviation from airlines where airline = 'JetBlue Airways'	SELECT Abbreviation FROM AIRLINES WHERE Airline = 'JetBlue Airways'
1	select distinct airline , abbreviation from airlines where country = 'USA'	SELECT DISTINCT Airline , Abbreviation FROM AIRLINES WHERE Country = 'USA'
0	select airline , abbreviation from airlines where country = 'United States'	SELECT Airline , Abbreviation FROM AIRLINES WHERE Country = 'USA'
1	select airportcode , airportname from airports where city = 'Anthony'	SELECT AirportCode , AirportName FROM AIRPORTS WHERE city = 'Anthony'
1	select airportcode , airportname from airports where city = 'Anthony'	SELECT AirportCode , AirportName FROM AIRPORTS WHERE city = 'Anthony'
1	select count ( * ) from airlines	SELECT count(*) FROM AIRLINES
1	select count ( * ) from airlines	SELECT count(*) FROM AIRLINES
1	select count ( * ) from airports	SELECT count(*) FROM AIRPORTS
1	select count ( * ) from airports	SELECT count(*) FROM AIRPORTS
1	select count ( * ) from flights	SELECT count(*) FROM FLIGHTS
1	select count ( * ) from flights	SELECT count(*) FROM FLIGHTS
1	select airline from airlines where abbreviation = 'UAL'	SELECT Airline FROM AIRLINES WHERE Abbreviation = 'UAL'
1	select airline from airlines where abbreviation = 'UAL'	SELECT Airline FROM AIRLINES WHERE Abbreviation = 'UAL'
1	select count ( * ) from airlines where country = 'USA'	SELECT count(*) FROM AIRLINES WHERE Country = 'USA'
0	select count ( * ) from airlines where country = 'United States'	SELECT count(*) FROM AIRLINES WHERE Country = 'USA'
1	select city , country from airports where airportname = 'Alton'	SELECT City , Country FROM AIRPORTS WHERE AirportName = 'Alton'
1	select city , country from airports where airportname = 'Alton'	SELECT City , Country FROM AIRPORTS WHERE AirportName = 'Alton'
1	select airportname from airports where airportcode = 'AKO'	SELECT AirportName FROM AIRPORTS WHERE AirportCode = 'AKO'
1	select airportname from airports where airportcode = 'AKO'	SELECT AirportName FROM AIRPORTS WHERE AirportCode = 'AKO'
1	select distinct airportname from airports where city = 'Aberdeen'	SELECT DISTINCT AirportName FROM AIRPORTS WHERE City = 'Aberdeen'
1	select airportname from airports where city = 'Aberdeen'	SELECT AirportName FROM AIRPORTS WHERE City = 'Aberdeen'
0	select count ( * ) from airports join flights on airports.airportcode = flights.sourceairport where airports.airportname = 'APG'	SELECT count(*) FROM FLIGHTS WHERE SourceAirport = 'APG'
0	select count ( * ) from airports join flights on airports.airportcode = flights.sourceairport where airports.airportname = 'APG'	SELECT count(*) FROM FLIGHTS WHERE SourceAirport = 'APG'
1	select count ( * ) from flights where destairport = 'ATO'	SELECT count(*) FROM FLIGHTS WHERE DestAirport = 'ATO'
0	select count ( * ) from flights join airports on flights.destairport = airports.airportcode where airports.airportname = 'ATO'	SELECT count(*) FROM FLIGHTS WHERE DestAirport = 'ATO'
0	select count ( * ) from airports join flights on airports.airportcode = flights.sourceairport where airports.airportname = 'City Aberdeen'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = 'Aberdeen'
1	select count ( * ) from airports join flights on airports.airportcode = flights.sourceairport where airports.city = 'Aberdeen'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = 'Aberdeen'
1	select count ( * ) from airports join flights on airports.airportcode = flights.destairport where airports.city = 'Aberdeen'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = 'Aberdeen'
1	select count ( * ) from airports join flights on airports.airportcode = flights.destairport where airports.city = 'Aberdeen'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = 'Aberdeen'
0	select count ( * ) from airports join flights on airports.airportcode = flights.sourceairport where airports.city = 'Aberdeen' and airports.city = 'Ashley'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport = T3.AirportCode WHERE T2.City = 'Ashley' AND T3.City = 'Aberdeen'
0	select count ( * ) from flights join airports on flights.sourceairport = airports.airportcode where airports.airportname = 'Aberdeen' and airports.airportname = 'Ashley'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport = T3.AirportCode WHERE T2.City = 'Ashley' AND T3.City = 'Aberdeen'
1	select count ( * ) from airlines join flights on airlines.uid = flights.airline where airlines.airline = 'JetBlue Airways'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = 'JetBlue Airways'
0	select count ( * ) from flights join airlines on flights.airline = airlines.uid where airlines.airline = 'Jetblue Airways'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = 'JetBlue Airways'
0	select count ( * ) from airports join flights on airports.airportcode = flights.destairport join airlines on flights.airline = airlines.uid where airports.airportname = 'ASY' and airlines.airline = 'United Airlines'	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid WHERE T1.Airline = 'United Airlines' AND T2.DestAirport = 'ASY'
0	select count ( * ) from airports join flights on airports.airportcode = flights.destairport join airlines on flights.airline = airlines.uid where airports.airportname = 'ASY' and airlines.airline = 'United Airlines'	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid WHERE T1.Airline = 'United Airlines' AND T2.DestAirport = 'ASY'
0	select count ( * ) from airports join flights on airports.airportcode = flights.sourceairport join airlines on flights.airline = airlines.uid where airports.airportname = 'AHD' and airlines.airline = 'United Airlines'	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid WHERE T1.Airline = 'United Airlines' AND T2.SourceAirport = 'AHD'
0	select count ( * ) from airports join flights on airports.airportcode = flights.sourceairport join airlines on flights.airline = airlines.uid where airports.airportname = 'AHD' and airlines.airline = 'United Airlines'	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid WHERE T1.Airline = 'United Airlines' AND T2.SourceAirport = 'AHD'
1	select count ( * ) from airports join flights on airports.airportcode = flights.destairport join airlines on flights.airline = airlines.uid where airports.city = 'Aberdeen' and airlines.airline = 'United Airlines'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid = T1.Airline WHERE T2.City = 'Aberdeen' AND T3.Airline = 'United Airlines'
1	select count ( * ) from airports join flights on airports.airportcode = flights.destairport join airlines on flights.airline = airlines.uid where airports.city = 'Aberdeen' and airlines.airline = 'United Airlines'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid = T1.Airline WHERE T2.City = 'Aberdeen' AND T3.Airline = 'United Airlines'
0	select airports.city from airports join flights on airports.airportcode = flights.sourceairport group by airports.city order by count ( * ) desc limit 1	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport GROUP BY T1.City HAVING COUNT(*) = (SELECT MAX(flight_count) FROM (SELECT COUNT(*) AS flight_count FROM AIRPORTS AS T3 JOIN FLIGHTS AS T4 ON T3.AirportCode = T4.DestAirport GROUP BY T3.City) AS subquery)
0	select a.city from airports a where ( select count ( * ) from flights f where f.destairport = a.airportcode ) = ( select max ( count ) from ( select count ( * ) as count from flights group by destairport ) )	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport GROUP BY T1.City HAVING COUNT(*) = (SELECT MAX(flight_count) FROM (SELECT COUNT(*) AS flight_count FROM AIRPORTS AS T3 JOIN FLIGHTS AS T4 ON T3.AirportCode = T4.DestAirport GROUP BY T3.City) AS subquery)
0	select airports.city from airports join flights on airports.airportcode = flights.destairport group by airports.city order by count ( * ) desc limit 1	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.SourceAirport GROUP BY T1.City HAVING count(*) = (SELECT MAX(Cnt) FROM (SELECT count(*) as Cnt FROM AIRPORTS JOIN FLIGHTS ON AirportCode = SourceAirport GROUP BY City) as maxTable)
0	select a.city from airports a , flights f where a.airportcode = f.sourceairport group by a.city having count ( f.sourceairport ) = ( select max ( count ) from ( select count ( * ) as count from flights group by sourceairport ) )	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.SourceAirport GROUP BY T1.City HAVING count(*) = (SELECT MAX(Cnt) FROM (SELECT count(*) as Cnt FROM AIRPORTS JOIN FLIGHTS ON AirportCode = SourceAirport GROUP BY City) as maxTable)
0	select a.city from airports a , flights f where a.airportcode = f.sourceairport group by a.city having count ( f.sourceairport ) = ( select max ( count ) from ( select count ( * ) as count from flights group by sourceairport ) )	WITH CombinedAirports AS (SELECT sourceairport AS airportcode FROM flights UNION ALL SELECT destairport AS airportcode FROM flights) SELECT airportcode FROM CombinedAirports GROUP BY airportcode HAVING COUNT(airportcode) = (SELECT MAX(Count) FROM (SELECT COUNT(airportcode) AS Count FROM CombinedAirports GROUP BY airportcode))
0	select a.airportcode from airports a join flights f on a.airportcode = f.sourceairport group by a.airportcode having count ( f.flightno ) = ( select max ( count ) from ( select count ( * ) as count from flights group by sourceairport ) )	SELECT combined.airport FROM (SELECT sourceairport AS airport FROM flights UNION ALL SELECT destairport AS airport FROM flights) combined GROUP BY combined.airport HAVING COUNT(*) = (SELECT max(C) FROM (SELECT COUNT(*) AS C FROM (SELECT sourceairport AS airport FROM flights UNION ALL SELECT destairport AS airport FROM flights) t GROUP BY t.airport))
0	select a.airportcode from airports a join flights f on a.airportcode = f.sourceairport group by a.airportcode order by sum ( f.flightno ) asc limit 1	SELECT airportcode FROM ( SELECT sourceairport AS airportcode FROM flights UNION ALL SELECT destairport FROM flights ) AllFlights GROUP BY airportcode HAVING COUNT(*) = (SELECT MIN(Count) FROM ( SELECT COUNT(*) AS Count FROM ( SELECT sourceairport AS airportcode FROM flights UNION ALL SELECT destairport FROM flights ) GROUPED GROUP BY airportcode ))
0	select a.airportcode from airports a join flights f on a.airportcode = f.sourceairport group by a.airportcode order by sum ( f.flightno ) asc limit 1	SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport GROUP BY T1.AirportCode HAVING COUNT(*) = (SELECT MIN(C) FROM (SELECT COUNT(*) AS C FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport GROUP BY T1.AirportCode) AS max_count)
1	select a.airline from airlines a join flights f on a.uid = f.airline group by a.uid having count ( f.flightno ) = ( select max ( countflights ) from ( select count ( flightno ) as countflights from flights group by airline ) )	SELECT airline FROM airlines WHERE uid IN (SELECT airline FROM flights GROUP BY airline HAVING COUNT(flightno) = (SELECT MAX(cnt) FROM (SELECT COUNT(flightno) AS cnt FROM flights GROUP BY airline)))
0	select a.airline from airlines a join flights f on a.uid = f.airline group by a.uid having count ( f.flightno ) = ( select max ( countflights ) from ( select count ( flightno ) as countflights from flights group by airline ) )	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING count(*) = (SELECT MAX(FlightCount) FROM (SELECT count(*) AS FlightCount FROM FLIGHTS GROUP BY Airline) AS SubQuery)
0	select a.abbreviation , a.country from airlines a inner join flights f on a.uid = f.airline group by a.uid having sum ( f.flightno ) = ( select min ( total ) from ( select sum ( flightno ) as total from flights group by airline ) )	SELECT T1.Abbreviation, T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.uid, T1.Abbreviation, T1.Country HAVING COUNT(*) = (SELECT MIN(Cnt) FROM (SELECT COUNT(*) AS Cnt FROM FLIGHTS GROUP BY Airline) AS Temp)
1	select a.abbreviation , a.country from airlines a inner join flights f on a.uid = f.airline group by a.uid having count ( f.flightno ) = ( select min ( countflights ) from ( select count ( flightno ) as countflights from flights group by airline ) )	SELECT T1.Abbreviation, T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.uid, T1.Abbreviation, T1.Country HAVING COUNT(*) = (SELECT MIN(flight_count) FROM (SELECT COUNT(*) AS flight_count FROM flights GROUP BY Airline) AS subquery)
0	select airlines.airline from airlines join flights on airlines.uid = flights.airline join airports on flights.sourceairport = airports.airportcode where airports.airportcode = 'AHD'	SELECT T1.Airline FROM airlines as T1 WHERE T1.uid in (SELECT T2.Airline FROM flights as T2 WHERE T2.sourceairport = 'AHD')
0	select distinct a.airline from airlines a join flights f on a.uid = f.airline where f.sourceairport = 'AHD'	SELECT T1.Airline FROM airlines as T1 WHERE T1.uid in (SELECT T2.Airline FROM flights as T2 WHERE T2.sourceairport = 'AHD')
0	select airlines.airline from airports join flights on airports.airportcode = flights.sourceairport join airlines on flights.airline = airlines.uid where airports.airportcode = 'AHD'	SELECT airline FROM airlines WHERE uid IN (SELECT DISTINCT airline FROM flights WHERE destairport = 'AHD')
0	select airlines.airline from airlines join flights on airlines.uid = flights.airline join airports on flights.destairport = airports.airportcode where airports.airportcode = 'AHD'	SELECT T1.Airline FROM airlines as T1 WHERE T1.uid in (SELECT T2.Airline FROM flights as T2 WHERE T2.sourceairport = 'AHD')
0	select airlines.airline from airlines join flights on airlines.uid = flights.airline join airports on flights.sourceairport = airports.airportcode where airports.airportname = 'APG' intersect select airlines.airline from airlines join flights on airlines.uid = flights.airline join airports on flights.destairport = airports.airportcode where airports.airportname = 'CVO'	SELECT al.airline FROM airlines al WHERE EXISTS (SELECT 1 FROM flights f WHERE f.airline = al.uid AND f.sourceairport = 'APG') AND EXISTS (SELECT 1 FROM flights f WHERE f.airline = al.uid AND f.sourceairport = 'CVO')
0	select airlines.airline from airlines join flights on airlines.uid = flights.airline join airports on flights.sourceairport = airports.airportcode where airports.airportname = 'APG' intersect select airlines.airline from airlines join flights on airlines.uid = flights.airline join airports on flights.destairport = airports.airportcode where airports.airportname = 'CVO'	SELECT al.airline FROM airlines al WHERE al.uid IN (SELECT airline FROM flights WHERE sourceairport = 'APG') AND al.uid IN (SELECT airline FROM flights WHERE sourceairport = 'CVO')
0	select airlines.airline from airlines join flights on airlines.uid = flights.airline join airports on flights.sourceairport = airports.airportcode where airports.airportname = 'CVO' except select airlines.airline from airlines join flights on airlines.uid = flights.airline join airports on flights.destairport = airports.airportcode where airports.airportname = 'APG'	SELECT al.airline FROM airlines al WHERE al.uid IN (SELECT airline FROM flights WHERE sourceairport = 'CVO') AND al.uid NOT IN (SELECT airline FROM flights WHERE sourceairport = 'APG');
0	select airlines.airline from airlines join flights on airlines.uid = flights.airline join airports on flights.sourceairport = airports.airportcode where airports.airportname = 'CVO' except select airlines.airline from airlines join flights on airlines.uid = flights.airline join airports on flights.destairport = airports.airportcode where airports.airportname = 'APG'	SELECT al.airline FROM airlines al WHERE al.uid IN (SELECT airline FROM flights WHERE sourceairport = 'CVO') AND al.uid NOT IN (SELECT airline FROM flights WHERE sourceairport = 'APG');
1	select airlines.airline from airlines join flights on airlines.uid = flights.airline group by airlines.uid having count ( * ) >= 10	SELECT airline FROM airlines WHERE uid IN (SELECT airline FROM flights GROUP BY airline HAVING COUNT(*) >= 10)
1	select airlines.airline from airlines join flights on airlines.uid = flights.airline group by airlines.uid having count ( * ) >= 10	SELECT a.airline FROM airlines a WHERE (SELECT COUNT(*) FROM flights f WHERE f.airline = a.uid) >= 10
0	select airlines.airline from airlines join flights on airlines.uid = flights.airline group by airlines.uid having count ( * ) < 200	SELECT A.airline FROM airlines A WHERE (SELECT COUNT(*) FROM flights F WHERE F.airline = A.uid) < 200
1	select a.airline from airlines a left join flights f on a.uid = f.airline group by a.uid having count ( f.flightno ) < 200	SELECT a.airline FROM airlines a WHERE (SELECT COUNT(*) FROM flights f WHERE f.airline = a.uid) < 200
0	select distinct flightno from flights join airlines on flights.airline = airlines.uid where airlines.airline = 'United Airlines'	SELECT DISTINCT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = 'Aberdeen'
1	select flights.flightno from flights join airlines on flights.airline = airlines.uid where airlines.airline = 'United Airlines'	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid = T1.Airline WHERE T2.Airline = 'United Airlines'
0	select flights.flightno from flights join airports on flights.sourceairport = airports.airportcode where airports.airportname = 'APG'	SELECT FlightNo FROM FLIGHTS WHERE SourceAirport = 'APG'
1	select flightno from flights where sourceairport = 'APG'	SELECT FlightNo FROM FLIGHTS WHERE SourceAirport = 'APG'
0	select flights.flightno from airports join flights on airports.airportcode = flights.destairport where airports.airportname = 'APG'	SELECT FlightNo FROM FLIGHTS WHERE DestAirport = 'APG'
0	select flights.flightno from airports join flights on airports.airportcode = flights.destairport where airports.airportname = 'APG'	SELECT FlightNo FROM FLIGHTS WHERE DestAirport = 'APG'
1	select distinct flights.flightno from flights join airports on flights.sourceairport = airports.airportcode where airports.city = 'Aberdeen'	SELECT DISTINCT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = 'Aberdeen'
1	select flights.flightno from flights join airports on flights.sourceairport = airports.airportcode where airports.city = 'Aberdeen'	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = 'Aberdeen'
1	select flights.flightno from airports join flights on airports.airportcode = flights.destairport where airports.city = 'Aberdeen'	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = 'Aberdeen'
0	select flights.flightno from airports join flights on airports.airportcode = flights.destairport where airports.airportname = 'Aberdeen'	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = 'Aberdeen'
1	select count ( * ) from airports join flights on airports.airportcode = flights.destairport where airports.city = 'Aberdeen' or airports.city = 'Abilene'	SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.city = 'Aberdeen' OR T2.city = 'Abilene'
0	select count ( * ) from airports join flights on airports.airportcode = flights.destairport where airports.airportname = 'Aberdeen' or airports.airportname = 'Abilene'	SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.city = 'Aberdeen' OR T2.city = 'Abilene'
0	select airportname from airports where airportcode not in ( select sourceairport from flights )	SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
0	select airports.airportname from airports left join flights on airports.airportcode = flights.destairport except select airports.airportname from airports left join flights on airports.airportcode = flights.sourceairport	SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
1	select count ( * ) from employee	SELECT count(*) FROM employee
1	select count ( * ) from employee	SELECT count(*) FROM employee
1	select name from employee order by age asc , employee_id	SELECT name FROM employee ORDER BY age, Employee_ID
0	select name from employee order by age asc , employee_id	SELECT name FROM employee ORDER BY age, name ASC
1	select city , count ( * ) from employee group by city	SELECT count(*) , city FROM employee GROUP BY city
1	select count ( * ) , city from employee group by city	SELECT count(*) , city FROM employee GROUP BY city
1	select city from employee where age < 30 group by city having count ( * ) > 1	SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1
1	select city from employee where age < 30 group by city having count ( * ) > 1	SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1
1	select location , count ( * ) from shop group by location	SELECT count(*) , LOCATION FROM shop GROUP BY LOCATION
1	select location , count ( * ) from shop group by location	SELECT count(*) , LOCATION FROM shop GROUP BY LOCATION
1	select manager_name , district from shop where number_products = ( select max ( number_products ) from shop )	SELECT manager_name, district FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop)
1	select manager_name , district from shop where number_products = ( select max ( number_products ) from shop )	SELECT manager_name, district FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop)
1	select min ( number_products ) , max ( number_products ) from shop	SELECT min(Number_products) , max(Number_products) FROM shop
1	select min ( number_products ) , max ( number_products ) from shop	SELECT min(Number_products) , max(Number_products) FROM shop
0	select min ( number_products ) , max ( number_products ) from shop	SELECT name, LOCATION, district FROM shop ORDER BY number_products DESC, Shop_ID ASC
0	select min ( number_products ) , max ( number_products ) from shop	SELECT name, location, district FROM shop ORDER BY number_products DESC, Shop_ID ASC
1	select name from shop where number_products > ( select avg ( number_products ) from shop )	SELECT name FROM shop WHERE number_products > (SELECT avg(number_products) FROM shop)
1	select name from shop where number_products > ( select avg ( number_products ) from shop )	SELECT name FROM shop WHERE number_products > (SELECT avg(number_products) FROM shop)
1	select name from employee where employee_id in ( select employee_id from evaluation group by employee_id having count ( * ) = ( select max ( cnt ) from ( select count ( * ) as cnt from evaluation group by employee_id ) ) )	SELECT E.name FROM employee AS E WHERE E.Employee_ID IN (SELECT Employee_ID FROM evaluation GROUP BY Employee_ID HAVING COUNT(*) = (SELECT MAX(C) FROM (SELECT COUNT(*) AS C FROM evaluation GROUP BY employee_id) AS T))
0	select e.name from employee e where e.employee_id in ( select e.employee_id from evaluation e group by e.employee_id having count ( e.bonus ) = ( select max ( award_count ) from ( select count ( bonus ) as award_count from evaluation group by employee_id ) ) )	WITH AwardCount AS (SELECT t1.Name, COUNT(*) as TotalAwards FROM employee t1 JOIN evaluation t2 ON t1.Employee_ID = t2.Employee_ID GROUP BY t1.Name) SELECT Name FROM AwardCount WHERE TotalAwards = (SELECT MAX(TotalAwards) FROM AwardCount)
1	select name from employee where employee_id in ( select employee_id from evaluation where bonus = ( select max ( bonus ) from evaluation ) )	SELECT e.name FROM employee e WHERE e.Employee_ID in (SELECT ev.Employee_ID FROM evaluation ev WHERE ev.bonus = (SELECT MAX(ev2.bonus) FROM evaluation ev2))
1	select e.name from employee e where e.employee_id in ( select e.employee_id from evaluation e where e.bonus = ( select max ( bonus ) from evaluation ) )	SELECT e.name FROM employee e WHERE e.employee_id IN (SELECT ee.employee_id FROM evaluation ee WHERE ee.bonus = (SELECT MAX(bonus) FROM evaluation))
1	select name from employee where employee_id not in ( select employee_id from evaluation )	SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
1	select name , employee_id from employee where employee_id not in ( select employee_id from evaluation )	SELECT Employee_ID, Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
1	select name from shop where shop_id in ( select shop_id from hiring group by shop_id having count ( employee_id ) = ( select max ( cnt ) from ( select count ( employee_id ) as cnt from hiring group by shop_id ) ) )	SELECT t2.Name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t1.shop_id HAVING count(*) = (SELECT MAX(employee_count) FROM (SELECT count(*) AS employee_count FROM hiring GROUP BY shop_id) AS counts)
1	select name from shop where shop_id in ( select shop_id from hiring group by shop_id having count ( employee_id ) = ( select max ( cnt ) from ( select count ( employee_id ) as cnt from hiring group by shop_id ) ) )	SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t1.shop_id HAVING COUNT(*) = (SELECT MAX(total_employees) FROM (SELECT COUNT(*) AS total_employees FROM hiring GROUP BY shop_id) AS employee_counts)
1	select name from shop where shop_id not in ( select shop_id from hiring )	SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
1	select name from shop where shop_id not in ( select shop_id from hiring )	SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
1	select shop.name , ( select count ( employee_id ) from hiring where shop_id = shop.shop_id ) as employee_count from shop	SELECT name, (SELECT COUNT(*) FROM hiring WHERE hiring.shop_id = shop.shop_id) AS num_employees FROM shop
1	select shop.name , ( select count ( employee_id ) from hiring where shop_id = shop.shop_id ) as employee_count from shop	SELECT shop.name, (SELECT COUNT(*) FROM hiring WHERE hiring.shop_id = shop.shop_id) AS emp_count FROM shop
1	select sum ( bonus ) from evaluation	SELECT sum(bonus) FROM evaluation
1	select sum ( bonus ) from evaluation	SELECT sum(bonus) FROM evaluation
1	select * from hiring	SELECT * FROM hiring
1	select * from hiring	SELECT * FROM hiring
1	select district from shop where number_products < 3000 intersect select district from shop where number_products > 10000	SELECT district FROM shop WHERE Number_products < 3000 INTERSECT SELECT district FROM shop WHERE Number_products > 10000
1	select district from shop where number_products < 3000 intersect select district from shop where number_products > 10000	SELECT district FROM shop WHERE Number_products < 3000 INTERSECT SELECT district FROM shop WHERE Number_products > 10000
1	select count ( distinct location ) from shop	SELECT count(DISTINCT LOCATION) FROM shop
1	select count ( distinct location ) from shop	SELECT count(DISTINCT LOCATION) FROM shop
1	select count ( * ) from documents	SELECT count(*) FROM Documents
1	select count ( * ) from documents	SELECT count(*) FROM Documents
1	select document_id , document_name , document_description from documents	SELECT document_id , document_name , document_description FROM Documents
1	select document_id , document_name , document_description from documents	SELECT document_id , document_name , document_description FROM Documents
0	select document_name , template_id from documents where instr ( document_description , 'w' ) > 0	SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE '%w%'
1	select document_name , template_id from documents where document_description like '%w%'	SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE '%w%'
1	select document_id , template_id , document_description from documents where document_name = 'Robbin CV'	SELECT document_id , template_id , Document_Description FROM Documents WHERE document_name = 'Robbin CV'
1	select document_id , template_id , document_description from documents where document_name = 'Robbin CV'	SELECT document_id , template_id , Document_Description FROM Documents WHERE document_name = 'Robbin CV'
1	select count ( distinct template_id ) from documents	SELECT count(DISTINCT template_id) FROM Documents
1	select count ( distinct template_id ) from documents	SELECT count(DISTINCT template_id) FROM Documents
1	select count ( * ) from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = 'PPT'	SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'PPT'
1	select count ( * ) from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = 'PPT'	SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'PPT'
1	select t.template_id , count ( d.document_id ) from templates t left join documents d on t.template_id = d.template_id group by t.template_id	SELECT t.template_id, COUNT(d.document_id) AS number_of_documents FROM templates t LEFT JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_id
1	select template_id , count ( * ) from documents group by template_id	SELECT template_id , count(*) FROM Documents GROUP BY template_id
1	select first.template_id , first.template_type_code from templates first where ( select count ( * ) from documents where template_id = first.template_id ) = ( select max ( second.count ) from ( select count ( * ) as count from documents group by template_id ) second )	SELECT T1.template_id, T2.Template_Type_code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_id, T2.Template_Type_code HAVING COUNT(*) = (SELECT MAX(doc_count) FROM (SELECT COUNT(*) AS doc_count FROM Documents GROUP BY template_id) AS max_count)
0	select templates.template_id , templates.template_type_code from templates join documents on templates.template_id = documents.template_id group by templates.template_id order by count ( * ) desc limit 1	SELECT T1.template_id, T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_id, T2.Template_Type_Code HAVING COUNT(*) = (SELECT MAX(doc_count) FROM (SELECT COUNT(*) AS doc_count FROM Documents GROUP BY template_id) AS subquery)
1	select templates.template_id from documents join templates on documents.template_id = templates.template_id group by templates.template_id having count ( * ) > 1	SELECT template_id FROM Documents GROUP BY template_id HAVING count(*) > 1
1	select templates.template_id from documents join templates on documents.template_id = templates.template_id group by templates.template_id having count ( * ) > 1	SELECT template_id FROM Documents GROUP BY template_id HAVING count(*) > 1
1	select template_id from templates except select template_id from documents	SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
1	select template_id from templates except select template_id from documents	SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
1	select count ( * ) from templates	SELECT count(*) FROM Templates
1	select count ( * ) from templates	SELECT count(*) FROM Templates
1	select template_id , version_number , template_type_code from templates	SELECT template_id , version_number , template_type_code FROM Templates
1	select template_id , version_number , template_type_code from templates	SELECT template_id , version_number , template_type_code FROM Templates
1	select distinct template_type_code from templates	SELECT DISTINCT template_type_code FROM Templates
1	select distinct template_type_code from ref_template_types	SELECT DISTINCT template_type_code FROM ref_template_types;
1	select template_id from templates where template_type_code = 'PP' or template_type_code = 'PPT'	SELECT template_id FROM Templates WHERE template_type_code = 'PP' OR template_type_code = 'PPT'
1	select template_id from templates where template_type_code = 'PP' or template_type_code = 'PPT'	SELECT template_id FROM Templates WHERE template_type_code = 'PP' OR template_type_code = 'PPT'
1	select count ( * ) from templates where template_type_code = 'CV'	SELECT count(*) FROM Templates WHERE template_type_code = 'CV'
1	select count ( * ) from templates where template_type_code = 'CV'	SELECT count(*) FROM Templates WHERE template_type_code = 'CV'
1	select version_number , template_type_code from templates where version_number > 5	SELECT version_number , template_type_code FROM Templates WHERE version_number > 5
1	select version_number , template_type_code from templates where version_number > 5	SELECT version_number , template_type_code FROM Templates WHERE version_number > 5
0	select rt.template_type_code , count ( t.template_id ) from ref_template_types rt left join templates t on rt.template_type_code = t.template_type_code group by rt.template_type_code	SELECT template_type_code , count(*) FROM Templates GROUP BY template_type_code
1	select template_type_code , count ( * ) from templates group by template_type_code	SELECT template_type_code , count(*) FROM Templates GROUP BY template_type_code
1	select template_type_code from templates group by template_type_code having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from templates group by template_type_code ) )	WITH template_counts AS (SELECT template_type_code, COUNT(*) AS template_count FROM Templates GROUP BY template_type_code) SELECT template_type_code FROM template_counts WHERE template_count = (SELECT MAX(template_count) FROM template_counts)
1	select template_type_code from templates group by template_type_code having count ( template_id ) = ( select max ( count ) from ( select count ( template_id ) as count from templates group by template_type_code ) )	SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*) = (SELECT max(count) FROM (SELECT count(*) as count FROM Templates GROUP BY template_type_code) as counts)
1	select template_type_code from templates group by template_type_code having count ( * ) < 3	SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*) < 3
0	select template_type_code from templates group by template_type_code having count ( * ) < 3	SELECT r.template_type_code FROM ref_template_types r WHERE (SELECT COUNT(*) FROM templates t WHERE t.template_type_code = r.template_type_code) < 3
0	select min ( version_number ) , template_type_code from templates group by template_type_code	SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number = (SELECT MIN(Version_Number) FROM Templates)
0	select min ( version_number ) , template_type_code from templates	SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number = (SELECT MIN(Version_Number) FROM Templates)
1	select template_type_code from templates where exists ( select 1 from documents where templates.template_id = documents.template_id and document_name = 'Data base' )	SELECT template_type_code FROM templates WHERE template_id IN (SELECT template_id FROM documents WHERE document_name = 'Data base')
0	select templates.template_type_code from templates join documents on templates.template_id = documents.template_id where documents.document_name = 'Data base'	SELECT ref_template_types.template_type_code FROM ref_template_types WHERE ref_template_types.template_type_code IN (SELECT t.template_type_code FROM templates t JOIN documents d ON t.template_id = d.template_id WHERE d.document_name = 'Data base')
1	select document_name from documents where template_id in ( select template_id from templates where template_type_code = 'BK' )	SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id WHERE T1.template_type_code = 'BK'
1	select documents.document_name from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = 'BK'	SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id WHERE T1.template_type_code = 'BK'
0	select templates.template_type_code , count ( distinct documents.document_id ) from templates left join documents on templates.template_id = documents.template_id group by templates.template_type_code	SELECT rt.template_type_code, COUNT(distinct doc.document_id) FROM ref_template_types rt LEFT JOIN templates temp ON rt.template_type_code = temp.template_type_code LEFT JOIN documents doc ON temp.template_id = doc.template_id GROUP BY rt.template_type_code
0	select templates.template_type_code , count ( distinct documents.document_id ) as num_docs from templates left join documents on templates.template_id = documents.template_id group by templates.template_type_code	SELECT ref_template_types.template_type_code, COUNT(documents.document_id) AS document_count FROM ref_template_types LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code LEFT JOIN documents ON templates.template_id = documents.template_id GROUP BY ref_template_types.template_type_code
0	select templates.template_type_code from templates join documents on templates.template_id = documents.template_id group by templates.template_type_code order by count ( * ) desc limit 1	WITH TemplateCount AS (SELECT T1.template_type_code, COUNT(*) AS doc_count FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code) SELECT template_type_code FROM TemplateCount WHERE doc_count = (SELECT MAX(doc_count) FROM TemplateCount)
0	select first.template_type_code from templates first where ( select count ( * ) from documents where template_id = first.template_id ) = ( select max ( second.cnt ) from ( select count ( * ) as cnt from documents group by template_id ) second )	WITH TypeCount AS (SELECT T1.template_type_code, COUNT(*) AS cnt FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code) SELECT template_type_code FROM TypeCount WHERE cnt = (SELECT MAX(cnt) FROM TypeCount)
0	select first.template_type_code from templates first where ( select count ( * ) from documents where template_id = first.template_id ) = ( select max ( second.cnt ) from ( select count ( * ) as cnt from documents group by template_id ) second )	SELECT rt.template_type_code FROM ref_template_types rt WHERE NOT EXISTS (SELECT 1 FROM templates t WHERE rt.template_type_code = t.template_type_code AND EXISTS (SELECT 1 FROM documents d WHERE t.template_id = d.template_id))
0	select template_type_code from templates except select templates.template_type_code from templates join documents on templates.template_id = documents.template_id	SELECT rtt.template_type_code FROM ref_template_types rtt WHERE NOT EXISTS (SELECT 1 FROM templates t JOIN documents d ON t.template_id = d.template_id WHERE t.template_type_code = rtt.template_type_code)
1	select template_type_code , template_type_description from ref_template_types	SELECT template_type_code , template_type_description FROM Ref_template_types
1	select template_type_code , template_type_description from ref_template_types	SELECT template_type_code , template_type_description FROM Ref_template_types
1	select ref_template_types.template_type_description from ref_template_types where ref_template_types.template_type_code = 'AD'	SELECT template_type_description FROM Ref_template_types WHERE template_type_code = 'AD'
1	select template_type_description from ref_template_types where template_type_code = 'AD'	SELECT template_type_description FROM Ref_template_types WHERE template_type_code = 'AD'
1	select template_type_code from ref_template_types where template_type_description = 'Book'	SELECT template_type_code FROM Ref_template_types WHERE template_type_description = 'Book'
1	select template_type_code from ref_template_types where template_type_description = 'Book'	SELECT template_type_code FROM Ref_template_types WHERE template_type_description = 'Book'
1	select distinct ref_template_types.template_type_description from ref_template_types join templates on ref_template_types.template_type_code = templates.template_type_code join documents on templates.template_id = documents.template_id	SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID = T3.template_ID
1	select distinct ref_template_types.template_type_description from ref_template_types join templates on ref_template_types.template_type_code = templates.template_type_code join documents on templates.template_id = documents.template_id	SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID = T3.template_ID
1	select templates.template_id from templates join ref_template_types on templates.template_type_code = ref_template_types.template_type_code where ref_template_types.template_type_description = 'Presentation'	SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code WHERE T1.template_type_description = 'Presentation'
1	select templates.template_id from ref_template_types join templates on ref_template_types.template_type_code = templates.template_type_code where ref_template_types.template_type_description = 'Presentation'	SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code WHERE T1.template_type_description = 'Presentation'
1	select count ( * ) from paragraphs	SELECT count(*) FROM Paragraphs
1	select count ( * ) from paragraphs	SELECT count(*) FROM Paragraphs
1	select count ( * ) from paragraphs join documents on paragraphs.document_id = documents.document_id where documents.document_name = 'Summer Show'	SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID = T2.document_ID WHERE T2.document_name = 'Summer Show'
1	select count ( * ) from paragraphs join documents on paragraphs.document_id = documents.document_id where documents.document_name = 'Summer Show'	SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID = T2.document_ID WHERE T2.document_name = 'Summer Show'
0	select * from paragraphs where paragraph_text = '%Korea%'	SELECT * FROM paragraphs WHERE paragraph_text = 'Korea '
0	select * from paragraphs where paragraph_text = 'Korea'	SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
1	select paragraphs.paragraph_id , paragraphs.paragraph_text from documents join paragraphs on documents.document_id = paragraphs.document_id where documents.document_name = 'Welcome to NY'	SELECT T1.paragraph_id , T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.Document_Name = 'Welcome to NY'
1	select paragraphs.paragraph_id , paragraphs.paragraph_text from documents join paragraphs on documents.document_id = paragraphs.document_id where documents.document_name = 'Welcome to NY'	SELECT T1.paragraph_id , T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.Document_Name = 'Welcome to NY'
1	select paragraphs.paragraph_text from documents join paragraphs on documents.document_id = paragraphs.document_id where documents.document_name = 'Customer reviews'	SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = 'Customer reviews'
1	select paragraphs.paragraph_text from documents join paragraphs on documents.document_id = paragraphs.document_id where documents.document_name = 'Customer reviews'	SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = 'Customer reviews'
1	select d.document_id , count ( p.paragraph_id ) as num_paragraphs from documents d left join paragraphs p on d.document_id = p.document_id group by d.document_id order by d.document_id asc	SELECT documents.document_id, COALESCE(SUM(CASE WHEN paragraphs.paragraph_id IS NOT NULL THEN 1 ELSE 0 END), 0) FROM documents LEFT JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY documents.document_id
0	select documents.document_id , count ( * ) from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id order by documents.document_id asc	SELECT doc.document_id, COUNT(para.paragraph_id) AS count_paragraphs FROM documents doc LEFT JOIN paragraphs para ON doc.document_id = para.document_id GROUP BY doc.document_id ORDER BY doc.document_id
1	select document_id , document_name , ( select count ( * ) from paragraphs where documents.document_id = paragraphs.document_id ) as paragraph_count from documents	SELECT d.document_id, d.document_name, COUNT(p.paragraph_id) AS num_paragraphs FROM documents d LEFT JOIN paragraphs p ON d.document_id = p.document_id GROUP BY d.document_id, d.document_name
1	select documents.document_id , documents.document_name , ( select count ( * ) from paragraphs where paragraphs.document_id = documents.document_id ) as paragraph_count from documents	SELECT doc.document_id, doc.document_name, (SELECT COUNT(paragraph_id) FROM paragraphs WHERE paragraphs.document_id = doc.document_id) AS number_of_paragraphs FROM documents doc
1	select document_id from paragraphs group by document_id having count ( * ) >= 2	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) >= 2
1	select documents.document_id from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id having count ( * ) >= 2	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) >= 2
1	select documents.document_id , documents.document_name from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id having count ( paragraphs.paragraph_id ) = ( select max ( cnt ) from ( select count ( paragraph_id ) as cnt from paragraphs group by document_id ) )	SELECT T1.document_id, T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id HAVING count(*) = (SELECT MAX(ct) FROM (SELECT count(*) as ct FROM Paragraphs GROUP BY document_id) AS counts)
1	select p.document_id , d.document_name from paragraphs p join documents d on p.document_id = d.document_id group by p.document_id having count ( p.paragraph_id ) = ( select max ( total ) from ( select count ( paragraph_id ) as total from paragraphs group by document_id ) )	SELECT D.document_id, D.document_name FROM Documents D WHERE D.document_id IN (SELECT P.document_id FROM Paragraphs P GROUP BY P.document_id HAVING COUNT(*) = (SELECT MAX(par_count) FROM (SELECT COUNT(*) as par_count FROM Paragraphs GROUP BY document_id) count_summary))
1	select document_id from ( select document_id , count ( paragraph_id ) as num_paragraphs from paragraphs group by document_id ) where num_paragraphs = ( select min ( num_paragraphs ) from ( select count ( paragraph_id ) as num_paragraphs from paragraphs group by document_id ) )	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) = (SELECT MIN(counted) FROM (SELECT document_id, COUNT(*) as counted FROM Paragraphs GROUP BY document_id) AS counts)
1	select document_id from ( select document_id , count ( paragraph_id ) as num_paragraphs from paragraphs group by document_id ) where num_paragraphs = ( select min ( num_paragraphs ) from ( select count ( paragraph_id ) as num_paragraphs from paragraphs group by document_id ) )	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) = (SELECT count(*) FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1)
1	select documents.document_id from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id having count ( * ) between 1 and 2	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
1	select documents.document_id from paragraphs join documents on paragraphs.document_id = documents.document_id group by documents.document_id having count ( * ) between 1 and 2	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
1	select document_id from paragraphs where paragraph_text = 'Brazil' intersect select document_id from paragraphs where paragraph_text = 'Ireland'	SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Ireland'
1	select documents.document_id from documents join paragraphs on documents.document_id = paragraphs.document_id where paragraphs.paragraph_text = 'Brazil' intersect select documents.document_id from documents join paragraphs on documents.document_id = paragraphs.document_id where paragraphs.paragraph_text = 'Ireland'	SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Ireland'
1	select count ( * ) from teacher	SELECT count(*) FROM teacher
1	select count ( * ) from teacher	SELECT count(*) FROM teacher
0	select count ( * ) from teacher	SELECT Name FROM teacher ORDER BY Age ASC, Teacher_ID ASC
0	select count ( * ) from teacher	SELECT Name FROM teacher ORDER BY Age ASC, Teacher_ID ASC
1	select age , hometown from teacher	SELECT Age , Hometown FROM teacher
1	select age , hometown from teacher	SELECT Age , Hometown FROM teacher
0	select name from teacher where hometown != ''	select name from teacher where hometown != 'little lever urban district'
0	select distinct name from teacher where hometown != 'Little Lever Urban District'	SELECT DISTINCT name FROM teacher WHERE hometown != 'little lever urban district'
1	select name from teacher where age = 32 or age = 33	SELECT Name FROM teacher WHERE Age = 32 OR Age = 33
1	select name from teacher where age = 32 or age = 33	SELECT Name FROM teacher WHERE Age = 32 OR Age = 33
0	select distinct hometown from teacher where age = ( select min ( age ) from teacher )	SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
1	select hometown from teacher where age = ( select min ( age ) from teacher )	SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
1	select hometown , count ( * ) from teacher group by hometown	SELECT Hometown , COUNT(*) FROM teacher GROUP BY Hometown
1	select hometown , count ( * ) from teacher group by hometown	SELECT Hometown , COUNT(*) FROM teacher GROUP BY Hometown
1	select hometown from teacher group by hometown having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from teacher group by hometown ) )	SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) = (SELECT MAX(Cnt) FROM (SELECT COUNT(*) AS Cnt FROM teacher GROUP BY Hometown) subquery)
1	select hometown from teacher group by hometown having count ( hometown ) = ( select max ( count ) from ( select count ( hometown ) as count from teacher group by hometown ) )	SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) = (SELECT MAX(cnt) FROM (SELECT COUNT(*) as cnt FROM teacher GROUP BY Hometown) t)
1	select hometown from teacher group by hometown having count ( * ) >= 2	SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2
1	select hometown from teacher group by hometown having count ( * ) >= 2	SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2
1	select teacher.name , course.course from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id join course on course_arrange.course_id = course.course_id	SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID
1	select teacher.name , course.course from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id join course on course_arrange.course_id = course.course_id	SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID
1	select teacher.name , course.course from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id join course on course_arrange.course_id = course.course_id order by teacher.name asc , course.course asc	SELECT T3.Name, T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name, T2.Course
1	select teacher.name , course.course from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id join course on course_arrange.course_id = course.course_id order by teacher.name asc , course.course asc	SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name, T2.Course
0	select name from teacher where teacher_id in ( select teacher_id from course_arrange where course_id in ( select course_id from course where course = 'Math' ) )	SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'Math'
0	select name from teacher where teacher_id in ( select teacher_id from course_arrange join course on course_arrange.course_id = course.course_id where course.course = 'Math' )	SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = 'Math'
0	select teacher.name as name , count ( course_arrange.course_id ) as courses_taught from teacher left join course_arrange on teacher.teacher_id = course_arrange.teacher_id group by teacher.name	SELECT t.name AS teacher_name, COUNT(ca.course_id) FROM teacher t LEFT JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id
0	select teacher.name , count ( * ) from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id group by teacher.teacher_id	SELECT name, (SELECT COUNT(*) FROM course_arrange WHERE teacher_id = teacher.teacher_id) AS num_courses FROM teacher
1	select teacher.name from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id group by teacher.teacher_id having count ( * ) >= 2	SELECT T.Name FROM teacher AS T WHERE T.Teacher_ID IN (SELECT ca.Teacher_ID FROM course_arrange ca GROUP BY ca.Teacher_ID HAVING COUNT(DISTINCT ca.course_id) > 1)
1	select teacher.name from course_arrange join teacher on course_arrange.teacher_id = teacher.teacher_id group by teacher.teacher_id having count ( * ) >= 2	SELECT t.name FROM teacher t WHERE t.teacher_id IN (SELECT ca.teacher_id FROM course_arrange ca GROUP BY ca.teacher_id HAVING COUNT(DISTINCT ca.course_id) >= 2)
1	select name from teacher where teacher_id not in ( select teacher_id from course_arrange )	SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
1	select name from teacher where teacher_id not in ( select teacher_id from course_arrange )	SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
1	select count ( * ) from visitor where age < 30	SELECT count(*) FROM visitor WHERE age < 30
0	select count ( * ) from visitor where age < 30	SELECT name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
1	select avg ( age ) from visitor where level_of_membership <= 4	SELECT avg(age) FROM visitor WHERE Level_of_membership <= 4
1	select name , level_of_membership from visitor where level_of_membership > 4 order by age desc	SELECT name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY age DESC
1	select m.museum_id , m.name from museum m where m.num_of_staff = ( select max ( num_of_staff ) from museum )	SELECT museum_id, name FROM museum WHERE num_of_staff = (SELECT MAX(num_of_staff) FROM museum)
1	select avg ( num_of_staff ) from museum where open_year < 2009	SELECT avg(num_of_staff) FROM museum WHERE open_year < 2009
1	select open_year , num_of_staff from museum where name = 'Plaza Museum'	SELECT Num_of_Staff , Open_Year FROM museum WHERE name = 'Plaza Museum'
1	select name from museum where num_of_staff > ( select min ( num_of_staff ) from museum where open_year > 2010 )	SELECT name FROM museum WHERE num_of_staff > (SELECT min(num_of_staff) FROM museum WHERE open_year > 2010)
1	select visitor.id , visitor.name , visitor.age from visitor join visit on visitor.id = visit.visitor_id group by visitor.id having count ( * ) > 1	SELECT t1.id , t1.name , t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id GROUP BY t1.id HAVING count(*) > 1
0	select v.id , v.name , v.level_of_membership from visitor v join visit v on v.visitor_id = v.visitor_id where v.total_spent = ( select max ( total_spent ) from visit )	SELECT t1.ID, t1.name, t1.Level_of_membership from visitor AS T1 WHERE T1.ID IN (SELECT T2.visitor_ID FROM visit AS T2 GROUP BY t2.visitor_ID HAVING sum(T2.Total_spent) = (SELECT sum(T3.Total_spent) AS S FROM visit AS T3 GROUP BY t3.visitor_ID ORDER BY S DESC LIMIT 1))
0	select museum.museum_id , museum.name from museum join visit on museum.museum_id = visit.museum_id group by museum.museum_id order by count ( * ) desc limit 1	SELECT t2.Museum_ID, t1.Name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID = t2.Museum_ID GROUP BY t2.Museum_ID HAVING COUNT(*) = (SELECT MAX(visit_counts) FROM (SELECT COUNT(*) AS visit_counts FROM visit GROUP BY Museum_ID) AS subquery)
1	select name from museum where museum_id not in ( select museum_id from visit )	SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)
0	select v.name , v.age from visitor v join visit v on v.id = v.visitor_id group by v.id having sum ( v.num_of_ticket ) = ( select max ( total_ticket ) from ( select sum ( num_of_ticket ) as total_ticket from visit group by visitor_id ) )	SELECT v.name, v.age FROM (SELECT visitor_id FROM visit GROUP BY visitor_id HAVING MAX(num_of_ticket) = (SELECT MAX(num_of_ticket) FROM visit)) ids JOIN visitor v ON v.id = ids.visitor_id
1	select avg ( num_of_ticket ) , max ( num_of_ticket ) from visit	SELECT avg(num_of_ticket) , max(num_of_ticket) FROM visit
1	select sum ( total_spent ) from visitor join visit on visitor.id = visit.visitor_id where visitor.level_of_membership = 1	SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id WHERE t1.Level_of_membership = 1
0	select visitor.name from museum join visit on museum.museum_id = visit.museum_id join visitor on visit.visitor_id = visitor.id where museum.open_year < 2009 intersect select visitor.name from museum join visit on museum.museum_id = visit.museum_id join visitor on visit.visitor_id = visitor.id where museum.open_year > 2011	SELECT T1.Name FROM visitor AS T1 WHERE exists(SELECT 1 FROM visit AS T2 JOIN museum AS T3 on T2.Museum_ID = T3.Museum_ID WHERE T3.Open_Year < 2009 AND T2.visitor_ID = T1.ID) AND exists(SELECT 1 FROM visit AS T4 JOIN museum AS T5 on T4.Museum_ID = T5.Museum_ID WHERE T5.Open_Year > 2011 AND T4.visitor_ID = T1.ID)
1	select count ( * ) from visitor where id not in ( select visit.visitor_id from visit join museum on visit.museum_id = museum.museum_id where museum.open_year > 2010 )	SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID = t2.Museum_ID WHERE t1.open_year > 2010)
1	select count ( * ) from museum where open_year > 2013 or open_year < 2008	SELECT count(*) FROM museum WHERE open_year > 2013 OR open_year < 2008
1	select count ( * ) from players	SELECT count(*) FROM players
1	select count ( * ) from players	SELECT count(*) FROM players
1	select count ( * ) from matches	SELECT count(*) FROM matches
1	select count ( * ) from matches	SELECT count(*) FROM matches
1	select first_name , birth_date from players where country_code = 'USA'	SELECT first_name , birth_date FROM players WHERE country_code = 'USA'
1	select first_name , birth_date from players where country_code = 'USA'	SELECT first_name , birth_date FROM players WHERE country_code = 'USA'
1	select avg ( loser_age ) , avg ( winner_age ) from matches	SELECT avg(loser_age) , avg(winner_age) FROM matches
1	select avg ( winner_age ) , avg ( loser_age ) from matches	SELECT avg(loser_age) , avg(winner_age) FROM matches
1	select avg ( winner_rank ) from matches	SELECT avg(winner_rank) FROM matches
1	select avg ( winner_rank ) from matches	SELECT avg(winner_rank) FROM matches
0	select max ( loser_rank ) from matches	SELECT min(loser_rank) FROM matches
0	select max ( loser_rank ) from matches	SELECT min(loser_rank) FROM matches
1	select count ( distinct country_code ) from players	SELECT count(DISTINCT country_code) FROM players
1	select count ( distinct country_code ) from players	SELECT count(DISTINCT country_code) FROM players
1	select count ( distinct loser_name ) from matches	SELECT count(DISTINCT loser_name) FROM matches
1	select count ( distinct loser_name ) from matches	SELECT count(DISTINCT loser_name) FROM matches
1	select tourney_name from matches group by tourney_name having count ( * ) > 10	SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10
1	select tourney_name from matches group by tourney_name having count ( * ) > 10	SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10
0	select matches.winner_name from matches join qualifying_matches on matches.winner_id = qualifying_matches.winner_id where qualifying_matches.year = 2013 intersect select matches.winner_name from matches join qualifying_matches on matches.winner_id = qualifying_matches.winner_id where qualifying_matches.year = 2016	SELECT winner_name FROM matches WHERE YEAR = 2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR = 2016
1	select first_name , last_name from players where player_id in ( select winner_id from matches where year = 2013 intersect select winner_id from matches where year = 2016 )	SELECT first_name, last_name FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE year = 2013 INTERSECT SELECT winner_id FROM matches WHERE year = 2016)
1	select count ( * ) from matches where year = 2013 or year = 2016	SELECT count(*) FROM matches WHERE YEAR = 2013 OR YEAR = 2016
1	select count ( * ) from matches where year = 2013 or year = 2016	SELECT count(*) FROM matches WHERE YEAR = 2013 OR YEAR = 2016
0	select count ( * ) from matches where year = 2013 or year = 2016	SELECT p.country_code, p.first_name FROM players p WHERE EXISTS (SELECT 1 FROM matches m WHERE m.winner_id = p.player_id AND m.tourney_name = 'WTA Championships') AND EXISTS (SELECT 1 FROM matches m WHERE m.winner_id = p.player_id AND m.tourney_name = 'Australian Open')
0	select count ( * ) from matches where year = 2013 or year = 2016	SELECT first_name, country_code FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'WTA Championships' INTERSECT SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open')
1	select first_name , country_code from players where birth_date = ( select min ( birth_date ) from players )	SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
1	select first_name , country_code from players where birth_date = ( select min ( birth_date ) from players )	SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
1	select first_name , last_name from players order by birth_date asc , last_name , player_id	SELECT first_name, last_name FROM players ORDER BY birth_date, last_name, player_id
0	select first_name , last_name from players order by birth_date asc , last_name , player_id	SELECT first_name, last_name FROM players ORDER BY birth_date, player_id
0	select first_name , last_name from players where hand = 'left' order by birth_date asc	SELECT first_name , last_name FROM players WHERE hand = 'L' ORDER BY birth_date
0	select first_name , last_name from players where hand = 'left' order by birth_date asc	SELECT first_name , last_name FROM players WHERE hand = 'L' ORDER BY birth_date
0	select p.first_name , p.country_code from players p join rankings r on p.player_id = r.player_id group by p.player_id having count ( r.tours ) = ( select max ( cnt ) from ( select count ( tours ) as cnt from rankings group by player_id ) )	SELECT p.first_name, p.country_code FROM players p, (SELECT player_id FROM rankings GROUP BY player_id HAVING MAX(tours) = (SELECT MAX(tours) FROM rankings)) as r WHERE p.player_id = r.player_id
0	select players.first_name , players.country_code from players join rankings on players.player_id = rankings.player_id group by rankings.player_id order by count ( * ) desc limit 1	SELECT T1.first_name, T1.country_code FROM players AS T1 WHERE T1.player_id IN (SELECT T2.player_id FROM rankings AS T2 WHERE T2.tours = (SELECT MAX(tours) FROM rankings))
0	select year from matches group by year having count ( year ) = ( select max ( cnt ) from ( select count ( * ) as cnt from matches group by year ) )	SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC, year ASC LIMIT 1
0	select year from matches group by year having count ( * ) = ( select max ( cnt ) from ( select count ( * ) as cnt from matches group by year ) )	SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC, year ASC LIMIT 1
1	select players.first_name , players.last_name , sum ( matches.winner_rank_points ) from matches join players on matches.winner_id = players.player_id group by matches.winner_id having count ( * ) = ( select max ( win_count ) from ( select count ( * ) as win_count from matches group by winner_id ) )	SELECT first_name, last_name, SUM(winner_rank_points) AS total_winner_rank_points FROM matches JOIN players ON matches.winner_id = players.player_id GROUP BY winner_id HAVING COUNT(*) = (SELECT max(cnt) FROM (SELECT COUNT(*) AS cnt FROM matches GROUP BY winner_id))
0	select players.first_name , players.last_name , sum ( matches.winner_rank_points ) from matches join players on matches.winner_id = players.player_id group by matches.winner_id order by count ( * ) desc limit 1	SELECT p.first_name, p.last_name, T.total_winner_rank_points FROM players AS p JOIN (SELECT m1.winner_id, SUM(m1.winner_rank_points) AS total_winner_rank_points FROM matches AS m1 GROUP BY m1.winner_id HAVING count(*) = (SELECT count(*) AS C FROM matches m JOIN players p ON m.winner_id = p.player_id GROUP BY m.winner_id ORDER BY C DESC LIMIT 1)) AS T on p.player_id = T.winner_id
0	select players.first_name , players.last_name from matches join players on matches.winner_id = players.player_id where matches.tourney_name = 'Australian Open' and matches.winner_rank_points = ( select max ( winner_rank_points ) from qualifying_matches join players on qualifying_matches.winner_id = players.player_id where qualifying_matches.tourney_name = 'Australian Open' )	SELECT first_name, last_name FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open' AND winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open'))
0	select first_name , last_name from players where player_id in ( select matches.winner_id from matches join qualifying_matches on matches.winner_id = qualifying_matches.winner_id where qualifying_matches.tourney_name = 'Australian Open' )	SELECT p.first_name, p.last_name FROM matches m JOIN players p ON m.winner_id = p.player_id WHERE m.tourney_name = 'Australian Open' ORDER BY m.winner_rank_points DESC LIMIT 1
1	select winner_name , loser_name from matches where minutes = ( select max ( minutes ) from matches )	WITH LongestMatch AS (SELECT MAX(minutes) AS max_minutes FROM matches) SELECT m.winner_name, m.loser_name FROM matches m JOIN LongestMatch lm ON m.minutes = lm.max_minutes
0	select players.first_name , players.last_name from matches join players on matches.winner_id = players.player_id join qualifying_matches on matches.loser_id = qualifying_matches.loser_id order by matches.loser_ht desc limit 1	WITH LongestMatch AS (SELECT MAX(minutes) AS max_minutes FROM matches) SELECT m.winner_name, m.loser_name FROM matches m JOIN LongestMatch lm ON m.minutes = lm.max_minutes
1	select players.first_name , players.player_id , avg ( rankings.ranking ) from players join rankings on players.player_id = rankings.player_id group by players.player_id	SELECT T1.player_id, avg(ranking), T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id, T1.first_name
0	select players.first_name , players.player_id , avg ( rankings.ranking_points ) from players join rankings on players.player_id = rankings.player_id group by players.player_id	SELECT T1.first_name, T1.player_id, COALESCE(AVG(T2.ranking), 0) AS average_ranking FROM players AS T1 LEFT JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name, T1.player_id
1	select sum ( ranking_points ) , players.first_name , players.player_id from rankings join players on rankings.player_id = players.player_id group by players.player_id	SELECT sum(ranking_points), T1.first_name, T1.player_id FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name, T1.player_id
0	select players.first_name , sum ( rankings.ranking_points ) from players join rankings on players.player_id = rankings.player_id where rankings.ranking_points = 'null'	SELECT p.first_name, IFNULL(SUM(r.ranking_points), 0) FROM players p LEFT JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id
1	select country_code , count ( * ) from players group by country_code	SELECT count(*) , country_code FROM players GROUP BY country_code
1	select country_code , count ( * ) from players group by country_code	SELECT count(*) , country_code FROM players GROUP BY country_code
1	select country_code from players group by country_code having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from players group by country_code ) )	SELECT country_code FROM players GROUP BY country_code HAVING count(*) = (SELECT max(count) FROM (SELECT count(*) AS count FROM players GROUP BY country_code) AS counts)
1	select country_code from players group by country_code having count ( player_id ) = ( select max ( count ) from ( select count ( player_id ) as count from players group by country_code ) )	SELECT country_code FROM players GROUP BY country_code HAVING count(*) = (SELECT MAX(player_count) FROM (SELECT count(*) AS player_count FROM players GROUP BY country_code) AS counts)
1	select country_code from players group by country_code having count ( * ) > 50	SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50
1	select country_code from players group by country_code having count ( * ) > 50	SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50
1	select ranking_date , sum ( tours ) from rankings group by ranking_date	SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date
1	select ranking_date , sum ( tours ) from rankings group by ranking_date	SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date
1	select year , count ( * ) from matches group by year	SELECT count(*) , YEAR FROM matches GROUP BY YEAR
1	select year , count ( * ) from matches group by year	SELECT count(*) , YEAR FROM matches GROUP BY YEAR
0	select matches.winner_name , matches.winner_rank from matches join qualifying_matches on matches.winner_id = qualifying_matches.winner_id order by qualifying_matches.winner_age desc limit 3	SELECT winner_name, winner_rank FROM matches WHERE winner_age <= (SELECT MAX(winner_age) FROM (SELECT winner_age AS winner_age FROM matches ORDER BY winner_age Limit 3)) ORDER BY winner_age
0	select matches.winner_name , matches.winner_rank from matches join qualifying_matches on matches.winner_id = qualifying_matches.winner_id order by qualifying_matches.winner_age desc limit 3	SELECT winner_name, winner_rank FROM matches WHERE winner_age <= (SELECT MAX(winner_age) FROM (SELECT winner_age AS winner_age FROM matches ORDER BY winner_age Limit 3)) ORDER BY winner_age
0	select count ( distinct matches.winner_id ) from matches join players on matches.winner_id = players.player_id where matches.tourney_name = 'WTA Championships' and players.hand = 'left'	SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L'
0	select count ( distinct matches.winner_id ) from matches join players on matches.winner_id = players.player_id where matches.tourney_name = 'WTA Championships' and players.hand = 'left'	SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L'
1	select players.first_name , players.country_code , players.birth_date from matches join players on matches.winner_id = players.player_id order by matches.winner_rank_points desc limit 1	SELECT T1.first_name , T1.country_code , T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
0	select players.first_name , players.country_code , players.birth_date from players join matches on players.player_id = matches.winner_id group by matches.winner_id order by sum ( matches.winner_rank_points ) desc limit 1	SELECT T1.first_name , T1.country_code , T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
1	select hand , count ( * ) from players group by hand	SELECT count(*) , hand FROM players GROUP BY hand
1	select hand , count ( * ) from players group by hand	SELECT count(*) , hand FROM players GROUP BY hand
0	select count ( * ) from ship where ship_type = 'Captured'	SELECT count(*) FROM ship WHERE disposition_of_ship = 'Captured'
0	select count ( * ) from ship where ship_type = 'Captured'	SELECT name, tonnage FROM ship ORDER BY name DESC, tonnage ASC
1	select name , date , result from battle	SELECT name, date, result FROM battle
1	select max ( killed ) , min ( killed ) from death	SELECT max(killed) , min(killed) FROM death
1	select avg ( injured ) from death	SELECT avg(injured) FROM death
1	select death.injured , death.killed from death join ship on death.caused_by_ship_id = ship.id where ship.tonnage = 't'	SELECT T1.killed , T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'
1	select name , result from battle where bulgarian_commander != 'Boril'	SELECT name , RESULT FROM battle WHERE bulgarian_commander != 'Boril'
1	select distinct battle.id , battle.name from battle join ship on battle.id = ship.lost_in_battle where ship.ship_type = 'Brig'	SELECT DISTINCT T1.id , T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'
0	select battle.id , battle.name from death join battle on death.caused_by_ship_id = battle.id group by battle.id having sum ( death.killed ) > 10	SELECT T1.id , T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed) > 10
1	select s.id , s.name from ship s , death d where s.id = d.caused_by_ship_id group by s.id having sum ( d.injured ) = ( select max ( total ) from ( select sum ( injured ) as total from death group by caused_by_ship_id ) )	SELECT T2.id, T2.name FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id GROUP BY T2.id HAVING SUM(T1.injured) = (SELECT max(total_injured) FROM (SELECT SUM(T3.injured) AS total_injured FROM death AS T3 JOIN ship AS T4 ON T3.caused_by_ship_id = T4.id GROUP BY T4.id))
0	select distinct name from battle where bulgarian_commander = 'Kaloyan' and latin_commander = 'Baldwin I'	SELECT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
1	select count ( distinct result ) from battle	SELECT count(DISTINCT RESULT) FROM battle
1	select count ( * ) from battle where id not in ( select lost_in_battle from ship where tonnage = '225' )	SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage = '225' );
0	select battle.name , battle.date from battle join ship on battle.id = ship.lost_in_battle where ship.name = 'Lettice' intersect select battle.name , battle.date from battle join ship on battle.id = ship.lost_in_battle where ship.name = 'HMS Atalanta'	SELECT T3.name, T3.date FROM (SELECT T1.id, T1.name, T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'Lettice' INTERSECT SELECT T1.id, T1.name, T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'HMS Atalanta') AS T3
1	select name , result , bulgarian_commander from battle where id not in ( select lost_in_battle from ship where location = 'English Channel' )	SELECT name, result, bulgarian_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')
1	select note from death where note like '%East%'	SELECT note FROM death WHERE note LIKE '%East%'
0	select * from addresses where line_1 = 1 and line_2 = 2	SELECT line_1 , line_2 FROM addresses
1	select line_1 , line_2 from addresses	SELECT line_1 , line_2 FROM addresses
1	select count ( * ) from courses	SELECT count(*) FROM Courses
1	select count ( * ) from courses	SELECT count(*) FROM Courses
0	select course_description from courses where course_name = 'Math'	SELECT course_description FROM Courses WHERE course_name = 'math'
0	select course_description from courses where course_name like '%Math%'	SELECT course_description FROM Courses WHERE course_name = 'math'
1	select zip_postcode from addresses where city = 'Port Chelsea'	SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
1	select zip_postcode from addresses where city = 'Port Chelsea'	SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
1	select d.department_name , d.department_id from departments d , degree_programs dp where d.department_id = dp.department_id group by d.department_id having count ( dp.degree_program_id ) = ( select max ( counts ) from ( select count ( degree_program_id ) as counts from degree_programs group by department_id ) )	WITH DegreeCount AS (SELECT department_id, COUNT(*) AS num_degrees FROM Degree_Programs GROUP BY department_id) SELECT D.department_name, D.department_id FROM Departments AS D JOIN DegreeCount AS DC ON D.department_id = DC.department_id WHERE DC.num_degrees = (SELECT MAX(num_degrees) FROM DegreeCount)
1	select d.department_name , d.department_id from departments d where exists ( select 1 from degree_programs dp where dp.department_id = d.department_id group by dp.department_id having count ( dp.degree_program_id ) = ( select max ( total ) from ( select count ( * ) as total from degree_programs group by department_id ) t ) )	SELECT t2.department_name, t1.department_id FROM degree_programs AS t1 JOIN departments AS t2 ON t1.department_id = t2.department_id GROUP BY t1.department_id HAVING COUNT(*) = (SELECT MAX(degree_count) FROM (SELECT COUNT(*) AS degree_count FROM degree_programs GROUP BY department_id) AS counts)
1	select count ( distinct department_id ) from degree_programs	SELECT count(DISTINCT department_id) FROM Degree_Programs
1	select count ( distinct department_id ) from degree_programs	SELECT count(DISTINCT department_id) FROM Degree_Programs
1	select count ( distinct degree_summary_name ) from degree_programs	SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
0	select count ( distinct degree_program_id ) from degree_programs	SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
0	select count ( * ) from degree_programs join departments on degree_programs.department_id = departments.department_id where departments.department_name = 'Engineering'	SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'engineer'
0	select count ( * ) from degree_programs join departments on degree_programs.department_id = departments.department_id where departments.department_name = 'Engineering'	SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'engineer'
1	select section_name , section_description from sections	SELECT section_name , section_description FROM Sections
1	select section_name , section_description from sections	SELECT section_name , section_description FROM Sections
0	select courses.course_name , courses.course_id from courses join sections on courses.course_id = sections.course_id group by courses.course_id having count ( * ) <= 2	SELECT c.course_id, c.course_name FROM courses c WHERE (SELECT COUNT(*) FROM sections s WHERE s.course_id = c.course_id) <= 2
0	select courses.course_name , courses.course_id from courses join sections on courses.course_id = sections.course_id group by courses.course_id having count ( * ) < 2	SELECT c.course_name, c.course_id FROM courses c WHERE (SELECT COUNT(*) FROM sections s WHERE s.course_id = c.course_id) < 2
0	select courses.course_name , courses.course_id from courses join sections on courses.course_id = sections.course_id group by courses.course_id having count ( * ) < 2	SELECT section_name FROM Sections ORDER BY section_name DESC
0	select courses.course_name , courses.course_id from courses join sections on courses.course_id = sections.course_id group by courses.course_id having count ( * ) < 2	SELECT section_name FROM Sections ORDER BY section_name DESC
1	select semesters.semester_name , semesters.semester_id from semesters join ( select semester_id from student_enrolment group by semester_id having count ( student_id ) = ( select max ( cnt ) from ( select count ( student_id ) as cnt from student_enrolment group by semester_id ) ) ) as max_registration on semesters.semester_id = max_registration.semester_id	SELECT T1.semester_name, T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id HAVING count(*) = (SELECT MAX(counted) FROM (SELECT count(*) as counted FROM Student_Enrolment GROUP BY semester_id) AS temp)
1	select semesters.semester_name , semesters.semester_id from semesters join ( select semester_id from student_enrolment group by semester_id having count ( student_id ) = ( select max ( cnt ) from ( select count ( student_id ) as cnt from student_enrolment group by semester_id ) ) ) as max_registration on semesters.semester_id = max_registration.semester_id	SELECT T1.semester_name, T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id HAVING COUNT(*) = (SELECT MAX(total_enrolments) FROM (SELECT COUNT(*) AS total_enrolments FROM Student_Enrolment GROUP BY semester_id) AS enrolment_counts)
0	select department_description from departments where department_name like '%thecomputer%'	SELECT department_description FROM departments WHERE department_name LIKE '%the computer%'
1	select department_description from departments where department_name like '%computer%'	SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
0	select students.first_name , students.middle_name , students.last_name , student_enrolment.semester_id from student_enrolment join students on student_enrolment.student_id = students.student_id group by student_enrolment.semester_id having count ( distinct degree_program_id ) = 2	SELECT DISTINCT s.first_name, s.middle_name, s.last_name, s.student_id FROM students s WHERE EXISTS (SELECT 1 FROM student_enrolment se WHERE se.student_id = s.student_id GROUP BY se.semester_id HAVING COUNT(DISTINCT se.degree_program_id) = 2)
0	select s.first_name , s.middle_name , s.last_name , s.student_id from students s join student_enrolment se on s.student_id = se.student_id group by s.student_id having count ( distinct se.degree_program_id ) = 2	SELECT DISTINCT s.student_id, s.first_name, s.middle_name, s.last_name FROM students s JOIN student_enrolment se ON s.student_id = se.student_id JOIN (SELECT student_id, semester_id FROM student_enrolment GROUP BY student_id, semester_id HAVING COUNT(DISTINCT degree_program_id) = 2) ds ON s.student_id = ds.student_id AND se.semester_id = ds.semester_id
0	select first_name , middle_name , last_name from students where student_id in ( select student_id from student_enrolment where degree_program_id = 'Bachelor' )	SELECT first_name, middle_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name = 'Bachelor'))
0	select students.first_name , students.middle_name , students.last_name from student_enrolment join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id join students on student_enrolment.student_id = students.student_id where degree_programs.degree_summary_name = 'Bachelors'	SELECT first_name, middle_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name = 'Bachelors'))
0	select degree_programs.degree_summary_name from degree_programs join student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id group by degree_programs.degree_program_id order by count ( * ) desc limit 1	SELECT dp.degree_summary_name FROM degree_programs dp INNER JOIN student_enrolment se ON dp.degree_program_id = se.degree_program_id GROUP BY dp.degree_summary_name HAVING COUNT(DISTINCT se.student_id) = (SELECT MAX(total_enrolled) FROM (SELECT COUNT(DISTINCT student_id) AS total_enrolled FROM student_enrolment GROUP BY degree_program_id))
0	select degree_summary_name from degree_programs where degree_program_id in ( select degree_program_id from student_enrolment group by degree_program_id having count ( student_enrolment_id ) = ( select max ( cnt ) from ( select count ( student_enrolment_id ) as cnt from student_enrolment group by degree_program_id ) ) )	WITH EnrollmentCounts AS (SELECT T1.degree_summary_name, COUNT(*) AS student_count FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name) SELECT degree_summary_name FROM EnrollmentCounts WHERE student_count = (SELECT MAX(student_count) FROM EnrollmentCounts)
1	select degree_program_id , degree_summary_name from degree_programs where degree_program_id in ( select degree_program_id from student_enrolment group by degree_program_id having count ( student_enrolment_id ) = ( select max ( cnt ) from ( select count ( student_enrolment_id ) as cnt from student_enrolment group by degree_program_id ) ) )	SELECT T1.degree_program_id, T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id HAVING COUNT(*) = (SELECT MAX(student_count) FROM (SELECT degree_program_id, COUNT(*) as student_count FROM Student_Enrolment GROUP BY degree_program_id) AS counts)
1	select degree_program_id , degree_summary_name from degree_programs where degree_program_id in ( select degree_program_id from student_enrolment group by degree_program_id having count ( student_id ) = ( select max ( cnt ) from ( select count ( student_id ) as cnt from student_enrolment group by degree_program_id ) ) )	SELECT T1.degree_program_id, T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id HAVING COUNT(*) = (SELECT MAX(total_enrolled) FROM (SELECT COUNT(*) AS total_enrolled FROM Student_Enrolment GROUP BY degree_program_id) AS counts)
0	select s.student_id , s.first_name , s.middle_name , s.last_name , count ( se.student_enrolment_id ) as total from students s join student_enrolment se on s.student_id = se.student_id group by s.student_id , s.first_name , s.last_name	WITH EnrollmentCounts AS (SELECT student_id, COUNT(*) AS num_enrollments FROM Student_Enrolment GROUP BY student_id) SELECT Students.student_id, Students.first_name, Students.middle_name, Students.last_name, EnrollmentCounts.num_enrollments FROM Students JOIN EnrollmentCounts ON Students.student_id = EnrollmentCounts.student_id WHERE EnrollmentCounts.num_enrollments = (SELECT MAX(num_enrollments) FROM EnrollmentCounts)
0	select s.student_id , s.first_name , s.middle_name , s.last_name , count ( se.student_enrolment_id ) as total from students s join student_enrolment se on s.student_id = se.student_id group by s.student_id , s.first_name , s.last_name	SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(T2.student_id) AS num_enrollments FROM students T1 INNER JOIN student_enrolment T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING num_enrollments = (SELECT COUNT(*) AS num_enrollments FROM student_enrolment AS T3 GROUP BY T3.student_id ORDER BY num_enrollments DESC LIMIT 1)
1	select semester_name from semesters where semester_id not in ( select semester_id from student_enrolment )	SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
1	select semester_name from semesters where semester_id not in ( select semester_id from student_enrolment )	SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
1	select distinct courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id	SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
1	select course_name from courses where course_id in ( select course_id from student_enrolment_courses )	SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses)
1	select course_name from courses where course_id in ( select course_id from student_enrolment_courses group by course_id having count ( student_enrolment_id ) = ( select max ( cnt ) from ( select count ( student_enrolment_id ) as cnt from student_enrolment_courses group by course_id ) ) )	SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(*) = (SELECT COUNT(*) AS C FROM student_enrolment_courses GROUP BY course_id ORDER BY C DESC LIMIT 1)
1	select course_name from courses where course_id in ( select course_id from student_enrolment_courses group by course_id having count ( student_enrolment_id ) = ( select max ( cnt ) from ( select count ( student_enrolment_id ) as cnt from student_enrolment_courses group by course_id ) ) )	SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(*) = (SELECT COUNT(*) AS C FROM student_enrolment_courses GROUP BY course_id ORDER BY C DESC LIMIT 1)
0	select last_name from students where student_id in ( select student_id from student_enrolment where degree_program_id in ( select degree_program_id from addresses where state_province_county = 'North Carolina' ) ) and student_id not in ( select student_id from student_enrolment where degree_program_id in ( select degree_program_id from student_enrolment ) )	SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id
0	select last_name from students where student_id in ( select student_id from student_enrolment where degree_program_id in ( select degree_program_id from addresses where state_province_county = 'North Carolina' ) ) and student_id not in ( select student_id from student_enrolment where degree_program_id in ( select degree_program_id from student_enrolment ) )	SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'NorthCarolina' and T1.student_id not in (SELECT T3.student_id From Student_Enrolment AS T3)
1	select transcripts.transcript_date , transcript_contents.transcript_id from transcript_contents join transcripts on transcripts.transcript_id = transcript_contents.transcript_id group by transcript_contents.transcript_id having count ( * ) >= 2	SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count(*) >= 2
1	select transcripts.transcript_date , transcript_contents.transcript_id from transcript_contents join transcripts on transcripts.transcript_id = transcript_contents.transcript_id group by transcript_contents.transcript_id having count ( * ) >= 2	SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count(*) >= 2
1	select cell_mobile_number from students where first_name = 'Timmothy' and last_name = 'Ward'	SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
0	select cell_mobile_number from students where first_name = 'Timmothy' and last_name = 'Ward'	select cell_mobile_number from students where first_name = 'timmothy' and last_name = 'ward'
1	select first_name , middle_name , last_name from students order by date_first_registered asc limit 1	SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC, student_id ASC LIMIT 1
1	select first_name , middle_name , last_name from students order by date_first_registered asc limit 1	SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC, student_id ASC LIMIT 1
1	select first_name , middle_name , last_name from students order by date_left asc limit 1	SELECT first_name, middle_name, last_name FROM Students ORDER BY date_left ASC, student_id ASC LIMIT 1
0	select s.first_name , s.middle_name , s.last_name from students s where s.student_id in ( select student_id from student_enrolment group by student_id having min ( student_id ) = ( select min ( student_id ) from students where student_id = s.student_id ) ) order by s.student_id asc limit 1	SELECT first_name, middle_name, last_name FROM Students ORDER BY date_left ASC, student_id ASC LIMIT 1
1	select first_name from students where permanent_address_id != current_address_id	SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
1	select first_name from students where permanent_address_id != current_address_id	SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
0	select addresses.address_id , addresses.line_2 , addresses.line_3 from addresses join students on addresses.address_id = students.current_address_id group by addresses.address_id order by count ( * ) desc limit 1	SELECT A.address_id, A.line_1, A.line_2, A.line_3 FROM addresses A INNER JOIN students S ON A.address_id = S.current_address_id GROUP BY A.address_id, A.line_1, A.line_2, A.line_3 HAVING COUNT(*) = (SELECT MAX(count) FROM (SELECT COUNT(*) count FROM students GROUP BY current_address_id))
0	select addresses.address_id , addresses.line_1 , addresses.line_2 from addresses join students on addresses.address_id = students.current_address_id group by addresses.address_id order by count ( * ) asc limit 1	SELECT T1.address_id, T1.line_1, T1.line_2 FROM Addresses AS T1 JOIN (SELECT current_address_id AS address_id FROM Students UNION ALL SELECT permanent_address_id AS address_id FROM Students) AS T2 ON T1.address_id = T2.address_id GROUP BY T1.address_id ORDER BY COUNT(*) DESC, T1.address_id ASC LIMIT 1
0	select avg ( transcript_date ) from transcripts	SELECT AVG(strftime('%Y', transcript_date) ) FROM Transcripts
0	select avg ( transcript_date - transcript_date ) from transcripts	SELECT avg(transcript_date) FROM Transcripts
1	select transcript_date , other_details from transcripts order by transcript_date asc limit 1	SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
1	select transcript_date , other_details from transcripts where transcript_date = ( select min ( transcript_date ) from transcripts )	SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
1	select count ( * ) from transcripts	SELECT count(*) FROM Transcripts
1	select count ( * ) from transcripts	SELECT count(*) FROM Transcripts
1	select max ( transcript_date ) from transcripts	SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
1	select max ( transcript_date ) from transcripts	SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
0	select count ( distinct student_enrolment_id ) , student_enrolment_courses.course_id from student_enrolment_courses join transcript_contents on student_enrolment_courses.student_enrolment_id = transcript_contents.transcript_id group by student_enrolment_courses.student_enrolment_id having count ( distinct transcript_id ) <= 1	WITH CountPerStudentCourse AS (SELECT student_course_id, COUNT(*) AS cnt FROM Transcript_Contents GROUP BY student_course_id) SELECT cnt, student_course_id FROM CountPerStudentCourse WHERE cnt = (SELECT MAX(cnt) FROM CountPerStudentCourse)
0	select courses.course_name , student_enrolment_courses.student_enrolment_id from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.student_course_id join transcript_contents on transcript_contents.transcript_id = transcript_contents.transcript_id group by courses.course_id order by count ( * ) desc limit 1	SELECT count(*) as num_transcripts, student_course_id FROM Transcript_Contents GROUP BY student_course_id HAVING count(*) = (SELECT max(counts) FROM (SELECT count(*) as counts FROM Transcript_Contents GROUP BY student_course_id) as subquery)
1	select transcripts.transcript_date , transcript_contents.transcript_id from transcript_contents join transcripts on transcripts.transcript_id = transcript_contents.transcript_id group by transcript_contents.transcript_id order by count ( * ) asc limit 1	SELECT T2.transcript_date, T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(*), T1.transcript_id ASC LIMIT 1
0	select t.transcript_date , t.transcript_id from transcripts t inner join ( select transcript_id from transcript_contents group by transcript_id having count ( transcript_id ) = ( select min ( cnt ) from ( select count ( transcript_id ) as cnt from transcript_contents group by transcript_id ) ) ) tc on t.transcript_id = tc.transcript_id	SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
0	select t.transcript_date , t.transcript_id from transcripts t inner join ( select transcript_id from transcript_contents group by transcript_id having count ( transcript_id ) = ( select min ( cnt ) from ( select count ( transcript_id ) as cnt from transcript_contents group by transcript_id ) ) ) tc on t.transcript_id = tc.transcript_id	SELECT s.semester_name FROM semesters s WHERE s.semester_id IN (SELECT se.semester_id FROM student_enrolment se JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Master' INTERSECT SELECT se.semester_id FROM student_enrolment se JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelor')
0	select t.transcript_date , t.transcript_id from transcripts t inner join ( select transcript_id from transcript_contents group by transcript_id having count ( transcript_id ) = ( select min ( cnt ) from ( select count ( transcript_id ) as cnt from transcript_contents group by transcript_id ) ) ) tc on t.transcript_id = tc.transcript_id	SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Bachelor'
1	select count ( distinct addresses.address_id ) from addresses join students on addresses.address_id = students.current_address_id	SELECT count(DISTINCT current_address_id) FROM Students
0	select distinct addresses.address_id from addresses join students on addresses.address_id = students.current_address_id	SELECT count(DISTINCT current_address_id) + count(DISTINCT permanent_address_id) FROM Students
0	select distinct addresses.address_id from addresses join students on addresses.address_id = students.current_address_id	SELECT other_student_details FROM Students ORDER BY other_student_details DESC
0	select distinct addresses.address_id from addresses join students on addresses.address_id = students.current_address_id	SELECT other_student_details FROM Students ORDER BY other_student_details DESC
1	select section_description from sections where section_name = 'H'	SELECT section_description FROM Sections WHERE section_name = 'H'
1	select section_description from sections where section_name = 'h'	SELECT section_description FROM Sections WHERE section_name = 'h'
0	select first_name from students where permanent_address_id in ( select address_id from addresses where country = 'Haiti' ) or cell_mobile_number = 09700166582	select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id = t2.address_id where t2.country = 'haiti' or t1.cell_mobile_number = '09700166582'
0	select first_name from students where permanent_address_id in ( select address_id from addresses where country = 'Haiti' ) or cell_mobile_number = 09700166582	select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id = t2.address_id where t2.country = 'haiti' or t1.cell_mobile_number = '09700166582'
0	select first_name from students where permanent_address_id in ( select address_id from addresses where country = 'Haiti' ) or cell_mobile_number = 09700166582	SELECT Title FROM Cartoon ORDER BY title
0	select first_name from students where permanent_address_id in ( select address_id from addresses where country = 'Haiti' ) or cell_mobile_number = 09700166582	SELECT Title FROM Cartoon ORDER BY title
0	select * from cartoon where directed_by = 'Ben Jones'	SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
1	select title from cartoon where directed_by = 'Ben Jones'	SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
1	select count ( * ) from cartoon where written_by = 'Joseph Kuhr'	SELECT count(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
1	select count ( * ) from cartoon where written_by = 'Joseph Kuhr'	SELECT count(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
1	select title , directed_by from cartoon order by original_air_date asc , id	SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date, id
1	select title , directed_by from cartoon order by original_air_date asc , id	SELECT title, Directed_by FROM Cartoon ORDER BY Original_air_date, id ASC
1	select title from cartoon where directed_by = 'Ben Jones' or directed_by = 'Brandon Vietti'	SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
1	select title from cartoon where directed_by = 'Ben Jones' or directed_by = 'Brandon Vietti'	SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
1	select country , count ( * ) from tv_channel group by country having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from tv_channel group by country ) )	WITH ranked_countries AS (SELECT country, COUNT(id) AS total_channels, RANK() OVER (ORDER BY COUNT(id) DESC) AS rank FROM tv_channel GROUP BY country) SELECT country, total_channels FROM ranked_countries WHERE rank = 1
0	select country , count ( * ) from tv_channel group by country having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from tv_channel group by country ) )	SELECT Country , count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
1	select count ( distinct series_name ) , count ( distinct content ) from tv_channel	SELECT count(DISTINCT series_name) , count(DISTINCT content) FROM TV_Channel;
1	select count ( distinct series_name ) , count ( distinct content ) from tv_channel	SELECT count(DISTINCT series_name) , count(DISTINCT content) FROM TV_Channel;
1	select content from tv_channel where series_name = 'Sky Radio'	SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
1	select content from tv_channel where series_name = 'Sky Radio'	SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
1	select package_option from tv_channel where series_name = 'Sky Radio'	SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';
1	select package_option from tv_channel where series_name = 'Sky Radio'	SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';
1	select count ( * ) from tv_channel where language = 'english'	SELECT count(*) FROM TV_Channel WHERE LANGUAGE = 'English';
1	select count ( * ) from tv_channel where language = 'english'	SELECT count(*) FROM TV_Channel WHERE LANGUAGE = 'English';
1	select language , count ( * ) from tv_channel group by language having count ( * ) = ( select min ( count ) from ( select count ( * ) as count from tv_channel group by language ) )	SELECT LANGUAGE, COUNT(*) FROM TV_Channel GROUP BY LANGUAGE HAVING COUNT(*) = (SELECT MIN(count) FROM (SELECT COUNT(*) as count FROM TV_Channel GROUP BY LANGUAGE) as subquery)
1	with countedlanguages as ( select language , count ( * ) as cnt from tv_channel group by language ) select language , cnt from countedlanguages where cnt = ( select min ( cnt ) from countedlanguages )	WITH Language_Count AS (SELECT LANGUAGE, COUNT(*) AS num_channels FROM TV_Channel GROUP BY LANGUAGE) SELECT LANGUAGE, num_channels FROM Language_Count WHERE num_channels = (SELECT MIN(num_channels) FROM Language_Count);
1	select language , count ( * ) from tv_channel group by language	SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE
1	select language , count ( * ) from tv_channel group by language	SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE
1	select series_name from tv_channel where id in ( select channel from cartoon where title = 'The Rise of the Blue Beetle!' )	SELECT series_name FROM tv_channel WHERE id IN (SELECT channel FROM cartoon WHERE title = 'The Rise of the Blue Beetle!')
0	select series_name from tv_channel where id in ( select channel from cartoon where title = 'The Rise of the Blue Beetle' )	SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = 'The Rise of the Blue Beetle!';
0	select cartoon.title from tv_series join cartoon on tv_series.channel = cartoon.channel join tv_channel on tv_series.id = tv_channel.id where tv_channel.series_name = 'Sky Radio'	SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio';
0	select cartoon.title from tv_series join cartoon on tv_series.channel = cartoon.channel join tv_channel on tv_series.id = tv_channel.id where tv_channel.series_name = 'Sky Radio'	SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio';
0	select cartoon.title from tv_series join cartoon on tv_series.channel = cartoon.channel join tv_channel on tv_series.id = tv_channel.id where tv_channel.series_name = 'Sky Radio'	SELECT Episode FROM TV_series ORDER BY Rating, id ASC
1	select episode from tv_series order by rating asc , id	SELECT Episode FROM TV_series ORDER BY Rating, id ASC
0	select episode , rating from tv_series order by rating desc limit 3	SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC, Episode ASC LIMIT 3
1	select episode , rating from tv_series order by rating desc limit 3	SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
1	select min ( share ) , max ( share ) from tv_series	SELECT max(SHARE) , min(SHARE) FROM TV_series;
1	select max ( share ) , min ( share ) from tv_series	SELECT max(SHARE) , min(SHARE) FROM TV_series;
1	select air_date from tv_series where episode = 'A Love of a Lifetime'	SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';
1	select air_date from tv_series where episode = 'A Love of a Lifetime'	SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';
1	select weekly_rank from tv_series where episode = 'A Love of a Lifetime'	SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';
1	select weekly_rank from tv_series where episode = 'A Love of a Lifetime'	SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';
0	select tv_channel.series_name from tv_series join tv_channel on tv_series.channel = tv_channel.id where tv_series.episode = 'A Love of a Lifetime'	SELECT series_name FROM tv_channel WHERE id IN (SELECT channel FROM tv_series WHERE episode = 'A Love of a Lifetime')
0	select tv_channel.series_name from tv_series join tv_channel on tv_series.channel = tv_channel.id where tv_series.episode = 'A Love of a Lifetime'	SELECT series_name FROM tv_channel WHERE id IN (SELECT channel FROM tv_series WHERE episode = 'A Love of a Lifetime')
1	select tv_series.episode from tv_series join tv_channel on tv_series.channel = tv_channel.id where tv_channel.series_name = 'Sky Radio'	SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio';
1	select tv_series.episode from tv_series join tv_channel on tv_series.channel = tv_channel.id where tv_channel.series_name = 'Sky Radio'	SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio';
1	select directed_by , count ( * ) from cartoon group by directed_by	SELECT count(*) , Directed_by FROM cartoon GROUP BY Directed_by
1	select directed_by , count ( * ) from cartoon group by directed_by	SELECT count(*) , Directed_by FROM cartoon GROUP BY Directed_by
1	select production_code , channel from cartoon where original_air_date = ( select max ( original_air_date ) from cartoon )	SELECT production_code, channel FROM cartoon WHERE original_air_date = (SELECT MAX(original_air_date) FROM cartoon)
0	select c.production_code , c.channel from cartoon as c where c.original_air_date = ( select max ( original_air_date ) from cartoon )	select production_code , channel from cartoon order by original_air_date desc limit 1
0	select package_option , series_name from tv_channel where hight_definition_tv = 'Yes'	SELECT package_option , series_name FROM TV_Channel WHERE hight_definition_TV = 'yes'
0	select package_option , series_name from tv_channel where hight_definition_tv = 'Yes'	SELECT package_option , series_name FROM TV_Channel WHERE hight_definition_TV = 'yes'
1	select distinct tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.written_by = 'Todd Casey'	SELECT DISTINCT country FROM tv_channel WHERE id IN (SELECT channel FROM cartoon WHERE written_by = 'Todd Casey')
1	select distinct tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.written_by = 'Todd Casey'	SELECT DISTINCT tc.country FROM tv_channel tc JOIN cartoon c ON tc.id = c.channel WHERE c.written_by = 'Todd Casey'
0	select country from tv_channel where id not in ( select channel from cartoon where written_by = 'Todd Casey' )	SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey'
0	select distinct tv_channel.country from tv_channel where tv_channel.id not in ( select tv_series.channel from tv_series join cartoon on tv_series.id = cartoon.channel where cartoon.written_by = 'Todd Casey' )	SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey'
1	select series_name , country from tv_channel where id in ( select channel from cartoon where directed_by = 'Ben Jones' intersect select channel from cartoon where directed_by = 'Michael Chang' )	SELECT T1.series_name, T1.country FROM TV_Channel AS T1 WHERE T1.id IN (SELECT T2.id FROM TV_Channel AS T2 JOIN cartoon AS T3 ON T2.id = T3.Channel WHERE T3.directed_by = 'Michael Chang' INTERSECT SELECT T2.Id FROM TV_Channel AS T2 JOIN cartoon AS T3 ON T2.id = T3.Channel WHERE T3.directed_by = 'Ben Jones')
1	select series_name , country from tv_channel where id in ( select channel from cartoon where directed_by = 'Ben Jones' intersect select channel from cartoon where directed_by = 'Michael Chang' )	SELECT T1.series_name, T1.country FROM TV_Channel AS T1 WHERE T1.id IN (SELECT T2.id FROM TV_Channel AS T2 JOIN cartoon AS T3 ON T2.id = T3.Channel WHERE T3.directed_by = 'Michael Chang' INTERSECT SELECT T2.Id FROM TV_Channel AS T2 JOIN cartoon AS T3 ON T2.id = T3.Channel WHERE T3.directed_by = 'Ben Jones')
1	select pixel_aspect_ratio_par , country from tv_channel where language != 'english'	SELECT Pixel_aspect_ratio_PAR , country FROM tv_channel WHERE LANGUAGE != 'English'
1	select pixel_aspect_ratio_par , country from tv_channel where language != 'english'	SELECT Pixel_aspect_ratio_PAR , country FROM tv_channel WHERE LANGUAGE != 'English'
0	select id from tv_channel group by country having count ( * ) > 2	SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2)
0	select id from tv_channel group by country having count ( * ) > 2	SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2)
1	select id from tv_channel except select channel from cartoon where directed_by = 'Ben Jones'	SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones'
1	select id from tv_channel except select channel from cartoon where directed_by = 'Ben Jones'	SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones'
1	select package_option from tv_channel where id not in ( select channel from cartoon where directed_by = 'Ben Jones' )	SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones')
1	select package_option from tv_channel where id not in ( select channel from cartoon where directed_by = 'Ben Jones' )	SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones')
1	select count ( * ) from poker_player	SELECT count(*) FROM poker_player
1	select count ( * ) from poker_player	SELECT count(*) FROM poker_player
0	select count ( * ) from poker_player	SELECT Earnings FROM poker_player ORDER BY Earnings DESC
0	select count ( * ) from poker_player	SELECT Earnings FROM poker_player ORDER BY Earnings DESC, Poker_Player_ID ASC
1	select final_table_made , best_finish from poker_player	SELECT Final_Table_Made , Best_Finish FROM poker_player
1	select final_table_made , best_finish from poker_player	SELECT Final_Table_Made , Best_Finish FROM poker_player
1	select avg ( earnings ) from poker_player	SELECT avg(Earnings) FROM poker_player
1	select avg ( earnings ) from poker_player	SELECT avg(Earnings) FROM poker_player
1	select p.money_rank from poker_player p where p.earnings = ( select max ( earnings ) from poker_player )	SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
0	select money_rank from ( select money_rank , max ( earnings ) as max_earnings from poker_player group by money_rank ) where max_earnings = ( select max ( earnings ) from poker_player )	SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
1	select max ( final_table_made ) from poker_player where earnings < 200000	SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
1	select max ( final_table_made ) from poker_player where earnings < 200000	SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
0	select people.name from poker_player join people on poker_player.people_id = people.people_id	SELECT name FROM people WHERE exists (SELECT 1 FROM poker_player WHERE poker_player.people_id = people.people_id)
1	select people.name from poker_player join people on poker_player.people_id = people.people_id	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
1	select people.name from poker_player join people on poker_player.people_id = people.people_id where poker_player.earnings > 300000	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
1	select people.name from poker_player join people on poker_player.people_id = people.people_id where poker_player.earnings > 300000	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
0	select people.name from poker_player join people on poker_player.people_id = people.people_id order by poker_player.final_table_made asc , poker_player.earnings	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC, T2.Earnings DESC, T2.Poker_Player_ID ASC
0	select people.name from poker_player join people on poker_player.people_id = people.people_id order by poker_player.final_table_made asc , poker_player.earnings	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC, T1.Name ASC, T2.Poker_Player_ID ASC
1	select birth_date from people where people_id in ( select people_id from poker_player where earnings = ( select min ( earnings ) from poker_player ) )	SELECT birth_date FROM people WHERE people_id IN (SELECT people_id FROM poker_player WHERE earnings = (SELECT MIN(earnings) FROM poker_player))
0	select p.birth_date from people p inner join poker_player pp on p.people_id = pp.people_id where pp.earnings = ( select min ( earnings ) from poker_player )	SELECT birth_date FROM people WHERE people_id IN (SELECT people_id FROM poker_player WHERE earnings = (SELECT MIN(earnings) FROM poker_player))
0	select poker_player.money_rank from poker_player join people on poker_player.people_id = people.people_id where people.height = ( select max ( height ) from people )	SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height = (SELECT MAX(Height) FROM people AS T3 JOIN poker_player AS T4 ON T3.People_ID = T4.People_ID)
0	select poker_player.money_rank from poker_player join people on poker_player.people_id = people.people_id where people.height = ( select max ( height ) from people )	SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height = (SELECT MAX(Height) FROM people AS T3 JOIN poker_player AS T4 ON T3.People_ID = T4.People_ID)
1	select avg ( poker_player.earnings ) from poker_player join people on poker_player.people_id = people.people_id where people.height > 200	SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200
1	select avg ( poker_player.earnings ) from poker_player join people on poker_player.people_id = people.people_id where people.height > 200	SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200
0	select avg ( poker_player.earnings ) from poker_player join people on poker_player.people_id = people.people_id where people.height > 200	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC, T1.Name ASC
1	select people.name from poker_player join people on poker_player.people_id = people.people_id order by poker_player.earnings desc , people.name	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC, T1.Name ASC, T2.Poker_Player_ID ASC
1	select nationality , count ( * ) from people group by nationality	SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality
1	select nationality , count ( * ) from people group by nationality	SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality
1	select nationality from people group by nationality having count ( nationality ) = ( select max ( count ) from ( select count ( nationality ) as count from people group by nationality ) )	SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) = (SELECT MAX(ncount) FROM (SELECT COUNT(*) as ncount FROM people GROUP BY Nationality) as counts)
1	select nationality from people group by nationality having count ( nationality ) = ( select max ( count ) from ( select count ( nationality ) as count from people group by nationality ) )	SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) = (SELECT MAX(ncount) FROM (SELECT COUNT(*) as ncount FROM people GROUP BY Nationality) as counts)
1	select nationality from people group by nationality having count ( * ) >= 2	SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2
1	select nationality from people group by nationality having count ( * ) >= 2	SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2
0	select nationality from people group by nationality having count ( * ) >= 2	SELECT Name, Birth_Date FROM people ORDER BY Name ASC, People_ID ASC
0	select nationality from people group by nationality having count ( * ) >= 2	SELECT Name, Birth_Date FROM people ORDER BY Name ASC, People_ID ASC
1	select name from people where nationality != 'Russia'	SELECT Name FROM people WHERE Nationality != 'Russia'
1	select name from people where nationality != 'Russia'	SELECT Name FROM people WHERE Nationality != 'Russia'
1	select name from people where people_id not in ( select people_id from poker_player )	SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
1	select name from people where people_id not in ( select people_id from poker_player )	SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
1	select count ( distinct nationality ) from people	SELECT count(DISTINCT Nationality) FROM people
1	select count ( distinct nationality ) from people	SELECT count(DISTINCT Nationality) FROM people
0	select count ( distinct state ) from area_code_state	SELECT count(*) FROM area_code_state
0	select count ( distinct state ) from area_code_state	SELECT contestant_number , contestant_name FROM contestants ORDER BY contestant_name DESC
1	select vote_id , phone_number , state from votes	SELECT vote_id , phone_number , state FROM votes
1	select max ( area_code ) , min ( area_code ) from area_code_state	SELECT max(area_code) , min(area_code) FROM area_code_state
0	select created from votes where state = 'CA' order by created desc limit 1	SELECT max(created) FROM votes WHERE state = 'CA'
1	select contestant_name from contestants where contestant_name != 'Jessie Alloway'	SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
1	select distinct state , created from votes	SELECT DISTINCT state , created FROM votes
1	select contestants.contestant_number , contestants.contestant_name from votes join contestants on votes.contestant_number = contestants.contestant_number group by votes.contestant_number having count ( * ) >= 2	SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number HAVING count(*) >= 2
1	select c.contestant_number , c.contestant_name from contestants c where c.contestant_number in ( select contestant_number from votes group by contestant_number having count ( vote_id ) = ( select min ( c2.vote_count ) from ( select count ( vote_id ) as vote_count from votes group by contestant_number ) c2 ) )	WITH VoteCounts AS (SELECT contestant_number, COUNT(*) AS vote_count FROM votes GROUP BY contestant_number), MinVotes AS (SELECT MIN(vote_count) AS min_votes FROM VoteCounts) SELECT C.contestant_number, C.contestant_name FROM CONTESTANTS C JOIN VoteCounts VC ON C.contestant_number = VC.contestant_number JOIN MinVotes MV ON VC.vote_count = MV.min_votes
1	select count ( * ) from votes where state = 'NY' or state = 'CA'	SELECT count(*) FROM votes WHERE state = 'NY' OR state = 'CA'
1	select count ( * ) from contestants where contestant_number not in ( select contestant_number from votes )	SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )
0	select area_code_state.area_code from area_code_state join votes on area_code_state.state = votes.state group by votes.state having count ( votes.vote_id ) = 1	SELECT T1.area_code FROM area_code_state AS T1 JOIN (SELECT state, COUNT(*) as votes_count FROM votes GROUP BY state) AS T2 ON T1.state = T2.state WHERE T2.votes_count = (SELECT MAX(votes_count) FROM (SELECT state, COUNT(*) AS votes_count FROM votes GROUP BY state) AS V2) ORDER BY T1.area_code
1	select votes.created , votes.state , votes.phone_number from votes join contestants on votes.contestant_number = contestants.contestant_number where contestants.contestant_name = 'Tabatha Gehling'	SELECT T2.created , T2.state , T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_name = 'Tabatha Gehling'
1	select area_code_state.area_code from area_code_state join votes on area_code_state.state = votes.state join contestants on votes.contestant_number = contestants.contestant_number where contestants.contestant_name = 'Tabatha Gehling' intersect select area_code_state.area_code from area_code_state join votes on area_code_state.state = votes.state join contestants on votes.contestant_number = contestants.contestant_number where contestants.contestant_name = 'Kelly Clauss'	SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Kelly Clauss'
1	select contestant_name from contestants where contestant_name like '%Al%'	select contestant_name from contestants where contestant_name like '%al%'
1	select name from country where indepyear > 1950	SELECT Name FROM country WHERE IndepYear > 1950
1	select name from country where indepyear > 1950	SELECT Name FROM country WHERE IndepYear > 1950
1	select count ( * ) from country where governmentform = 'Republic'	SELECT count(*) FROM country WHERE GovernmentForm = 'Republic'
1	select count ( * ) from country where governmentform = 'Republic'	SELECT count(*) FROM country WHERE GovernmentForm = 'Republic'
1	select sum ( surfacearea ) from country where region = 'Caribbean'	SELECT sum(SurfaceArea) FROM country WHERE Region = 'Caribbean'
0	select sum ( surfacearea ) from country where region = 'Carribean'	SELECT sum(SurfaceArea) FROM country WHERE Region = 'Caribbean'
1	select continent from country where name = 'Anguilla'	SELECT Continent FROM country WHERE Name = 'Anguilla'
1	select continent from country where name = 'Anguilla'	SELECT Continent FROM country WHERE Name = 'Anguilla'
0	select country.region from city join country on city.countrycode = country.code where city.name = 'Kabul'	SELECT region FROM country WHERE code IN (SELECT countrycode FROM city WHERE name = 'Kabul')
0	select region from country where capital = 'Kabul'	SELECT region FROM country WHERE code IN (SELECT countrycode FROM city WHERE name = 'Kabul');
0	select language from countrylanguage where countrycode = ( select code from country where name = 'Aruba' group by code order by count ( * ) desc limit 1 )	SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE name = 'Aruba') AND percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE name = 'Aruba'))
0	select countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.name = 'Aruba'	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba' ORDER BY Percentage DESC LIMIT 1
1	select population , lifeexpectancy from country where name = 'Brazil'	SELECT Population , LifeExpectancy FROM country WHERE Name = 'Brazil'
1	select population , lifeexpectancy from country where name = 'Brazil'	SELECT Population , LifeExpectancy FROM country WHERE Name = 'Brazil'
1	select region , population from country where name = 'Angola'	SELECT Population , Region FROM country WHERE Name = 'Angola'
1	select region , population from country where name = 'Angola'	SELECT Population , Region FROM country WHERE Name = 'Angola'
1	select avg ( lifeexpectancy ) from country where region = 'Central Africa'	SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
0	select avg ( lifeexpectancy ) from country where continent = 'Central Africa'	SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
0	select c.name from country c where c.lifeexpectancy = ( select min ( lifeexpectancy ) from country where region = 'Asia' )	SELECT Name FROM country WHERE Continent = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')
1	select name from country where continent = 'Asia' and lifeexpectancy = ( select min ( lifeexpectancy ) from country where continent = 'Asia' )	SELECT name FROM country WHERE continent = 'Asia' AND lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent = 'Asia')
0	select total ( population ) , max ( gnp ) from country where continent = 'Asia'	SELECT sum(Population) , max(GNP) FROM country WHERE Continent = 'Asia'
1	select sum ( population ) , max ( gnp ) from country where continent = 'Asia'	SELECT sum(Population) , max(GNP) FROM country WHERE Continent = 'Asia'
1	select avg ( lifeexpectancy ) from country where continent = 'Africa' and governmentform = 'Republic'	SELECT avg(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'
1	select avg ( lifeexpectancy ) from country where continent = 'Africa' and governmentform = 'Republic'	SELECT avg(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'
1	select sum ( surfacearea ) from country where continent = 'Asia' or continent = 'Europe'	SELECT sum(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'
1	select sum ( surfacearea ) from country where continent = 'Asia' or continent = 'Europe'	SELECT sum(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'
0	select ( population ) from city where district = 'Gelderland'	SELECT sum(Population) FROM city WHERE District = 'Gelderland'
1	select sum ( city.population ) from city join country on city.countrycode = country.code where city.district = 'Gelderland'	SELECT sum(Population) FROM city WHERE District = 'Gelderland'
0	select avg ( gnp ) , sum ( population ) from country where governmentform = 'United States'	SELECT avg(GNP) , sum(population) FROM country WHERE GovernmentForm = 'US Territory'
0	select avg ( gnp ) , sum ( population ) from country where continent = 'North America'	SELECT avg(GNP) , sum(population) FROM country WHERE GovernmentForm = 'US Territory'
1	select count ( distinct language ) from countrylanguage	SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
1	select count ( distinct language ) from countrylanguage	SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
1	select count ( distinct governmentform ) from country where continent = 'Africa'	SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
1	select count ( distinct governmentform ) from country where continent = 'Africa'	SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
0	select count ( distinct countrylanguage.language ) from countrylanguage join country on countrylanguage.countrycode = country.code where country.name = 'Aruba'	SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba'
0	select count ( * ) from countrylanguage join country on countrylanguage.countrycode = country.code where country.name = 'Aruba'	SELECT COUNT(DISTINCT countrylanguage.language) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.name = 'Aruba'
0	select count ( distinct countrylanguage.language ) from countrylanguage join country on countrylanguage.countrycode = country.code where country.name = 'Afghanistan'	SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Afghanistan' AND IsOfficial = 'T'
0	select count ( distinct countrylanguage.language ) from countrylanguage join country on countrylanguage.countrycode = country.code where country.name = 'Afghanistan'	SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Afghanistan' AND IsOfficial = 'T'
1	select name from country where code in ( select countrycode from countrylanguage group by countrycode having count ( language ) = ( select max ( cnt ) from ( select count ( language ) as cnt from countrylanguage group by countrycode ) ) )	SELECT T1.name FROM country AS T1 WHERE T1.Code IN (SELECT T2.CountryCode FROM countrylanguage AS T2 GROUP BY T2.CountryCode HAVING count(*) = (SELECT COUNT(*) AS C FROM countrylanguage AS T3 GROUP BY T3.CountryCode ORDER BY C DESC LIMIT 1))
1	select name from country where code in ( select countrycode from countrylanguage group by countrycode having count ( percentage ) = ( select max ( cnt ) from ( select count ( * ) as cnt from countrylanguage group by countrycode ) ) )	SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(DISTINCT language) = (SELECT MAX(lang_count) FROM (SELECT COUNT(DISTINCT language) AS lang_count FROM countrylanguage GROUP BY countrycode)))
0	select country.continent from country join countrylanguage on country.code = countrylanguage.countrycode group by country.continent order by count ( * ) desc limit 1	SELECT continent FROM (SELECT continent, COUNT(DISTINCT language) AS lang_count FROM country c INNER JOIN countrylanguage cl ON c.code = cl.countrycode GROUP BY continent ORDER BY lang_count DESC) WHERE lang_count = (SELECT MAX(lang_count) FROM (SELECT continent, COUNT(DISTINCT language) AS lang_count FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent))
0	select country.continent from country join countrylanguage on country.code = countrylanguage.countrycode group by country.continent order by count ( * ) desc limit 1	WITH LanguageCount AS (SELECT continent, COUNT(DISTINCT language) AS NumLanguages FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent) SELECT continent FROM LanguageCount WHERE NumLanguages = (SELECT MAX(NumLanguages) FROM LanguageCount)
0	select count ( * ) from ( select countrycode from countrylanguage where language = 'english' intersect select countrycode from countrylanguage where language = 'dutch' )	SELECT COUNT(DISTINCT a.code) FROM country AS a JOIN countrylanguage AS b ON a.code = b.countrycode WHERE b.language IN ('English', 'Dutch') GROUP BY a.code HAVING COUNT(DISTINCT b.language) = 2
0	select count ( distinct countrycode ) from countrylanguage where language = 'English' or language = 'Dutch'	SELECT COUNT(*) FROM (SELECT T1.Code, T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' INTERSECT SELECT T1.Code, T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Dutch');
0	select name from country where code in ( select countrycode from countrylanguage where language = 'english' intersect select countrycode from countrylanguage where language = 'french' )	SELECT T1.Name FROM country AS T1 WHERE T1.Code IN (SELECT T2.Code FROM country AS T2 JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' INTERSECT SELECT T2.Code FROM country AS T2 JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'French')
1	select c.name from country c where exists ( select 1 from countrylanguage cl where cl.countrycode = c.code and cl.language = 'English' ) and exists ( select 1 from countrylanguage cl where cl.countrycode = c.code and cl.language = 'French' )	SELECT T1.Name FROM country AS T1 WHERE T1.Code IN (SELECT T2.Code FROM country AS T2 JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' INTERSECT SELECT T2.Code FROM country AS T2 JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'French')
0	select name from country where code in ( select countrycode from countrylanguage where language = 'english' intersect select countrycode from countrylanguage where language = 'french' )	SELECT country.name FROM country JOIN countrylanguage AS cl1 ON country.code = cl1.countrycode JOIN countrylanguage AS cl2 ON country.code = cl2.countrycode WHERE cl1.language = 'English' AND cl1.isofficial = 'T' AND cl2.language = 'French' AND cl2.isofficial = 'T'
0	select name from country where code in ( select countrycode from countrylanguage where isofficial = 'English' intersect select countrycode from countrylanguage where isofficial = 'French' )	SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE isofficial = 'T' AND language = 'English') AND code IN (SELECT countrycode FROM countrylanguage WHERE isofficial = 'T' AND language = 'French')
1	select count ( distinct country.continent ) from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = 'Chinese'	SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'
1	select count ( distinct country.continent ) from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = 'Chinese'	SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'
0	select distinct country.region from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = 'english' or countrylanguage.language = 'dutch'	SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' OR T2.Language = 'Dutch'
1	select distinct country.region from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = 'Dutch' or countrylanguage.language = 'English'	SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' OR T2.Language = 'Dutch'
0	select distinct country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.isofficial = 'English' or countrylanguage.isofficial = 'Dutch'	select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = 'english' and isofficial = 't' union select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = 'dutch' and isofficial = 't'
0	select distinct country.name from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = 'english' or countrylanguage.language = 'dutch'	SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE isofficial = 'T' AND language IN ('English', 'Dutch'))
0	select countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.continent = 'Asia' group by countrylanguage.language order by sum ( percentage ) desc limit 1	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language HAVING COUNT(*) = (SELECT MAX(LangCount) FROM (SELECT COUNT(*) AS LangCount FROM country AS SubT1 JOIN countrylanguage AS SubT2 ON SubT1.Code = SubT2.CountryCode WHERE SubT1.Continent = 'Asia' GROUP BY SubT2.Language) AS Counts)
0	select countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.continent = 'Asia' group by countrylanguage.language order by count ( * ) desc limit 1	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language HAVING COUNT(*) = (SELECT MAX(c) FROM (SELECT COUNT(*) as c FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language) as counts)
1	select countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.governmentform = 'Republic' group by countrylanguage.language having count ( * ) = 1	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GovernmentForm = 'Republic' GROUP BY T2.Language HAVING COUNT(*) = 1
1	select countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.governmentform = 'Republic' group by countrylanguage.language having count ( * ) = 1	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GovernmentForm = 'Republic' GROUP BY T2.Language HAVING COUNT(*) = 1
0	select city.name , city.population from city join countrylanguage on city.countrycode = countrylanguage.countrycode where countrylanguage.language = 'english' group by city.countrycode order by city.population desc limit 1	SELECT T1.Name, T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' AND T1.Population = (SELECT max(T3.Population) FROM city AS T3 JOIN countrylanguage AS T4 ON T3.CountryCode = T4.CountryCode WHERE T4.Language = 'English')
0	select city.name , city.population from city join countrylanguage on city.countrycode = countrylanguage.countrycode where countrylanguage.language = 'english' and city.population = ( select max ( population ) from city join countrylanguage on city.countrycode = countrylanguage.countrycode where countrylanguage.language = 'english' )	SELECT T1.Name, T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' AND T1.Population = (SELECT max(T3.Population) FROM city AS T3 JOIN countrylanguage AS T4 ON T3.CountryCode = T4.CountryCode WHERE T4.Language = 'English')
1	select name , population , lifeexpectancy from country where continent = 'Asia' and surfacearea = ( select max ( surfacearea ) from country where continent = 'Asia' )	SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' AND SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
1	select name , population , lifeexpectancy from country where continent = 'Asia' and surfacearea = ( select max ( surfacearea ) from country where continent = 'Asia' )	SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' AND SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
0	select avg ( country.lifeexpectancy ) from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language != 'english'	SELECT AVG(c.lifeexpectancy) FROM country AS c WHERE c.code NOT IN (SELECT cl.countrycode FROM countrylanguage AS cl WHERE cl.language = 'English' AND cl.isofficial = 'T')
0	select avg ( lifeexpectancy ) from country where code in ( select countrycode from countrylanguage where language = 'english' )	SELECT AVG(c.lifeexpectancy) FROM country c WHERE NOT EXISTS (SELECT 1 FROM countrylanguage cl WHERE cl.countrycode = c.code AND cl.language = 'English' AND cl.isofficial = 'T')
0	select sum ( country.population ) from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language != 'english'	SELECT SUM(population) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
0	select sum ( country.population ) from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language != 'english'	SELECT SUM(population) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
0	select countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.headofstate = 'Beatrix'	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T'
0	select countrylanguage.language from country join countrylanguage on country.code = countrylanguage.countrycode where country.headofstate = 'Beatrix'	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T'
0	select count ( distinct countrylanguage.language ) from country join countrylanguage on country.code = countrylanguage.countrycode where country.indepyear < 1930	SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE IndepYear < 1930 AND T2.IsOfficial = 'T'
0	select count ( distinct countrylanguage.language ) from country join countrylanguage on country.code = countrylanguage.countrycode where country.indepyear < 1930	SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE IndepYear < 1930 AND T2.IsOfficial = 'T'
1	select name from country where surfacearea > ( select max ( surfacearea ) from country where continent = 'Europe' )	SELECT name FROM country WHERE surfacearea > (SELECT MAX(surfacearea) FROM country WHERE continent = 'Europe')
1	select name from country where surfacearea > ( select max ( surfacearea ) from country where continent = 'Europe' )	SELECT Name FROM country WHERE SurfaceArea > (SELECT max(SurfaceArea) FROM country WHERE Continent = 'Europe')
1	select country.name from country where country.continent = 'Africa' and country.population < ( select min ( population ) from country where continent = 'Asia' )	SELECT A.name FROM country AS A WHERE A.continent = 'Africa' AND A.population < (SELECT MIN(B.population) FROM country B WHERE B.continent = 'Asia')
1	select country.name from country where country.continent = 'Africa' and country.population < ( select min ( population ) from country where continent = 'Asia' )	SELECT Name FROM country WHERE Continent = 'Africa' AND population < (SELECT min(population) FROM country WHERE Continent = 'Asia')
1	select name from country where continent = 'Asia' and population > ( select max ( population ) from country where continent = 'Africa' )	SELECT Name FROM country WHERE Continent = 'Asia' AND population > (SELECT max(population) FROM country WHERE Continent = 'Africa')
1	select name from country where continent = 'Asia' and population > ( select max ( population ) from country where continent = 'Africa' )	SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
0	select countrycode from countrylanguage where language != 'english'	SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
0	select countrycode from countrylanguage where language != 'english'	SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
0	select countrycode from countrylanguage where language != 'english'	SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != 'English'
0	select distinct countrycode from countrylanguage where language != 'english'	SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != 'English'
0	select country.code from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language != 'english' and country.governmentform != 'Republic'	SELECT Code FROM country WHERE GovernmentForm != 'Republic' EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = 'English'
0	select countrylanguage.countrycode from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language != 'english' and country.governmentform != 'Republic'	SELECT Code FROM country WHERE GovernmentForm != 'Republic' EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = 'English'
0	select name from city where countrycode in ( select countrycode from countrylanguage where language = 'english' )	SELECT T1.name FROM city AS T1 WHERE T1.countrycode IN (SELECT T2.code FROM country AS T2 WHERE T2.continent = 'Europe' AND NOT EXISTS (SELECT countrycode FROM countrylanguage AS T3 WHERE T2.code = T3.countrycode AND T3.language = 'English' AND T3.isofficial = 'T'))
0	select name from city where countrycode in ( select countrycode from countrylanguage where language = 'english' )	SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode = T1.Code WHERE T1.Continent = 'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code = T4.CountryCode WHERE T4.IsOfficial = 'T' AND T4.Language = 'English')
0	select name from city where countrycode in ( select countrycode from countrylanguage where language = 'english' )	select distinct t3.name, t3.population from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode join city as t3 on t1.code = t3.countrycode where t2.isofficial = 't' and t2.language = 'chinese' and t1.continent = 'asia'
0	select name from city where countrycode in ( select countrycode from countrylanguage where language = 'english' )	SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode JOIN city AS T3 ON T1.Code = T3.CountryCode WHERE T2.IsOfficial = 'T' AND T2.Language = 'Chinese' AND T1.Continent = 'Asia'
1	select name , indepyear , surfacearea from country where population = ( select min ( population ) from country )	SELECT Name, SurfaceArea, IndepYear FROM country WHERE Population = (SELECT MIN(Population) FROM country)
1	select name , indepyear , surfacearea from country where population = ( select min ( population ) from country )	SELECT Name, SurfaceArea, IndepYear FROM country WHERE Population = (SELECT MIN(Population) FROM country)
1	select population , name , headofstate from country where surfacearea = ( select max ( surfacearea ) from country )	SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
1	select name , population , headofstate from country where surfacearea = ( select max ( surfacearea ) from country )	SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
1	select country.name , count ( distinct countrylanguage.language ) from countrylanguage join country on countrylanguage.countrycode = country.code group by countrylanguage.countrycode having count ( distinct countrylanguage.language ) >= 3	SELECT distinctcountry.name, num_languages FROM (SELECT C.name, COUNT(DISTINCT L.language) AS num_languages FROM country C INNER JOIN countrylanguage L ON C.code = L.countrycode GROUP BY C.code) AS distinctcountry WHERE distinctcountry.num_languages >= 3
1	select country.name , count ( * ) from country join countrylanguage on country.code = countrylanguage.countrycode group by countrylanguage.countrycode having count ( * ) > 2	SELECT country.name, COUNT(DISTINCT countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code HAVING COUNT(DISTINCT countrylanguage.language) > 2
1	select count ( * ) , district from city where population > ( select avg ( population ) from city ) group by district	SELECT count(*) , District FROM city WHERE Population > (SELECT avg(Population) FROM city) GROUP BY District
1	select count ( * ) , district from city where population > ( select avg ( population ) from city ) group by district	SELECT count(*) , District FROM city WHERE Population > (SELECT avg(Population) FROM city) GROUP BY District
1	select governmentform , sum ( population ) from country group by governmentform having avg ( lifeexpectancy ) > 72	SELECT sum(Population) , GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy) > 72
1	select governmentform , sum ( population ) from country group by governmentform having avg ( lifeexpectancy ) > 72	SELECT sum(Population) , GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy) > 72
1	select avg ( lifeexpectancy ) , sum ( population ) , continent from country group by continent having avg ( lifeexpectancy ) < 72	SELECT sum(Population) , avg(LifeExpectancy) , Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72
1	select continent , sum ( population ) , avg ( lifeexpectancy ) from country group by continent having avg ( lifeexpectancy ) < 72	SELECT sum(Population) , avg(LifeExpectancy) , Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72
0	select name , surfacearea from country order by surfacearea asc , code	SELECT Name, SurfaceArea FROM (SELECT Name, SurfaceArea, Code FROM country ORDER BY SurfaceArea DESC LIMIT 5) AS TopAreas ORDER BY Name ASC, Code ASC
0	select name , surfacearea from country order by surfacearea desc , population asc	SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC, Population DESC, Code ASC LIMIT 5
0	select name from country order by population desc , name asc	SELECT name FROM country ORDER BY population DESC, name, code LIMIT 3
0	select name from country order by population desc , name asc	SELECT Name FROM country ORDER BY Population DESC, Name ASC, Code ASC LIMIT 3
0	select name from country order by population desc , name asc	SELECT Name FROM country ORDER BY Population ASC, Name ASC, Code ASC LIMIT 3
0	select name from country order by population desc , name asc	SELECT Name FROM (SELECT Name, Code FROM country ORDER BY Population ASC, Name ASC, Code ASC LIMIT 3) AS subquery ORDER BY Name ASC
1	select count ( * ) from country where continent = 'Asia'	SELECT count(*) FROM country WHERE continent = 'Asia'
1	select count ( * ) from country where continent = 'Asia'	SELECT count(*) FROM country WHERE continent = 'Asia'
1	select name from country where continent = 'Europe' and population = 80000	SELECT Name FROM country WHERE continent = 'Europe' AND Population = '80000'
1	select name from country where continent = 'Europe' and population = 80000	SELECT Name FROM country WHERE continent = 'Europe' AND Population = '80000'
0	select sum ( population ) , avg ( surfacearea ) from country where continent = 'North America' and surfacearea > 3000	select sum(population) , avg(surfacearea) from country where continent = 'north america' and surfacearea > 3000
0	select sum ( population ) , avg ( surfacearea ) from country where continent = 'North America' and surfacearea > 3000	select sum(population) , avg(surfacearea) from country where continent = 'north america' and surfacearea > 3000
1	select name from city where population between 160000 and 900000	SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000
1	select name from city where population between 160000 and 900000	select name from city where population between 160000 and 900000
1	select language from ( select language , count ( countrycode ) as num_countrycodes from countrylanguage group by language ) where num_countrycodes = ( select max ( num_countrycodes ) from ( select count ( countrycode ) as num_countrycodes from countrylanguage group by language ) )	SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE HAVING count(*) = (SELECT max(c) FROM (SELECT count(*) as c FROM countrylanguage GROUP BY LANGUAGE) temp)
1	select language from ( select language , count ( countrycode ) as num_countrycodes from countrylanguage group by language ) where num_countrycodes = ( select max ( num_countrycodes ) from ( select count ( countrycode ) as num_countrycodes from countrylanguage group by language ) )	SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE HAVING COUNT(*) = (SELECT MAX(C) FROM (SELECT COUNT(*) AS C FROM countrylanguage GROUP BY LANGUAGE) sub)
0	select countrylanguage.language , country.code , country.name from countrylanguage join country on countrylanguage.countrycode = country.code group by countrylanguage.countrycode having sum ( percentage ) = ( select max ( percentage ) from ( select sum ( percentage ) as percentage from countrylanguage group by countrycode ) )	SELECT T1.Language, T1.CountryCode, T2.Name FROM countrylanguage AS T1 JOIN country as T2 on T1.CountryCode = T2.Code WHERE Percentage = (SELECT MAX(Percentage) FROM countrylanguage as T3 WHERE T3.CountryCode = T2.Code)
0	select countrylanguage.countrycode , countrylanguage.language from countrylanguage join country on countrylanguage.countrycode = country.code group by countrylanguage.countrycode	SELECT LANGUAGE , CountryCode , max(Percentage) FROM countrylanguage GROUP BY CountryCode
1	select count ( distinct cl.countrycode ) from countrylanguage cl where cl.language = 'Spanish' and cl.percentage = ( select max ( percentage ) from countrylanguage where language = 'Spanish' )	SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage as T1 WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage as T2 WHERE T2.CountryCode = T1.CountryCode)
0	select count ( distinct countrycode ) from countrylanguage where language = 'Spanish'	SELECT count(*) , max(Percentage) FROM countrylanguage WHERE LANGUAGE = 'Spanish' GROUP BY CountryCode
1	select country.code from countrylanguage join country on countrylanguage.countrycode = country.code where countrylanguage.language = 'Spanish' and countrylanguage.percentage = ( select max ( percentage ) from countrylanguage )	SELECT DISTINCT CountryCode FROM countrylanguage as T1 WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage as T2 WHERE T2.CountryCode = T1.CountryCode)
1	select countrycode from countrylanguage where language = 'Spanish'	SELECT CountryCode , max(Percentage) FROM countrylanguage WHERE LANGUAGE = 'Spanish' GROUP BY CountryCode
1	select count ( * ) from conductor	SELECT count(*) FROM conductor
1	select count ( * ) from conductor	SELECT count(*) FROM conductor
1	select name from conductor order by age asc , conductor_id	SELECT Name FROM conductor ORDER BY Age ASC, Conductor_ID ASC
1	select name from conductor order by age asc , conductor_id	SELECT Name FROM conductor ORDER BY Age ASC, Conductor_ID ASC
1	select name from conductor where nationality != 'USA'	SELECT Name FROM conductor WHERE Nationality != 'USA'
1	select name from conductor where nationality != 'USA'	SELECT Name FROM conductor WHERE Nationality != 'USA'
0	select name from conductor where nationality != 'USA'	SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC, Orchestra_ID ASC
0	select name from conductor where nationality != 'USA'	SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC, Orchestra_ID ASC
1	select avg ( attendance ) from show	SELECT avg(Attendance) FROM SHOW
1	select avg ( attendance ) from show	SELECT avg(Attendance) FROM SHOW
1	select max ( share ) , min ( share ) from performance where type != 'Live final'	SELECT max(SHARE) , min(SHARE) FROM performance WHERE TYPE != 'Live final'
1	select max ( share ) , min ( share ) from performance where type != 'Live final'	SELECT max(SHARE) , min(SHARE) FROM performance WHERE TYPE != 'Live final'
1	select count ( distinct nationality ) from conductor	SELECT count(DISTINCT Nationality) FROM conductor
1	select count ( distinct nationality ) from conductor	SELECT count(DISTINCT Nationality) FROM conductor
0	select count ( distinct nationality ) from conductor	SELECT Name FROM conductor ORDER BY Year_of_Work DESC, Conductor_ID ASC
0	select count ( distinct nationality ) from conductor	SELECT Name FROM conductor ORDER BY Year_of_Work DESC, Conductor_ID ASC
1	select name from conductor where year_of_work = ( select max ( year_of_work ) from conductor )	SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
1	select name from conductor where year_of_work = ( select max ( year_of_work ) from conductor )	SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
1	select conductor.name , orchestra.orchestra from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id	SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
1	select conductor.name , orchestra.orchestra from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id	SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
1	select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.conductor_id having count ( * ) > 1	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*) > 1
1	select conductor.name from orchestra join conductor on orchestra.conductor_id = conductor.conductor_id group by conductor.conductor_id having count ( * ) > 1	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*) > 1
0	select conductor.name from performance join orchestra on performance.orchestra_id = orchestra.orchestra_id join conductor on conductor.conductor_id = orchestra.conductor_id group by conductor.conductor_id order by count ( * ) desc limit 1	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(*) = (SELECT MAX(Counted) FROM (SELECT COUNT(*) as Counted FROM orchestra GROUP BY Conductor_ID) as MaxCount)
0	select conductor.name from performance join orchestra on performance.orchestra_id = orchestra.orchestra_id join conductor on conductor.conductor_id = orchestra.conductor_id group by conductor.conductor_id order by count ( * ) desc limit 1	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(*) = (SELECT MAX(CountOrch) FROM (SELECT COUNT(*) AS CountOrch FROM orchestra GROUP BY Conductor_ID) AS TempTable)
1	select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id where orchestra.year_of_founded > 2008 group by conductor.conductor_id	SELECT T1.Name FROM conductor AS T1 WHERE T1.conductor_id IN (SELECT T2.conductor_id FROM orchestra AS T2 WHERE T2.year_of_founded > 2008)
0	select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id where orchestra.year_of_founded > 2008	SELECT T1.Name FROM conductor AS T1 WHERE T1.conductor_id IN (SELECT T2.conductor_id FROM orchestra AS T2 WHERE T2.year_of_founded > 2008)
1	select record_company , count ( * ) from orchestra group by record_company	SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company
1	select record_company , count ( * ) from orchestra group by record_company	SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company
0	select record_company , count ( * ) from orchestra group by record_company	SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*), Major_Record_Format ASC
1	select major_record_format from orchestra group by major_record_format order by count ( * ) asc , major_record_format	SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*), Major_Record_Format, Orchestra_ID
1	select record_company from orchestra group by record_company having count ( * ) = ( select max ( cnt ) from ( select count ( * ) as cnt from orchestra group by record_company ) )	SELECT Record_Company FROM orchestra GROUP BY Record_Company HAVING COUNT(*) = (SELECT MAX(orch_count) FROM (SELECT COUNT(*) AS orch_count FROM orchestra GROUP BY Record_Company) AS counts)
1	select record_company from orchestra group by record_company having count ( orchestra_id ) = ( select max ( cnt ) from ( select count ( orchestra_id ) as cnt from orchestra group by record_company ) )	SELECT record_company FROM (SELECT record_company, COUNT(*) AS num_orchestras FROM orchestra GROUP BY record_company ORDER BY num_orchestras DESC) AS rc WHERE rc.num_orchestras = (SELECT MAX(num_orchestras) FROM (SELECT COUNT(*) AS num_orchestras FROM orchestra GROUP BY record_company) as stats)
1	select orchestra from orchestra where orchestra_id not in ( select orchestra_id from performance )	SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
1	select orchestra from orchestra where orchestra_id not in ( select orchestra_id from performance )	SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
1	select record_company from orchestra where year_of_founded < 2003 intersect select record_company from orchestra where year_of_founded > 2003	SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
0	select record_company from orchestra where year_of_founded <= 2003 intersect select record_company from orchestra where year_of_founded > 2003	SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
1	select count ( * ) from orchestra where major_record_format = 'CD' or major_record_format = 'DVD'	SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'
1	select count ( * ) from orchestra where major_record_format = 'CD' or major_record_format = 'DVD'	SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'
1	select distinct o.year_of_founded from orchestra o join performance p on o.orchestra_id = p.orchestra_id group by o.orchestra_id having count ( distinct p.performance_id ) > 1	SELECT DISTINCT o.year_of_founded FROM orchestra o WHERE o.orchestra_id IN (SELECT p.orchestra_id FROM performance p GROUP BY p.orchestra_id HAVING COUNT(p.performance_id) > 1)
1	select orchestra.year_of_founded from performance join orchestra on performance.orchestra_id = orchestra.orchestra_id group by performance.orchestra_id having count ( * ) > 1	SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*) > 1
1	select count ( * ) from highschooler	SELECT count(*) FROM Highschooler
1	select count ( * ) from highschooler	SELECT count(*) FROM Highschooler
1	select name , grade from highschooler	SELECT name , grade FROM Highschooler
1	select name , grade from highschooler	SELECT name , grade FROM Highschooler
1	select distinct grade from highschooler	SELECT DISTINCT grade FROM Highschooler
1	select grade from highschooler	SELECT grade FROM Highschooler
1	select grade from highschooler where name = 'Kyle'	SELECT grade FROM Highschooler WHERE name = 'Kyle'
1	select grade from highschooler where name = 'Kyle'	SELECT grade FROM Highschooler WHERE name = 'Kyle'
1	select name from highschooler where grade = 10	SELECT name FROM Highschooler WHERE grade = 10
1	select name from highschooler where grade = 10	SELECT name FROM Highschooler WHERE grade = 10
1	select id from highschooler where name = 'Kyle'	SELECT ID FROM Highschooler WHERE name = 'Kyle'
1	select id from highschooler where name = 'Kyle'	SELECT ID FROM Highschooler WHERE name = 'Kyle'
1	select count ( * ) from highschooler where grade = 9 or grade = 10	SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10
1	select count ( * ) from highschooler where grade = 9 or grade = 10	SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10
1	select grade , count ( * ) from highschooler group by grade	SELECT grade , count(*) FROM Highschooler GROUP BY grade
1	select count ( * ) , grade from highschooler group by grade	SELECT grade , count(*) FROM Highschooler GROUP BY grade
1	select grade from highschooler group by grade having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from highschooler group by grade ) )	WITH GradeCounts AS (SELECT grade, COUNT(*) AS total FROM Highschooler GROUP BY grade) SELECT grade FROM GradeCounts WHERE total = (SELECT MAX(total) FROM GradeCounts)
1	select grade from highschooler group by grade having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from highschooler group by grade ) )	SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) = (SELECT MAX(count) FROM (SELECT COUNT(*) AS count FROM Highschooler GROUP BY grade) AS counts)
1	select grade from highschooler group by grade having count ( * ) >= 4	SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4
1	select grade from highschooler group by grade having count ( * ) >= 4	SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4
0	select hs.id , count ( f.friend_id ) as total_friends from highschooler hs left join friend f on hs.id = f.student_id group by hs.id	SELECT T1.ID, COUNT(T2.total) AS total_friends FROM Highschooler as T1 LEFT JOIN (SELECT friend_id AS id, COUNT(*) AS total FROM friend GROUP BY friend_id UNION ALL SELECT student_id AS id, COUNT(*) AS total FROM friend GROUP BY student_id) T2 ON T1.ID = T2.id GROUP BY T1.ID;
0	select count ( * ) , highschooler.id from highschooler join friend on highschooler.id = friend.student_id group by highschooler.id	SELECT id, (SELECT COUNT(*) FROM friend WHERE friend_id = h.id) + (SELECT COUNT(*) FROM friend WHERE student_id = h.id) AS num_friends FROM highschooler h
1	select highschooler.name , count ( friend.friend_id ) from highschooler left join friend on highschooler.id = friend.student_id group by highschooler.id	SELECT name, (SELECT COUNT(*) FROM friend WHERE highschooler.id = friend.student_id) AS friend_count FROM highschooler
0	select highschooler.name , count ( friend.friend_id ) from highschooler left join friend on highschooler.id = friend.student_id group by highschooler.id having count ( friend.friend_id ) = ( select max ( friend_count ) from ( select count ( friend_id ) as friend_count from friend group by student_id ) )	SELECT h.name, (SELECT COUNT(*) FROM friend WHERE student_id = h.id) as num_friends FROM highschooler h
0	select name from ( select highschooler.name , count ( friend_id ) as num_friends from highschooler join friend on highschooler.id = friend.student_id group by highschooler.id ) where num_friends = ( select max ( num_friends ) from ( select count ( friend_id ) as num_friends from friend group by student_id ) )	SELECT T2.name FROM (SELECT student_id AS id FROM Friend UNION ALL SELECT friend_id AS id FROM Friend) AS T1 JOIN Highschooler AS T2 ON T1.id = T2.ID GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1
0	select name from highschooler inner join ( select student_id , count ( friend_id ) as num_friends from friend group by student_id ) as temp on highschooler.id = temp.student_id where num_friends = ( select max ( num_friends ) from ( select count ( friend_id ) as num_friends from friend group by student_id ) )	SELECT H.name FROM Highschooler AS H JOIN (SELECT F.student_id, COUNT(*) AS num_friends FROM Friend AS F GROUP BY F.student_id) AS T ON H.ID = T.student_id WHERE T.num_friends = (SELECT MAX(num_friends) FROM (SELECT COUNT(*) AS num_friends FROM Friend GROUP BY student_id) AS Subquery) ORDER BY H.name
0	select highschooler.name from highschooler join friend on highschooler.id = friend.student_id group by highschooler.id having count ( * ) >= 3	SELECT H.name FROM highschooler H WHERE (SELECT COUNT(*) FROM friend F WHERE F.student_id = H.id OR F.friend_id = H.id) >= 3
0	select highschooler.name from highschooler join friend on highschooler.id = friend.student_id group by highschooler.id having count ( * ) >= 3	SELECT h.name FROM highschooler h WHERE (SELECT COUNT(*) FROM friend WHERE student_id = h.id OR friend_id = h.id) >= 3
0	select friend.friend_id , highschooler.name from highschooler join friend on highschooler.id = friend.student_id where highschooler.name = 'Kyle'	SELECT T2.id AS student_id, T3.name AS friend_name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = 'Kyle'
0	select friend.friend_id , highschooler.name from highschooler join friend on highschooler.id = friend.student_id where highschooler.name = 'Kyle'	SELECT T2.ID, T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID JOIN Highschooler AS T3 ON T1.friend_id = T3.ID WHERE T2.name = 'Kyle'
1	select highschooler.id , count ( friend.friend_id ) as num_friends from highschooler left join friend on highschooler.id = friend.student_id where highschooler.name = 'Kyle' group by highschooler.id	SELECT H.id, COUNT(F.friend_id) AS num_friends FROM highschooler H LEFT JOIN friend F ON H.id = F.student_id WHERE H.name = 'Kyle' GROUP BY H.id
1	select highschooler.id , count ( friend.friend_id ) from highschooler join friend on highschooler.id = friend.student_id where highschooler.name = 'Kyle' group by highschooler.id	SELECT T2.ID, count(*) AS num_friends FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = 'Kyle' GROUP BY T2.ID
0	select id from highschooler except select student_id from friend	SELECT id FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend UNION SELECT friend_id FROM friend)
0	select id from highschooler except select student_id from friend	SELECT id FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT friend_id FROM friend)
0	select name from highschooler where id not in ( select student_id from friend )	SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)
0	select name from highschooler where id not in ( select student_id from friend )	SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT friend_id FROM friend)
0	select id from highschooler where id in ( select student_id from friend where friend_id = highschooler.id ) and id in ( select student_id from likes where liked_id = highschooler.id )	SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
0	select student_id from friend where friend_id in ( select student_id from likes ) and student_id in ( select student_id from likes )	SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
1	select name from highschooler where id in ( select student_id from friend ) and id in ( select liked_id from likes )	SELECT T1.name FROM highschooler AS T1 WHERE T1.id IN (SELECT DISTINCT T2.student_id FROM friend AS T2) and T1.id IN (SELECT DISTINCT T3.liked_id FROM likes AS T3)
0	select name from highschooler where id in ( select student_id from friend ) and id in ( select student_id from likes )	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id
0	select count ( * ) , student_id from likes group by student_id	SELECT id, COUNT(DISTINCT L1.liked_id) + COUNT(DISTINCT L2.student_id) AS total_likes FROM highschooler h LEFT JOIN likes L1 ON h.id = L1.student_id LEFT JOIN likes L2 ON h.id = L2.liked_id GROUP BY id
0	select count ( * ) , count ( * ) , student_id from likes group by student_id	SELECT T1.ID, (SELECT COUNT(*) FROM Likes as T2 WHERE T2.student_id = T1.ID) as given, (SELECT COUNT(*) FROM Likes AS T3 WHERE T3.liked_id = T1.ID) as received FROM Highschooler AS T1
0	select highschooler.name , sum ( likes.liked_id ) from likes join highschooler on likes.student_id = highschooler.id group by highschooler.id	SELECT T2.name, COALESCE(COUNT(DISTINCT T1.liked_id), 0) AS likes_given, COALESCE(COUNT(DISTINCT T3.student_id), 0) AS likes_received FROM Highschooler AS T2 LEFT JOIN Likes AS T1 ON T1.student_id = T2.ID LEFT JOIN Likes AS T3 ON T3.liked_id = T2.ID GROUP BY T2.ID, T2.name
0	select highschooler.name , sum ( likes.liked_id ) from likes join highschooler on likes.student_id = highschooler.id group by highschooler.id	SELECT T2.name, COUNT(DISTINCT T1.student_id) AS likes_given, COUNT(DISTINCT T3.liked_id) AS likes_received FROM Highschooler AS T2 LEFT JOIN Likes AS T1 ON T1.student_id = T2.ID LEFT JOIN Likes AS T3 ON T3.liked_id = T2.ID GROUP BY T2.name
0	select highschooler.name from highschooler join likes on highschooler.id = likes.student_id group by highschooler.id order by count ( * ) desc limit 1	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id GROUP BY T1.liked_id HAVING count(*) = (SELECT max(count) FROM (SELECT count(*) as count FROM Likes GROUP BY liked_id) AS counts)
0	select highschooler.name from highschooler join likes on highschooler.id = likes.student_id group by highschooler.id order by count ( * ) desc limit 1	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id GROUP BY T1.liked_id HAVING count(*) = (SELECT MAX(ncount) from (SELECT COUNT(*) as ncount FROM Likes AS T3 JOIN Highschooler AS T4 ON T3.liked_id = T4.id GROUP BY T3.liked_id) temp)
0	select highschooler.name from highschooler join likes on highschooler.id = likes.student_id group by likes.student_id having count ( * ) >= 2	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id GROUP BY T1.liked_id HAVING count(*) >= 2
0	select highschooler.name from highschooler join likes on highschooler.id = likes.student_id group by likes.student_id having count ( * ) >= 2	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id GROUP BY T1.liked_id HAVING count(*) >= 2
0	select name from highschooler where grade > 5 and id in ( select student_id from friend group by student_id having count ( friend_id ) >= 2 or count ( friend_id ) >= 2 )	SELECT T2.name FROM Highschooler AS T2 JOIN Friend AS T1 ON T1.student_id = T2.id OR T1.friend_id = T2.id WHERE T2.grade > 5 GROUP BY T2.id HAVING count(*) >= 2
0	select name from highschooler where grade > 5 and id in ( select friend_id from friend group by friend_id having count ( friend_id ) >= 2 ) and id in ( select friend_id from friend group by friend_id having count ( friend_id ) >= 2 )	SELECT T2.name FROM Highschooler AS T2 JOIN Friend AS T1 ON T1.student_id = T2.id OR T1.friend_id = T2.id WHERE T2.grade > 5 GROUP BY T2.id HAVING count(*) >= 2
0	select highschooler.id , count ( likes.liked_id ) from highschooler join likes on highschooler.id = likes.student_id where highschooler.name = 'Kyle' group by highschooler.id	SELECT h.id AS student_id, (SELECT COUNT(*) FROM likes WHERE liked_id = h.id) AS likes_count FROM highschooler h WHERE h.name = 'Kyle'
0	select highschooler.id , sum ( likes.liked_id ) from highschooler join likes on highschooler.id = likes.student_id where highschooler.name = 'Kyle' group by highschooler.id	SELECT T2.ID, count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.ID WHERE T2.name = 'Kyle' GROUP BY T2.ID
1	select avg ( grade ) from highschooler where id in ( select student_id from friend ) or id in ( select friend_id from friend )	SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)
1	select avg ( grade ) from highschooler where id in ( select student_id from friend ) or id in ( select friend_id from friend )	SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)
1	select min ( grade ) from highschooler where id not in ( select student_id from friend )	SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id)
0	select min ( grade ) from highschooler where id not in ( select student_id from friend where friend_id = highschooler.id )	SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)
1	select state from owners intersect select state from professionals	SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
1	select state from owners intersect select state from professionals	SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
1	select avg ( age ) from dogs where dog_id in ( select dog_id from treatments )	SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
1	select avg ( age ) from dogs where dog_id in ( select dog_id from treatments )	SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
1	select p.professional_id , p.last_name , p.cell_number from professionals p where p.state = 'Indiana' or p.professional_id in ( select t.professional_id from treatments t group by t.professional_id having count ( t.treatment_id ) > 2 )	SELECT professional_id , last_name , cell_number FROM Professionals WHERE state = 'Indiana' UNION SELECT T1.professional_id , T1.last_name , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) > 2
0	select professionals.professional_id , professionals.last_name , professionals.cell_number from professionals join treatments on professionals.professional_id = treatments.professional_id where professionals.state = 'Indiana' union select professionals.professional_id , professionals.last_name , professionals.cell_number from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( * ) > 2	SELECT professional_id , last_name , cell_number FROM Professionals WHERE state = 'Indiana' UNION SELECT T1.professional_id , T1.last_name , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) > 2
1	select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum ( cost_of_treatment ) > 1000 )	select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment) > 1000 )
1	select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum ( cost_of_treatment ) > 1000 )	select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment) > 1000 )
0	select first_name from professionals where professional_id in ( select professional_id from owners ) or first_name in ( select name from dogs )	SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
0	select first_name from professionals where professional_id in ( select professional_id from owners ) or first_name in ( select name from dogs )	SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
1	select professional_id , role_code , email_address from professionals where professional_id not in ( select professional_id from treatments )	SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id
1	select professional_id , role_code , email_address from professionals where professional_id not in ( select professional_id from treatments )	SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id
1	select owners.owner_id , owners.first_name , owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id group by owners.owner_id having count ( dogs.dog_id ) = ( select max ( count ) from ( select count ( dog_id ) as count from dogs group by owner_id ) )	SELECT T1.owner_id, T2.first_name, T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id, T2.first_name, T2.last_name HAVING COUNT(*) = (SELECT MAX(dog_count) FROM (SELECT owner_id, COUNT(*) AS dog_count FROM Dogs GROUP BY owner_id) sub)
1	select owners.owner_id , owners.first_name , owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id group by owners.owner_id having count ( dogs.dog_id ) = ( select max ( count ) from ( select count ( dog_id ) as count from dogs group by owner_id ) )	SELECT T1.owner_id, T2.first_name, T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id HAVING count(*) = (SELECT MAX(dog_count) FROM (SELECT owner_id, count(*) AS dog_count FROM Dogs GROUP BY owner_id) AS subquery)
1	select professionals.professional_id , professionals.role_code , professionals.first_name from treatments join professionals on treatments.professional_id = professionals.professional_id group by professionals.professional_id having count ( * ) >= 2	SELECT T1.professional_id , T1.role_code , T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2
1	select treatments.professional_id , professionals.role_code , professionals.first_name from treatments join professionals on treatments.professional_id = professionals.professional_id group by treatments.professional_id having count ( * ) >= 2	SELECT T1.professional_id , T1.role_code , T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2
1	select breeds.breed_name from breeds join dogs on breeds.breed_code = dogs.breed_code group by breeds.breed_code having count ( dogs.dog_id ) = ( select max ( cnt ) from ( select count ( dog_id ) as cnt from dogs group by breed_code ) )	SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_code HAVING COUNT(*) = (SELECT MAX(counts) FROM (SELECT COUNT(*) AS counts FROM Dogs GROUP BY breed_code) AS subquery)
0	select breeds.breed_name from breeds join dogs on breeds.breed_code = dogs.breed_code group by breeds.breed_name having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from dogs group by breed_code ) )	SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_code HAVING COUNT(*) = (SELECT MAX(dog_count) FROM (SELECT COUNT(*) AS dog_count FROM Dogs GROUP BY breed_code) AS subquery)
0	select owners.owner_id , owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id join treatments on dogs.dog_id = treatments.dog_id group by owners.owner_id order by count ( * ) desc limit 1	SELECT T1.owner_id, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id, T1.last_name HAVING COUNT(*) = (SELECT MAX(treatment_count) FROM (SELECT COUNT(*) AS treatment_count FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY owner_id) AS max_count)
0	select owners.owner_id , owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id join treatments on dogs.dog_id = treatments.dog_id order by treatments.cost_of_treatment desc limit 1	SELECT T1.owner_id, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id, T1.last_name HAVING SUM(T3.cost_of_treatment) = (SELECT MAX(cost) FROM (SELECT SUM(T5.cost_of_treatment) as cost FROM Dogs AS T4 JOIN Treatments AS T5 ON T4.dog_id = T5.dog_id GROUP BY T4.owner_id))
0	select treatment_types.treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code group by treatments.treatment_type_code order by sum ( cost_of_treatment ) asc limit 1	WITH TotalCosts AS (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code) SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN TotalCosts AS T2 ON T1.treatment_type_code = T2.treatment_type_code WHERE T2.total_cost = (SELECT MIN(total_cost) FROM TotalCosts)
0	select treatment_types.treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code group by treatments.treatment_type_code order by sum ( cost_of_treatment ) asc limit 1	SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code HAVING SUM(T2.cost_of_treatment) = (SELECT MIN(total_cost) FROM (SELECT SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code) AS SubQuery)
0	select owners.owner_id , owners.zip_code from charges join owners on charges.charge_amount = owners.owner_id group by owners.owner_id order by sum ( charges.charge_amount ) desc limit 1	SELECT T1.owner_id, T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id HAVING SUM(T3.cost_of_treatment) = (SELECT MAX(cost) FROM (SELECT SUM(T5.cost_of_treatment) as cost FROM Dogs AS T4 JOIN Treatments AS T5 ON T4.dog_id = T5.dog_id GROUP BY T4.owner_id))
1	select owners.owner_id , owners.zip_code from owners join dogs on owners.owner_id = dogs.owner_id join treatments on dogs.dog_id = treatments.dog_id group by owners.owner_id order by sum ( treatments.cost_of_treatment ) desc limit 1	SELECT T1.owner_id, T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id HAVING SUM(T3.cost_of_treatment) = (SELECT MAX(total_cost) FROM (SELECT SUM(T3.cost_of_treatment) AS total_cost FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id) AS Sub)
0	select professionals.professional_id , professionals.cell_number from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count ( * ) >= 2	SELECT p.professional_id, p.cell_number FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id, p.cell_number HAVING COUNT(DISTINCT t.treatment_type_code) >= 2
1	select professionals.professional_id , professionals.cell_number from treatments join professionals on treatments.professional_id = professionals.professional_id group by professionals.professional_id having count ( distinct treatments.treatment_type_code ) >= 2	SELECT P.professional_id, P.cell_number FROM professionals P JOIN treatments T ON P.professional_id = T.professional_id GROUP BY P.professional_id, P.cell_number HAVING COUNT(DISTINCT T.treatment_type_code) >= 2
0	select professionals.first_name , professionals.last_name from treatments join professionals on treatments.professional_id = professionals.professional_id where treatments.cost_of_treatment < ( select avg ( cost_of_treatment ) from treatments )	SELECT T1.first_name, T1.last_name FROM Professionals AS T1 WHERE T1.professional_id IN (SELECT T2.professional_id FROM treatments AS T2 WHERE T2.cost_of_treatment < (SELECT AVG(T3.cost_of_treatment) FROM treatments AS T3))
1	select professionals.first_name , professionals.last_name from professionals where exists ( select 1 from treatments where treatments.professional_id = professionals.professional_id and treatments.cost_of_treatment < ( select avg ( cost_of_treatment ) from treatments ) )	SELECT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment < (SELECT avg(cost_of_treatment) FROM Treatments))
1	select treatments.date_of_treatment , professionals.first_name from treatments join professionals on treatments.professional_id = professionals.professional_id	SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
1	select date_of_treatment , professionals.first_name from treatments join professionals on treatments.professional_id = professionals.professional_id	SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
1	select treatments.cost_of_treatment , treatment_types.treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code	SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
1	select treatments.cost_of_treatment , treatment_types.treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code	SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
1	select owners.first_name , owners.last_name , dogs.size_code from owners join dogs on owners.owner_id = dogs.owner_id join sizes on dogs.size_code = sizes.size_code	SELECT T1.first_name , T1.last_name , T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
1	select owners.first_name , owners.last_name , dogs.size_code from owners join dogs on owners.owner_id = dogs.owner_id join sizes on dogs.size_code = sizes.size_code	SELECT T1.first_name , T1.last_name , T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
1	select owners.first_name , dogs.name from dogs join owners on dogs.owner_id = owners.owner_id	SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
1	select owners.first_name , dogs.name from owners join dogs on owners.owner_id = dogs.owner_id	SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
0	select name , date_of_treatment from dogs join treatments on dogs.dog_id = treatments.dog_id where dogs.breed_code = ( select min ( breed_code ) from dogs )	SELECT T1.name, T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code IN (SELECT breed_code FROM Dogs GROUP BY breed_code HAVING COUNT(*) = (SELECT COUNT(*) FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1))
0	select name , date_of_treatment from dogs join treatments on dogs.dog_id = treatments.dog_id where dogs.breed_code = ( select min ( breed_code ) from dogs )	SELECT T1.name, T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code IN (SELECT breed_code FROM Dogs GROUP BY breed_code HAVING count(*) = (SELECT MIN(c) FROM (SELECT count(*) AS c FROM Dogs GROUP BY breed_code) AS counts))
1	select dogs.name , owners.first_name from dogs join owners on dogs.owner_id = owners.owner_id where owners.state = 'Virginia'	SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
0	select owners.first_name , dogs.name from owners join dogs on owners.owner_id = dogs.owner_id where owners.state = 'VA'	SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
1	select date_arrived , date_departed from dogs where dog_id in ( select dog_id from treatments )	SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)
1	select date_arrived , date_departed from dogs where dog_id in ( select dog_id from treatments )	SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)
0	select distinct owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id where dogs.age = ( select min ( age ) from dogs )	SELECT o.last_name FROM Owners AS o WHERE o.owner_id IN (SELECT d1.owner_id FROM dogs AS d1 WHERE d1.age = (SELECT MIN(d2.age) FROM dogs AS d2))
0	select owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id order by dogs.age asc limit 1	SELECT o.last_name FROM Owners AS o WHERE o.owner_id IN (SELECT d1.owner_id FROM dogs AS d1 WHERE d1.age = (SELECT MIN(d2.age) FROM dogs AS d2))
1	select email_address from professionals where state = 'Hawaii' or state = 'Wisconsin'	SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'
1	select email_address from professionals where state = 'Hawaii' or state = 'Wisconsin'	SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'
1	select date_arrived , date_departed from dogs	SELECT date_arrived , date_departed FROM Dogs
1	select date_arrived , date_departed from dogs	SELECT date_arrived , date_departed FROM Dogs
1	select count ( distinct dog_id ) from treatments	SELECT count(DISTINCT dog_id) FROM Treatments
1	select count ( distinct dog_id ) from treatments	SELECT count(DISTINCT dog_id) FROM Treatments
1	select count ( distinct professional_id ) from treatments	SELECT count(DISTINCT professional_id) FROM Treatments
1	select count ( distinct professional_id ) from treatments	SELECT count(DISTINCT professional_id) FROM Treatments
1	select role_code , street , city , state from professionals where city like '%West%'	SELECT role_code , street , city , state FROM professionals WHERE city LIKE '%West%'
1	select role_code , street , city , state from professionals where city like '%West%'	SELECT role_code , street , city , state FROM professionals WHERE city LIKE '%West%'
1	select first_name , last_name , email_address from owners where state like '%North%'	SELECT first_name , last_name , email_address FROM Owners WHERE state LIKE '%North%'
1	select first_name , last_name , email_address from owners where state like '%North%'	SELECT first_name , last_name , email_address FROM Owners WHERE state LIKE '%North%'
1	select count ( * ) from dogs where age < ( select avg ( age ) from dogs )	SELECT count(*) FROM Dogs WHERE age < ( SELECT avg(age) FROM Dogs )
1	select count ( * ) from dogs where age < ( select avg ( age ) from dogs )	SELECT count(*) FROM Dogs WHERE age < ( SELECT avg(age) FROM Dogs )
1	select max ( cost_of_treatment ) from treatments where date_of_treatment = ( select max ( date_of_treatment ) from treatments order by date_of_treatment desc limit 1 )	SELECT MAX(cost_of_treatment) FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
0	select sum ( cost_of_treatment ) from treatments where date_of_treatment = ( select max ( date_of_treatment ) from treatments )	SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
1	select count ( * ) from dogs where dog_id not in ( select dog_id from treatments )	SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )
1	select count ( * ) from dogs where dog_id not in ( select dog_id from treatments )	select count(*) from dogs where dog_id not in ( select dog_id from treatments )
1	select count ( * ) from owners where owner_id not in ( select owner_id from dogs )	SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
1	select count ( * ) from owners where owner_id not in ( select owner_id from dogs )	SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
1	select count ( * ) from professionals where professional_id not in ( select professional_id from treatments )	SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
1	select count ( * ) from professionals where professional_id not in ( select professional_id from treatments )	SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
1	select name , age , weight from dogs where abandoned_yn = 1 and not abandoned_yn = 0	SELECT name , age , weight FROM Dogs WHERE abandoned_yn = 1
1	select name , age , weight from dogs where abandoned_yn = 1	SELECT name , age , weight FROM Dogs WHERE abandoned_yn = 1
1	select avg ( age ) from dogs	SELECT avg(age) FROM Dogs
1	select avg ( age ) from dogs	SELECT avg(age) FROM Dogs
1	select max ( age ) from dogs	SELECT max(age) FROM Dogs
1	select max ( age ) from dogs	SELECT max(age) FROM Dogs
0	select charge_type , sum ( charge_amount ) from charges group by charge_type	SELECT charge_type , charge_amount FROM Charges
1	select charge_type , charge_amount from charges	SELECT charge_type , charge_amount FROM Charges
1	select max ( charge_amount ) from charges	SELECT max(charge_amount) FROM Charges
0	select charge_amount from charges group by charge_type order by sum ( charge_amount ) desc limit 1	SELECT max(charge_amount) FROM Charges
1	select email_address , cell_number , home_phone from professionals	SELECT email_address , cell_number , home_phone FROM professionals
1	select email_address , cell_number , home_phone from professionals	SELECT email_address , cell_number , home_phone FROM professionals
0	select email_address , cell_number , home_phone from professionals	SELECT DISTINCT breed_code , size_code FROM dogs
0	select distinct breeds.breed_name , sizes.size_description from breeds join dogs on breeds.breed_code = dogs.breed_code join sizes on dogs.size_code = sizes.size_code	SELECT DISTINCT breed_code , size_code FROM dogs
0	select professionals.first_name , treatment_types.treatment_type_description from treatments join professionals on treatments.professional_id = professionals.professional_id join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code	SELECT DISTINCT T1.first_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
1	select professionals.first_name , treatment_types.treatment_type_description from treatments join professionals on treatments.professional_id = professionals.professional_id join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code	SELECT p.first_name, tt.treatment_type_description FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id JOIN treatment_types tt ON t.treatment_type_code = tt.treatment_type_code
1	select count ( * ) from singer	SELECT count(*) FROM singer
1	select count ( * ) from singer	SELECT count(*) FROM singer
0	select count ( * ) from singer	SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC, Name ASC
0	select count ( * ) from singer	SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC, Singer_ID ASC
1	select birth_year , citizenship from singer	SELECT Birth_Year , Citizenship FROM singer
1	select birth_year , citizenship from singer	SELECT Birth_Year , Citizenship FROM singer
1	select name from singer where citizenship != 'France'	SELECT Name FROM singer WHERE Citizenship != 'France'
0	select name from singer where citizenship != 'French'	SELECT Name FROM singer WHERE Citizenship != 'France'
1	select name from singer where birth_year = 1948 or birth_year = 1949	SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949
1	select name from singer where birth_year = 1948 or birth_year = 1949	SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949
1	select s.name from singer s where s.net_worth_millions = ( select max ( net_worth_millions ) from singer )	SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
1	select s.name from singer s where s.net_worth_millions = ( select max ( net_worth_millions ) from singer ) or s.net_worth_millions = ( select max ( net_worth_millions ) from singer )	SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
1	select citizenship , count ( * ) from singer group by citizenship	SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship
1	select citizenship , count ( * ) from singer group by citizenship	SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship
1	select citizenship from singer group by citizenship having count ( singer_id ) = ( select max ( count ) from ( select count ( singer_id ) as count from singer group by citizenship ) )	SELECT Citizenship FROM singer GROUP BY Citizenship HAVING COUNT(*) = (SELECT MAX(cnt) FROM (SELECT COUNT(*) AS cnt FROM singer GROUP BY Citizenship) AS counts)
1	select citizenship , count ( * ) from singer group by citizenship	SELECT citizenship, COUNT(*) AS occurrence FROM singer GROUP BY citizenship
1	select citizenship , max ( net_worth_millions ) from singer group by citizenship	SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
1	select max ( net_worth_millions ) , citizenship from singer group by citizenship	SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
1	select song.title , singer.name from song join singer on song.singer_id = singer.singer_id	SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID
1	select song.title , singer.name from song join singer on song.singer_id = singer.singer_id	SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID
1	select distinct singer.name from singer join song on singer.singer_id = song.singer_id where song.sales > 300000	SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
1	select distinct singer.name from singer join song on singer.singer_id = song.singer_id where song.sales > 300000	SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
1	select singer.name from singer join song on singer.singer_id = song.singer_id group by song.singer_id having count ( * ) > 1	SELECT s.name FROM singer AS s WHERE s.Singer_ID IN (SELECT sg.Singer_ID FROM song AS sg GROUP BY sg.Singer_ID HAVING COUNT(DISTINCT sg.song_id) > 1)
1	select singer.name from singer join song on singer.singer_id = song.singer_id group by song.singer_id having count ( * ) > 1	SELECT name FROM singer WHERE singer_id IN (SELECT singer_id FROM song GROUP BY singer_id HAVING COUNT(*) > 1)
0	select singer.name , sum ( song.sales ) from singer join song on singer.singer_id = song.singer_id group by singer.singer_id	SELECT T1.Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
1	select singer.name , sum ( song.sales ) from singer join song on singer.singer_id = song.singer_id group by singer.singer_id	SELECT singer.name, SUM(song.sales) FROM song JOIN singer ON singer.singer_id = song.singer_id GROUP BY singer.singer_id
1	select name from singer where singer_id not in ( select singer_id from song )	SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
1	select name from singer where singer_id not in ( select singer_id from song )	SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
1	select citizenship from singer where birth_year < 1945 intersect select citizenship from singer where birth_year > 1955	SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955
1	select citizenship from singer where birth_year < 1945 intersect select citizenship from singer where birth_year > 1955	SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955
1	select count ( * ) from other_available_features	SELECT count(*) FROM Other_Available_Features
0	select ref_feature_types.feature_type_name from other_available_features join ref_feature_types on other_available_features.feature_type_code = ref_feature_types.feature_type_code where other_available_features.feature_name = 'AirCon'	SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code IN (SELECT feature_type_code FROM other_available_features WHERE feature_name = 'AirCon')
0	select ref_property_types.property_type_description from ref_property_types join properties on ref_property_types.property_type_code = properties.property_type_code	SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code GROUP BY T1.property_type_code
0	select property_name from properties where room_count > 1 and property_type_code = 'house' or property_type_code = 'apartment'	SELECT property_name FROM Properties WHERE property_type_code = 'House' UNION SELECT property_name FROM Properties WHERE property_type_code = 'Apartment' AND room_count > 1
                     easy                 medium               hard                 extra                all                 
count                0                    0                    0                    0                    1034                
=====================   EXECUTION ACCURACY     =====================
execution            0.000                0.000                0.000                0.000                0.639               
