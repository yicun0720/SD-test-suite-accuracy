1	SELECT count(*) FROM singer	SELECT count(*) FROM singer
1	SELECT count(*) FROM singer	SELECT count(*) FROM singer
1	SELECT Name, Country, Age FROM singer ORDER BY Age DESC	SELECT name ,  country ,  age FROM singer ORDER BY age DESC
1	SELECT Name, Country, Age FROM singer ORDER BY Age DESC	SELECT name ,  country ,  age FROM singer ORDER BY age DESC
1	SELECT avg(Age), min(Age), max(Age) FROM singer WHERE Country = 'France'	SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
1	SELECT avg(Age), min(Age), max(Age) FROM singer WHERE Country = 'France'	SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
0	SELECT Name, Song_release_year FROM singer ORDER BY Age ASC LIMIT 1	SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
0	SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)	SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
1	SELECT DISTINCT S1.Country FROM singer AS S1 WHERE S1.Age > 20	SELECT DISTINCT country FROM singer WHERE age  >  20
1	SELECT DISTINCT Country FROM singer WHERE Age > 20	SELECT DISTINCT country FROM singer WHERE age  >  20
1	SELECT Country, count(*) FROM singer GROUP BY Country	SELECT country ,  count(*) FROM singer GROUP BY country
1	SELECT Country, COUNT(*) FROM singer GROUP BY Country	SELECT country ,  count(*) FROM singer GROUP BY country
1	SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)	SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
1	SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)	SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
1	SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000	SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
1	SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000	SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
0	SELECT max(Capacity) , avg(Capacity) FROM stadium	select max(capacity), average from stadium
1	SELECT avg(Capacity), max(Capacity) FROM stadium	select avg(capacity) ,  max(capacity) from stadium
1	SELECT Name, Capacity FROM stadium WHERE Average = (SELECT max(Average) FROM stadium)	SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
1	SELECT Name, Capacity FROM stadium ORDER BY Average DESC LIMIT 1	SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
1	SELECT count(*) FROM concert WHERE Year IN ('2014', '2015')	SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
1	SELECT count(*) FROM concert WHERE Year IN ('2014', '2015')	SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
0	SELECT Name, COUNT(*) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Name	SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
0	SELECT Stadium_ID, COUNT(*) FROM concert GROUP BY Stadium_ID	SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
1	SELECT t1.Name, t1.Capacity FROM stadium AS t1 JOIN concert AS t2 ON t1.Stadium_ID = t2.Stadium_ID WHERE t2.Year >= '2014' GROUP BY t1.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1	SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1
1	SELECT S.Name, S.Capacity FROM stadium AS S JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID WHERE C.Year > '2013' GROUP BY S.Stadium_ID ORDER BY count(*) DESC LIMIT 1	select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1
1	SELECT Year FROM concert GROUP BY Year ORDER BY count(*) DESC LIMIT 1	SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
1	SELECT Year FROM concert GROUP BY Year ORDER BY count(*) DESC LIMIT 1	SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
1	SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)	SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
1	SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)	SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
1	SELECT Country FROM singer WHERE Age > 40 INTERSECT SELECT Country FROM singer WHERE Age < 30	SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
1	SELECT Name FROM stadium EXCEPT SELECT T1.Name FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = '2014'	SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
0	SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')	SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
1	SELECT C.concert_Name, C.Theme, COUNT(SIC.Singer_ID) AS NumberOfSingers FROM concert AS C JOIN singer_in_concert AS SIC ON C.concert_ID = SIC.concert_ID GROUP BY C.concert_ID	SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id
1	SELECT C.concert_Name, C.Theme, COUNT(SIC.Singer_ID) FROM concert C JOIN singer_in_concert SIC ON C.concert_ID = SIC.concert_ID GROUP BY C.concert_ID, C.concert_Name, C.Theme	select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id
0	SELECT S.Name, COUNT(*) FROM singer S JOIN singer_in_concert SC ON S.Singer_ID = SC.Singer_ID GROUP BY S.Name	SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
0	SELECT Name , count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name	SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
1	SELECT s.Name FROM singer AS s JOIN singer_in_concert AS sic ON s.Singer_ID = sic.Singer_ID JOIN concert AS c ON sic.concert_ID = c.concert_ID WHERE c.Year = "2014"	SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
1	SELECT S.Name FROM singer AS S JOIN singer_in_concert AS SC ON S.Singer_ID = SC.Singer_ID JOIN concert AS C ON SC.concert_ID = C.concert_ID WHERE C.Year = '2014'	SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
1	SELECT Name, Country FROM singer WHERE Song_Name LIKE "%Hey%"	SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
1	SELECT Name, Country FROM singer WHERE Song_Name LIKE "%Hey%"	SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
1	SELECT t1.Name, t1.Location FROM stadium AS t1 JOIN concert AS t2 ON t1.Stadium_ID = t2.Stadium_ID WHERE t2.Year = '2014' INTERSECT SELECT t1.Name, t1.Location FROM stadium AS t1 JOIN concert AS t2 ON t1.Stadium_ID = t2.Stadium_ID WHERE t2.Year = '2015'	SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
1	SELECT t1.Name, t1.Location FROM stadium AS t1 JOIN concert AS t2 ON t1.Stadium_ID = t2.Stadium_ID WHERE t2.Year = '2014' INTERSECT SELECT t1.Name, t1.Location FROM stadium AS t1 JOIN concert AS t2 ON t1.Stadium_ID = t2.Stadium_ID WHERE t2.Year = '2015'	SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
1	SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)	select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
1	SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)	select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
1	SELECT count(*) FROM Pets WHERE weight > 10;	SELECT count(*) FROM pets WHERE weight  >  10
1	SELECT count(*) FROM Pets WHERE weight > 10	SELECT count(*) FROM pets WHERE weight  >  10
0	SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT min(pet_age) FROM Pets WHERE PetType = 'dog')	SELECT weight FROM pets ORDER BY pet_age LIMIT 1
0	SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT min(pet_age) FROM Pets WHERE PetType = 'dog')	SELECT weight FROM pets ORDER BY pet_age LIMIT 1
1	SELECT PetType, max(weight) FROM Pets GROUP BY PetType	SELECT max(weight) ,  petType FROM pets GROUP BY petType
1	SELECT PetType, max(weight) FROM Pets GROUP BY PetType;	SELECT max(weight) ,  petType FROM pets GROUP BY petType
1	SELECT count(*) FROM Student AS t1 JOIN Has_Pet AS t2 ON t1.StuID = t2.StuID JOIN Pets AS t3 ON t2.PetID = t3.PetID WHERE t1.Age > 20	SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
1	SELECT count(*) FROM Has_Pet AS HP JOIN Student AS S ON HP.StuID = S.StuID WHERE S.Age > 20	SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
0	SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.Sex = 'F' AND T3.PetType = 'Dog'	SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
0	SELECT count(*) FROM Student AS S JOIN Has_Pet AS HP ON S.StuID = HP.StuID JOIN Pets AS P ON P.PetID = HP.PetID WHERE S.Sex = 'F' AND P.PetType = 'Dog'	SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
1	SELECT count(DISTINCT PetType) FROM Pets	SELECT count(DISTINCT pettype) FROM pets
1	SELECT count(DISTINCT PetType) FROM Pets	SELECT count(DISTINCT pettype) FROM pets
0	SELECT Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' OR Pets.PetType = 'dog'	SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
0	SELECT Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat' OR PetType = 'dog'	SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
0	SELECT fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = "Cat" INTERSECT SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = "Dog")	select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'
0	SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'Cat' INTERSECT SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'Dog')	SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
1	SELECT Major, Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat')	SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
1	SELECT Major, Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat')	SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
1	SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat')	SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
1	SELECT StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat'	SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
0	SELECT T1.Fname, T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'Dog' AND NOT EXISTS (SELECT * FROM Has_Pet AS T4 JOIN Pets AS T5 ON T4.PetID = T5.PetID WHERE T5.PetType = 'Cat' AND T4.StuID = T1.StuID)	SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
0	SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'dog')) AND StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))	SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
1	SELECT PetType, weight FROM Pets ORDER BY pet_age ASC LIMIT 1	SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
1	SELECT PetType, weight FROM Pets ORDER BY pet_age ASC LIMIT 1	SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
1	SELECT PetID, weight FROM Pets WHERE pet_age > 1	SELECT petid ,  weight FROM pets WHERE pet_age  >  1
1	SELECT PetID, weight FROM Pets WHERE pet_age > 1	SELECT petid ,  weight FROM pets WHERE pet_age  >  1
1	SELECT avg(pet_age), max(pet_age), PetType FROM Pets GROUP BY PetType	SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
1	SELECT avg(pet_age) , max(pet_age) , PetType FROM Pets GROUP BY PetType	SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
1	SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType	SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
1	SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType;	SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
1	SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID	SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
1	SELECT DISTINCT S.Fname, S.Age FROM Student AS S JOIN Has_Pet AS HP ON S.StuID = HP.StuID	SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
1	SELECT PetID FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE LName = 'Smith'	SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
1	SELECT PetID FROM Has_Pet JOIN Student ON Student.StuID = Has_Pet.StuID WHERE LName = 'Smith'	SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
1	SELECT StuID, count(*) FROM Has_Pet GROUP BY StuID	SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid
1	SELECT T1.StuID, COUNT(*) FROM Has_Pet AS T1 GROUP BY T1.StuID	select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid
1	SELECT S.Fname, S.Sex FROM Student AS S JOIN Has_Pet AS H ON S.StuID = H.StuID GROUP BY S.StuID HAVING count(*) > 1	SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
1	SELECT Fname, Sex FROM Student AS S JOIN Has_Pet AS HP ON S.StuID = HP.StuID GROUP BY S.StuID HAVING count(*) > 1	SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
1	SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3	SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
1	SELECT S.LName FROM Student AS S JOIN Has_Pet AS HP ON S.StuID = HP.StuID JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat' AND P.pet_age = 3	SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
1	SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)	select avg(age) from student where stuid not in (select stuid from has_pet)
1	SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)	select avg(age) from student where stuid not in (select stuid from has_pet)
1	SELECT count(*) FROM continents	SELECT count(*) FROM CONTINENTS;
1	SELECT count(*) FROM continents	SELECT count(*) FROM CONTINENTS;
1	SELECT T1.ContId, T1.Continent, COUNT(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId	SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
0	SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId	SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
1	SELECT count(*) FROM countries	SELECT count(*) FROM COUNTRIES;
1	SELECT count(*) FROM countries;	SELECT count(*) FROM COUNTRIES;
1	SELECT car_makers.FullName, car_makers.Id, COUNT(*) AS NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName	SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
1	SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.ModelId) AS NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName	SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
0	SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data ORDER BY CAST(Horsepower AS INTEGER) ASC LIMIT 1)	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
0	SELECT Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id ORDER BY CAST(Horsepower AS INTEGER) ASC LIMIT 1	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
1	SELECT model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Weight < (SELECT AVG(Weight) FROM cars_data))	SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
0	SELECT model FROM model_list WHERE ModelId IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Weight < (SELECT avg(Weight) FROM cars_data)))	SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
0	SELECT DISTINCT t1.Maker FROM car_makers AS t1 JOIN car_names AS t2 ON t1.Id = t2.MakeId JOIN cars_data AS t3 ON t2.MakeId = t3.Id WHERE t3.Year = 1970	SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
0	SELECT DISTINCT T1.Maker FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id = T2.Id WHERE T2.Year = 1970	SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
0	SELECT Make, Year FROM cars_data ORDER BY Year ASC LIMIT 1	SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
0	SELECT T3.FullName, T6.Year FROM car_makers AS T3 JOIN model_list AS T4 ON T3.Id = T4.Maker JOIN car_names AS T5 ON T4.ModelId = T5.Model JOIN cars_data AS T6 ON T5.MakeId = T6.Id ORDER BY T6.Year ASC LIMIT 1	SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
0	SELECT DISTINCT T2.Model FROM cars_data AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.Year > 1980	SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
0	SELECT DISTINCT T1.Model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T2.Year > 1980	SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
1	SELECT T3.Continent, COUNT(*) FROM continents AS T3 JOIN countries AS T2 ON T3.ContId = T2.Continent JOIN car_makers AS T1 ON T2.CountryId = T1.Country GROUP BY T3.Continent	SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
0	SELECT C.Continent, COUNT(DISTINCT M.Id) FROM continents C JOIN countries Co ON C.ContId = Co.Continent JOIN car_makers M ON Co.CountryId = M.Country GROUP BY C.ContId, C.Continent	SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
0	SELECT c.CountryName FROM countries AS c JOIN car_makers AS cm ON c.CountryId = cm.Country GROUP BY c.CountryName ORDER BY COUNT(cm.Id) DESC LIMIT 1	SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
0	SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId ORDER BY count(*) DESC LIMIT 1	SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
0	SELECT Maker.FullName, COUNT(*) FROM car_makers AS Maker JOIN model_list AS Model ON Maker.Id = Model.Maker GROUP BY Maker.FullName	select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;
1	SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.ModelId) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName	SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;
1	SELECT Accelerate FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Make = 'amc hornet sportabout (sw)')	SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
1	SELECT Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = "amc hornet sportabout (sw)"	SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
0	SELECT count(*) FROM car_makers WHERE Country = 'France';	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
0	SELECT COUNT(DISTINCT Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France'	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
0	SELECT count(*) FROM car_makers AS cm JOIN model_list AS ml ON cm.Id = ml.Maker WHERE cm.Country = 'usa'	SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
0	SELECT count(*) FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE Country IN (SELECT CountryId FROM countries WHERE CountryName = 'United States'))	SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
1	SELECT avg(MPG) FROM cars_data WHERE Cylinders = 4	SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
1	SELECT avg(MPG) FROM cars_data WHERE Cylinders = 4	SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
1	SELECT min(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974	select min(weight) from cars_data where cylinders  =  8 and year  =  1974
1	SELECT min(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974	select min(weight) from cars_data where cylinders  =  8 and year  =  1974
1	SELECT Maker, Model FROM model_list	SELECT Maker ,  Model FROM MODEL_LIST;
1	SELECT Maker, Model FROM model_list	SELECT Maker ,  Model FROM MODEL_LIST;
1	SELECT DISTINCT T2.CountryName, T2.CountryId FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId	SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
1	SELECT DISTINCT T1.CountryName, T1.CountryId FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country	SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
1	SELECT count(*) FROM cars_data WHERE Horsepower > '150'	SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
1	SELECT count(*) FROM cars_data WHERE Horsepower > '150'	SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
1	SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year;	SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
1	SELECT avg(Weight) , Year FROM cars_data GROUP BY Year	SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
0	SELECT CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country WHERE Continent IN (SELECT ContId FROM continents WHERE Continent = 'Europe') GROUP BY CountryName HAVING count(*) >= 3	SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
0	SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T1.Continent = 6 GROUP BY T1.CountryId HAVING COUNT(DISTINCT T2.Id) >= 3	SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
0	SELECT max(Horsepower) , Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE Cylinders = 3 GROUP BY Make	SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
0	SELECT MAX(Horsepower), Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE Cylinders = 3	SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
0	SELECT Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY CAST(cars_data.MPG AS REAL) DESC LIMIT 1	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;
1	SELECT Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY MPG DESC LIMIT 1	select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;
1	SELECT avg(Horsepower) FROM cars_data WHERE Year < 1980	SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;
1	SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980	select avg(horsepower) from cars_data where year  <  1980;
1	SELECT AVG(Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'volvo'	SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
0	SELECT avg(Edispl) FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Make = 'volvo'	SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
1	SELECT Cylinders, max(Accelerate) FROM cars_data GROUP BY Cylinders;	SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
1	SELECT Cylinders, max(Accelerate) FROM cars_data GROUP BY Cylinders;	SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
1	SELECT Model FROM car_names GROUP BY Model ORDER BY COUNT(*) DESC LIMIT 1	SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
0	SELECT model FROM model_list GROUP BY model ORDER BY count(*) DESC LIMIT 1	SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
1	SELECT count(*) FROM cars_data WHERE Cylinders > 4	SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
1	SELECT count(*) FROM cars_data WHERE Cylinders > 4	SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
1	SELECT count(*) FROM cars_data WHERE Year = 1980	SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
1	SELECT count(*) FROM cars_data WHERE Year = 1980;	SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
1	SELECT count(*) FROM car_makers AS CM JOIN model_list AS ML ON CM.Id = ML.Maker WHERE CM.FullName = "American Motor Company"	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
1	SELECT count(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company';	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
1	SELECT car_makers.Id, car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3	SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
1	SELECT T1.Maker, T2.FullName FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T1.Maker HAVING count(T1.Model) > 3;	SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
0	SELECT DISTINCT T3.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker JOIN car_names AS T3 ON T2.ModelId = T3.MakeId JOIN cars_data AS T4 ON T3.MakeId = T4.Id WHERE T1.FullName = 'General Motors' OR T4.Weight > 3500	SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
0	SELECT Model FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE Maker = 'General Motors') UNION SELECT T2.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model = T2.Model WHERE T1.MakeId IN (SELECT Id FROM cars_data WHERE Weight > 3500)	SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
0	SELECT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000	select distinct year from cars_data where weight between 3000 and 4000;
0	SELECT T1.Year FROM cars_data AS T1 WHERE T1.Weight < 4000 INTERSECT SELECT T1.Year FROM cars_data AS T1 WHERE T1.Weight > 3000	select distinct year from cars_data where weight between 3000 and 4000;
1	SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1	SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
1	SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1	SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
1	SELECT Cylinders FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model = 'volvo') ORDER BY Accelerate LIMIT 1	SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
0	SELECT Cylinders FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE car_names.Make = 'Volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1	SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
0	SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data ORDER BY CAST(Horsepower AS INTEGER) DESC LIMIT 1)	SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
1	SELECT count(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data ORDER BY Horsepower DESC LIMIT 1)	SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
0	SELECT count(*) FROM (SELECT Country FROM car_makers GROUP BY Country HAVING count(*) > 2)	select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
0	SELECT count(*) FROM (SELECT Country FROM car_makers GROUP BY Country HAVING count(*) > 2)	select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
1	SELECT count(*) FROM cars_data WHERE Cylinders > 6	SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
1	SELECT count(*) FROM cars_data WHERE Cylinders > 6	SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
0	SELECT Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN cars_data ON car_makers.Id = cars_data.Id WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
0	SELECT model FROM cars_data AS cd JOIN car_names AS cn ON cd.Id = cn.MakeId WHERE Cylinders = 4 ORDER BY CAST(Horsepower AS INTEGER) DESC LIMIT 1	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
1	SELECT MakeId, Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE Horsepower > (SELECT min(Horsepower) FROM cars_data) AND Cylinders <= 3	SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;
1	SELECT MakeId, Make FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Cylinders < 4 AND Horsepower > (SELECT MIN(Horsepower) FROM cars_data))	select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;
1	SELECT max(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980	select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
1	SELECT max(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980	select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
0	SELECT model_list.Model FROM model_list JOIN car_makers ON car_makers.Id = model_list.Maker JOIN car_names ON car_names.Model = model_list.ModelId JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE car_makers.FullName != 'Ford Motor Company' AND cars_data.Weight < 3500	SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
0	SELECT T1.Model FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id JOIN cars_data AS T3 ON T1.ModelId = T3.Id WHERE T3.Weight < 3500 AND T2.Maker != 'Ford Motor Company'	SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
0	SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers)	SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
0	SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers)	SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
0	SELECT T1.Id, T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.Maker HAVING COUNT(DISTINCT T2.Model) >= 2 AND COUNT(DISTINCT T1.Id) > 3	select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;
0	SELECT T1.Id, T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker JOIN car_names AS T3 ON T2.Model = T3.Model GROUP BY T1.Id HAVING COUNT(DISTINCT T2.ModelId) >= 2 AND COUNT(DISTINCT T3.MakeId) > 3	SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;
1	SELECT CountryId, CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(Id) > 3 ) OR CountryId IN ( SELECT Country FROM car_makers WHERE Id IN ( SELECT Maker FROM model_list WHERE Model = 'fiat' ) )	SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';
0	SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(car_makers.Id) > 3 UNION SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker WHERE model_list.Model = 'Fiat'	select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';
1	SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways';	SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
0	SELECT country FROM airlines WHERE Airline = "Jetblue Airways";	SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
1	SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways'	SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
0	SELECT Abbreviation FROM airlines WHERE Airline = "Jetblue Airways";	SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
1	SELECT Airline, Abbreviation FROM airlines WHERE Country = "USA"	SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
1	SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA'	SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
1	SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'	SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
1	SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'	SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
1	SELECT count(*) FROM airlines	SELECT count(*) FROM AIRLINES
1	SELECT count(*) FROM airlines	SELECT count(*) FROM AIRLINES
1	SELECT count(*) FROM airports	SELECT count(*) FROM AIRPORTS
1	SELECT count(*) FROM airports	SELECT count(*) FROM AIRPORTS
1	SELECT count(*) FROM flights	SELECT count(*) FROM FLIGHTS
1	SELECT count(*) FROM flights	SELECT count(*) FROM FLIGHTS
1	SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'	SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
1	SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'	SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
1	SELECT count(*) FROM airlines WHERE Country = 'USA';	SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
1	SELECT count(*) FROM airlines WHERE Country = 'USA'	SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
1	SELECT City, Country FROM airports WHERE AirportName = 'Alton'	SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
0	SELECT City, Country FROM airports WHERE AirportName = 'Alton Airport'	SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
1	SELECT AirportName FROM airports WHERE AirportCode = 'AKO'	SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
1	SELECT AirportName FROM airports WHERE AirportCode = 'AKO'	SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
1	SELECT AirportName FROM airports WHERE City = "Aberdeen"	SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
1	SELECT AirportName FROM airports WHERE City = "Aberdeen"	SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
1	SELECT count(*) FROM flights WHERE SourceAirport = 'APG'	SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
1	SELECT count(*) FROM flights WHERE SourceAirport = 'APG'	SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
1	SELECT count(*) FROM flights WHERE DestAirport = 'ATO'	SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
1	SELECT count(*) FROM flights WHERE DestAirport = "ATO"	SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
1	SELECT count(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
0	SELECT count(*) FROM flights WHERE SourceAirport = 'ABZ'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
1	SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
0	SELECT count(*) FROM flights WHERE DestAirport = 'ABZ'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
1	SELECT count(*) FROM flights JOIN airports AS src ON flights.SourceAirport = src.AirportCode JOIN airports AS dest ON flights.DestAirport = dest.AirportCode WHERE src.City = 'Aberdeen' AND dest.City = 'Ashley';	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
1	SELECT count(*) FROM flights AS f JOIN airports AS a1 ON f.SourceAirport = a1.AirportCode JOIN airports AS a2 ON f.DestAirport = a2.AirportCode WHERE a1.City = 'Aberdeen' AND a2.City = 'Ashley'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
1	SELECT count(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = "JetBlue Airways"	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
0	SELECT count(*) FROM flights AS f JOIN airlines AS a ON f.Airline = a.uid WHERE a.Airline = "Jetblue Airways"	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
1	SELECT count(*) FROM flights AS t1 JOIN airlines AS t2 ON t1.Airline = t2.uid WHERE t2.Airline = 'United Airlines' AND t1.DestAirport = 'ASY'	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
1	SELECT count(*) FROM flights AS F JOIN airlines AS A ON F.Airline = A.uid WHERE A.Airline = 'United Airlines' AND F.DestAirport = 'ASY'	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
1	SELECT count(*) FROM flights AS t1 JOIN airlines AS t2 ON t1.Airline = t2.uid WHERE t2.Airline = 'United Airlines' AND t1.SourceAirport = 'AHD'	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
1	SELECT count(*) FROM flights AS F JOIN airlines AS A ON F.Airline = A.uid WHERE A.Airline = 'United Airlines' AND F.SourceAirport = 'AHD'	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
1	SELECT count(*) FROM flights AS F JOIN airlines AS A ON F.Airline = A.uid JOIN airports AS AP ON F.DestAirport = AP.AirportCode WHERE A.Airline = 'United Airlines' AND AP.City = 'Aberdeen'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
0	SELECT count(*) FROM flights AS f JOIN airlines AS a ON f.Airline = a.uid WHERE a.Airline = 'United Airlines' AND f.DestAirport = 'ABR'	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
1	SELECT City FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City ORDER BY count(*) DESC LIMIT 1	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
1	SELECT City FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City ORDER BY count(*) DESC LIMIT 1	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
1	SELECT City FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY City ORDER BY count(*) DESC LIMIT 1	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
1	SELECT City FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY City ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
0	SELECT SourceAirport AS AirportCode FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
0	SELECT SourceAirport AS AirportCode FROM flights GROUP BY SourceAirport ORDER BY count(*) DESC LIMIT 1	SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
0	SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) ASC LIMIT 1	SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
0	SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY count(*) ASC LIMIT 1	SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
0	SELECT Airline FROM flights GROUP BY Airline ORDER BY count(*) DESC LIMIT 1	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
0	SELECT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY airlines.Airline ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
0	SELECT A.Abbreviation, A.Country FROM airlines A JOIN flights F ON A.uid = F.Airline GROUP BY A.uid ORDER BY COUNT(*) ASC LIMIT 1	SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
0	SELECT Abbreviation, Country FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY airlines.uid ORDER BY COUNT(*) ASC LIMIT 1	SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
0	SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights WHERE SourceAirport = 'AHD')	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
0	SELECT DISTINCT t1.Airline FROM `airlines` AS t1 JOIN `flights` AS t2 ON t1.uid = t2.Airline WHERE t2.SourceAirport = "AHD"	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
0	SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = 'AHD'	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
1	SELECT A.Airline FROM flights AS F JOIN airlines AS A ON F.Airline = A.uid WHERE F.DestAirport = "AHD"	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
0	SELECT DISTINCT Airline FROM flights AS F1 WHERE EXISTS (SELECT 1 FROM flights AS F2 WHERE F1.Airline = F2.Airline AND F2.SourceAirport = 'APG') AND EXISTS (SELECT 1 FROM flights WHERE F1.Airline = flights.Airline AND flights.SourceAirport = 'CVO')	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
0	SELECT T1.Airline FROM flights AS T1 WHERE T1.SourceAirport = "APG" INTERSECT SELECT T1.Airline FROM flights AS T1 WHERE T1.SourceAirport = "CVO"	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
0	SELECT T1.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.SourceAirport = 'CVO' EXCEPT SELECT T1.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.SourceAirport = 'APG'	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
1	SELECT DISTINCT A.Airline FROM airlines AS A JOIN flights AS F ON A.uid = F.Airline WHERE F.SourceAirport = 'CVO' EXCEPT SELECT DISTINCT A.Airline FROM airlines AS A JOIN flights AS F ON A.uid = F.Airline WHERE F.SourceAirport = 'APG'	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
0	SELECT Airline FROM flights GROUP BY Airline HAVING count(*) >= 10	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
0	SELECT Airline, COUNT(*) FROM flights GROUP BY Airline HAVING COUNT(*) >= 10	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
0	SELECT Airline FROM flights GROUP BY Airline HAVING count(*) < 200	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
0	SELECT Airline FROM flights GROUP BY Airline HAVING count(*) < 200	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
1	SELECT FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = "United Airlines"	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
1	SELECT FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = "United Airlines";	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
1	SELECT FlightNo FROM flights WHERE SourceAirport = "APG"	SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
1	SELECT FlightNo FROM flights WHERE SourceAirport = "APG"	SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
1	SELECT FlightNo FROM flights WHERE DestAirport = "APG"	SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
1	SELECT FlightNo FROM flights WHERE DestAirport = "APG"	SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
1	SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = "Aberdeen"	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
0	SELECT FlightNo FROM flights WHERE SourceAirport = "Aberdeen"	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
1	SELECT FlightNo FROM flights AS F JOIN airports AS A ON F.DestAirport = A.AirportCode WHERE A.City = "Aberdeen"	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
0	SELECT FlightNo FROM flights WHERE DestAirport = "Aberdeen"	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
1	SELECT count(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen' OR City = 'Abilene')	SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
0	SELECT COUNT(*) FROM flights WHERE DestAirport = 'Aberdeen' OR DestAirport = 'Abilene'	SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
1	SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights)	SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
1	SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights)	SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
1	SELECT count(*) FROM employee	SELECT count(*) FROM employee
1	SELECT count(*) FROM employee	SELECT count(*) FROM employee
1	SELECT Name FROM employee ORDER BY Age ASC	SELECT name FROM employee ORDER BY age
1	SELECT Name FROM employee ORDER BY Age ASC	SELECT name FROM employee ORDER BY age
1	SELECT City , COUNT(*) FROM employee GROUP BY City	SELECT count(*) ,  city FROM employee GROUP BY city
1	SELECT City, count(*) FROM employee GROUP BY City	SELECT count(*) ,  city FROM employee GROUP BY city
1	SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING count(*) > 1	SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
1	SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1	SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
1	SELECT count(*) , Location FROM shop GROUP BY Location	SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
1	SELECT count(*) , Location FROM shop GROUP BY Location	SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
1	SELECT Manager_name, District FROM shop ORDER BY Number_products DESC LIMIT 1	SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
1	SELECT Manager_name, District FROM shop ORDER BY Number_products DESC LIMIT 1	SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
1	SELECT min(Number_products), max(Number_products) FROM shop	SELECT min(Number_products) ,  max(Number_products) FROM shop
1	SELECT min(Number_products), max(Number_products) FROM shop	SELECT min(Number_products) ,  max(Number_products) FROM shop
1	SELECT Name, Location, District FROM shop ORDER BY Number_products DESC	SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
1	SELECT Name, Location, District FROM shop ORDER BY Number_products DESC	SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
1	SELECT Name FROM shop WHERE Number_products > (SELECT avg(Number_products) FROM shop)	SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
1	SELECT Name FROM shop WHERE Number_products > (SELECT avg(Number_products) FROM shop)	SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
0	SELECT Employee.name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID GROUP BY employee.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1	SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
0	SELECT Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID GROUP BY employee.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1	SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
1	SELECT Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1	SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
1	SELECT Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY Bonus DESC LIMIT 1	SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
1	SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)	SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
1	SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)	SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
1	SELECT T2.Name FROM shop AS T2 JOIN hiring AS T1 ON T2.Shop_ID = T1.Shop_ID GROUP BY T2.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1;	SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
1	SELECT Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1	SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
1	SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)	SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
1	SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)	SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
1	SELECT COUNT(*), s.Name FROM hiring h JOIN shop s ON h.Shop_ID = s.Shop_ID GROUP BY s.Name	SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
0	SELECT Shop.Name, COUNT(hiring.Employee_ID) AS num_employees FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Shop_ID;	SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
1	SELECT sum(Bonus) FROM evaluation	SELECT sum(bonus) FROM evaluation
1	SELECT sum(Bonus) FROM evaluation	SELECT sum(bonus) FROM evaluation
1	SELECT * FROM hiring	SELECT * FROM hiring
1	SELECT * FROM hiring	SELECT * FROM hiring
0	SELECT DISTRICT FROM shop WHERE Number_products < 3000 OR Number_products > 10000 GROUP BY DISTRICT HAVING COUNT(DISTINCT Number_products) > 1	SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
1	SELECT DISTRICT FROM shop WHERE Number_products < 3000 INTERSECT SELECT DISTRICT FROM shop WHERE Number_products > 10000	SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
1	SELECT count(DISTINCT "Location") FROM shop	SELECT count(DISTINCT LOCATION) FROM shop
1	SELECT count(DISTINCT Location) FROM shop	SELECT count(DISTINCT LOCATION) FROM shop
1	SELECT count(*) FROM Documents	SELECT count(*) FROM Documents
1	SELECT count(*) FROM Documents	SELECT count(*) FROM Documents
1	SELECT Document_ID, Document_Name, Document_Description FROM Documents	SELECT document_id ,  document_name ,  document_description FROM Documents
1	SELECT Document_ID, Document_Name, Document_Description FROM Documents	SELECT document_id ,  document_name ,  document_description FROM Documents
1	SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'	SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
1	SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE "%w%"	SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
1	SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'	SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
1	SELECT document_id, template_id, document_description FROM Documents WHERE document_name = "Robbin CV"	SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
1	SELECT count(DISTINCT Template_ID) FROM Documents	SELECT count(DISTINCT template_id) FROM Documents
1	SELECT count(DISTINCT Template_ID) FROM Documents	SELECT count(DISTINCT template_id) FROM Documents
1	SELECT count(*) FROM Documents AS D JOIN Templates AS T ON D.Template_ID = T.Template_ID JOIN Ref_Template_Types AS RTT ON T.Template_Type_Code = RTT.Template_Type_Code WHERE RTT.Template_Type_Code = 'PPT';	SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
0	SELECT count(*) FROM Documents AS D JOIN Templates AS T ON D.Template_ID = T.Template_ID JOIN Ref_Template_Types AS RTT ON T.Template_Type_Code = RTT.Template_Type_Code WHERE RTT.Template_Type_Description = "PPT"	SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
1	SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID	SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
1	SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID	SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
0	SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T1.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
1	SELECT T1.Template_ID, T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
1	SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(*) > 1	SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
1	SELECT T1.Template_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(*) > 1	SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
1	SELECT Template_ID FROM Templates EXCEPT SELECT Template_ID FROM Documents	SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
1	SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)	SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
1	SELECT count(*) FROM Templates	SELECT count(*) FROM Templates
1	SELECT count(*) FROM Templates	SELECT count(*) FROM Templates
1	SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates	SELECT template_id ,  version_number ,  template_type_code FROM Templates
1	SELECT Template_ID , Version_Number , Template_Type_Code FROM Templates	SELECT template_id ,  version_number ,  template_type_code FROM Templates
1	SELECT distinct(Template_Type_Code) FROM Templates	SELECT DISTINCT template_type_code FROM Templates
0	SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types	SELECT DISTINCT template_type_code FROM Templates
1	SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PP' OR Template_type_code = 'PPT'	SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
1	SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')	SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
1	SELECT count(*) FROM Templates WHERE Template_Type_Code = 'CV';	SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
1	SELECT count(*) FROM Templates AS t1 JOIN Ref_Template_Types AS t2 ON t1.Template_Type_Code = t2.Template_Type_Code WHERE t2.Template_Type_Code = "CV"	SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
1	SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5	SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
1	SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5	SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
1	SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code	SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
1	SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code	SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
1	SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1	SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
1	SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1	SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
1	SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*) < 3	SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
1	SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING count(*) < 3	SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
0	SELECT Template_Type_Code , min(Version_Number) FROM Templates GROUP BY Template_Type_Code ORDER BY min(Version_Number) ASC LIMIT 1;	SELECT min(Version_Number) ,  template_type_code FROM Templates
1	SELECT Version_Number, Template_Type_Code FROM Templates ORDER BY Version_Number ASC LIMIT 1	SELECT min(Version_Number) ,  template_type_code FROM Templates
1	SELECT T1.Template_Type_Code FROM Documents AS T2 JOIN Templates AS T1 ON T2.Template_ID = T1.Template_ID WHERE T2.Document_Name = 'Data base'	SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
1	SELECT T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_Name = 'Data base'	SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
1	SELECT Document_Name FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'	SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
1	SELECT document_name FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = "BK"	SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
0	SELECT Ref_Template_Types.Template_Type_Code, COUNT(Documents.Document_ID) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Ref_Template_Types.Template_Type_Code	SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
1	SELECT Template_Type_Code, COUNT(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID GROUP BY Template_Type_Code	SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
1	SELECT Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1	SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
1	SELECT Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
0	SELECT Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID	SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
0	SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT Template_Type_Code FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Documents))	SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
1	SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types	SELECT template_type_code ,  template_type_description FROM Ref_template_types
1	SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types	SELECT template_type_code ,  template_type_description FROM Ref_template_types
1	SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'	SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
1	SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'	SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
1	SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'	SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
1	SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'	SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
1	SELECT DISTINCT Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID	SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
0	SELECT DISTINCT Template_Details FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Documents)	SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
1	SELECT Template_ID FROM Templates AS T JOIN Ref_Template_Types AS R ON T.Template_Type_Code = R.Template_Type_Code WHERE R.Template_Type_Description = "Presentation"	SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
1	SELECT Template_ID FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'	SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
1	SELECT count(*) FROM Paragraphs;	SELECT count(*) FROM Paragraphs
1	SELECT count(*) FROM Paragraphs	SELECT count(*) FROM Paragraphs
1	SELECT COUNT(*) FROM Paragraphs AS P JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Summer Show'	SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
1	SELECT count(*) FROM Documents AS t1 JOIN Paragraphs AS t2 ON t1.Document_ID = t2.Document_ID WHERE t1.Document_Name = 'Summer Show'	SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
0	SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text = "Korea ";	select other_details from paragraphs where paragraph_text like 'korea'
0	SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea %'	select other_details from paragraphs where paragraph_text like 'korea'
1	SELECT Paragraph_ID, Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Welcome to NY'	SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
1	SELECT t1.Paragraph_ID, t1.Paragraph_Text FROM Paragraphs AS t1 JOIN Documents AS t2 ON t1.Document_ID = t2.Document_ID WHERE t2.Document_Name = "Welcome to NY"	SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
1	SELECT Paragraph_Text FROM Paragraphs AS P JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Customer reviews'	SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
1	SELECT Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Customer reviews'	SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
1	SELECT Document_ID, COUNT(*) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_id	SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
1	SELECT Document_ID, COUNT(*) AS Paragraph_Count FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID	SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
0	SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) FROM Documents LEFT JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID, Documents.Document_Name	SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
0	SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) FROM Documents LEFT JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID	SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
1	SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
1	SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*) >= 2	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
0	SELECT Document_ID, Document_Name FROM Documents AS D JOIN Paragraphs AS P ON D.Document_ID = P.Document_id GROUP BY D.Document_ID, D.Document_Name ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
1	SELECT Documents.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
1	SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1;	SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
1	SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1	SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
1	SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*) BETWEEN 1 AND 2	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
1	SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*) BETWEEN 1 AND 2;	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
0	SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text IN ('Brazil', 'Ireland')	SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
1	SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Brazil' INTERSECT SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Ireland'	SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
1	SELECT count(*) FROM teacher	SELECT count(*) FROM teacher
1	SELECT count(*) FROM teacher	SELECT count(*) FROM teacher
1	SELECT Name FROM teacher ORDER BY Age ASC	SELECT Name FROM teacher ORDER BY Age ASC
1	SELECT Name FROM teacher ORDER BY Age ASC;	SELECT Name FROM teacher ORDER BY Age ASC
1	SELECT Age, Hometown FROM teacher	SELECT Age ,  Hometown FROM teacher
1	SELECT Age, Hometown FROM teacher	SELECT Age ,  Hometown FROM teacher
0	SELECT Name FROM teacher WHERE Hometown != "Little Lever Urban District"	select name from teacher where hometown != "little lever urban district"
0	SELECT Name FROM teacher WHERE Hometown != "Little Lever Urban District"	select name from teacher where hometown != "little lever urban district"
1	SELECT Name FROM teacher WHERE Age = 32 OR Age = 33	SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
1	SELECT Name FROM teacher WHERE Age = '32' OR Age = '33'	SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
1	SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1	SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
0	SELECT Hometown FROM teacher WHERE Age = (SELECT min(Age) FROM teacher)	SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
1	SELECT Hometown , COUNT(*) FROM teacher GROUP BY Hometown	SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
1	SELECT Hometown , COUNT(*) FROM teacher GROUP BY Hometown	SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
1	SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1	SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
0	SELECT Hometown, COUNT(*) FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1;	SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
1	SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) > 1	SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
0	SELECT Hometown, COUNT(*) FROM teacher GROUP BY Hometown HAVING COUNT(*) > 1	SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
1	SELECT T2.Name, T3.Course FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID = T3.Course_ID	SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
0	SELECT T2.Name, T1.Course FROM course AS T1 JOIN course_arrarge AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID	SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
1	SELECT T2.Name, T1.Course FROM course AS T1 JOIN course_arrange AS T3 ON T1.Course_ID = T3.Course_ID JOIN teacher AS T2 ON T3.Teacher_ID = T2.Teacher_ID ORDER BY T2.Name ASC	SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
1	SELECT T2.Name, T3.Course FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID = T3.Course_ID ORDER BY T2.Name	SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
1	SELECT T.Name FROM teacher AS T JOIN course_arrange AS CA ON T.Teacher_ID = CA.Teacher_ID JOIN course AS C ON CA.Course_id = C.Course_ID WHERE C.Course = 'Math'	SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
1	SELECT T.Name FROM teacher AS T JOIN course_arrange AS CA ON T.Teacher_ID = CA.Teacher_ID JOIN course AS C ON CA.Course_ID = C.Course_ID WHERE C.Course = "Math"	SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
0	SELECT T.Name, COUNT(*) AS NumberOfCourses FROM teacher T JOIN course_arrange C ON T.Teacher_ID = C.Teacher_ID GROUP BY T.Teacher_ID	SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
1	SELECT T2.Name, COUNT(*) FROM teacher AS T2 JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID GROUP BY T2.Name	SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
0	SELECT T.Name FROM teacher AS T JOIN course_arrange AS CA ON T.Teacher_ID = CA.Teacher_ID GROUP BY T.Teacher_ID HAVING COUNT(*) >= 2	SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
0	SELECT T.Name FROM teacher AS T JOIN course_arrange AS C ON T.Teacher_ID = C.Teacher_ID GROUP BY T.Teacher_ID HAVING COUNT(*) >= 2	SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
1	SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange)	SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
1	SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange)	SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
1	SELECT count(*) FROM visitor WHERE Age < 30;	SELECT count(*) FROM visitor WHERE age  <  30
1	SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC	SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
1	SELECT avg(Age) FROM visitor WHERE Level_of_membership <= 4	SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4
1	SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC	SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
1	SELECT Museum_ID, Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1	SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1
1	SELECT avg(Num_of_Staff) FROM museum WHERE Open_Year < '2009'	SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009
1	SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = "Plaza Museum"	SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'
1	SELECT Name FROM museum WHERE Num_of_Staff > (SELECT min(Num_of_Staff) FROM museum WHERE Open_Year > '2010')	SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
0	SELECT v.ID, v.Name, v.Age FROM visitor AS v JOIN visit AS vt ON v.ID = vt.visitor_ID GROUP BY vt.visitor_ID, vt.Museum_ID HAVING COUNT(*) > 1	SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1
0	SELECT T1.ID, T1.Name, T1.Level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T1.ID ORDER BY SUM(T2.Total_spent) DESC LIMIT 1	SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1
1	SELECT T1.Museum_ID, T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID GROUP BY T1.Museum_ID ORDER BY count(*) DESC LIMIT 1	SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1
1	SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit)	SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)
1	SELECT T1.Name, T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID ORDER BY T2.Num_of_Ticket DESC LIMIT 1	SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
1	SELECT avg(Num_of_Ticket) , max(Num_of_Ticket) FROM visit	SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit
1	SELECT sum(T1.Total_spent) FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1	SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1
0	SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T3.Open_Year < '2009' AND T1.ID IN (SELECT T4.visitor_ID FROM visit AS T4 JOIN museum AS T5 ON T4.Museum_ID = T5.Museum_ID WHERE T5.Open_Year > '2011')	SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011
1	SELECT count(*) FROM visitor WHERE ID NOT IN ( SELECT visitor_ID FROM visit JOIN museum ON visit.Museum_ID = museum.Museum_ID WHERE Open_Year > '2010' )	SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)
1	SELECT count(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008'	SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008
1	SELECT count(*) FROM players	SELECT count(*) FROM players
1	SELECT count(*) FROM players	SELECT count(*) FROM players
1	SELECT count(*) FROM matches	SELECT count(*) FROM matches
1	SELECT count(*) FROM matches	SELECT count(*) FROM matches
1	SELECT first_name, birth_date FROM players WHERE country_code = 'USA'	SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
1	SELECT first_name, birth_date FROM players WHERE country_code = 'USA'	SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
1	SELECT avg(loser_age), avg(winner_age) FROM matches	SELECT avg(loser_age) ,  avg(winner_age) FROM matches
1	SELECT avg(loser_age), avg(winner_age) FROM matches	SELECT avg(loser_age) ,  avg(winner_age) FROM matches
1	SELECT avg(winner_rank) FROM matches	SELECT avg(winner_rank) FROM matches
1	SELECT avg(winner_rank) FROM matches	SELECT avg(winner_rank) FROM matches
0	SELECT max(loser_rank) FROM matches	SELECT min(loser_rank) FROM matches
1	SELECT MIN(loser_rank) FROM matches	SELECT min(loser_rank) FROM matches
1	SELECT count(DISTINCT country_code) FROM players	SELECT count(DISTINCT country_code) FROM players
1	SELECT COUNT(DISTINCT country_code) FROM players	SELECT count(DISTINCT country_code) FROM players
1	SELECT count(DISTINCT loser_name) FROM matches	SELECT count(DISTINCT loser_name) FROM matches
1	SELECT count(DISTinct loser_name) FROM matches	SELECT count(DISTINCT loser_name) FROM matches
1	SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;	SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
1	SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10	SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
1	SELECT winner_name FROM matches WHERE year = 2013 INTERSECT SELECT winner_name FROM matches WHERE year = 2016	SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
0	SELECT T1.first_name, T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.year = 2013 INTERSECT SELECT T1.first_name, T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.year = 2016	SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
1	SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016)	SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
1	SELECT count(*) FROM matches WHERE year IN (2013, 2016);	SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
1	SELECT T2.country_code, T2.first_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' INTERSECT SELECT T2.country_code, T2.first_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open'	SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
1	SELECT T1.first_name, T1.country_code FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships' INTERSECT SELECT T1.first_name, T1.country_code FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'Australian Open'	SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
1	SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1	SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
1	SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1	SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
1	SELECT first_name, last_name FROM players ORDER BY birth_date ASC	SELECT first_name ,  last_name FROM players ORDER BY birth_date
0	SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date	SELECT first_name ,  last_name FROM players ORDER BY birth_date
1	SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date	SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
0	SELECT first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date	SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
0	SELECT T1.first_name, T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1	SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
0	SELECT T1.first_name, T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY sum(T2.tours) DESC LIMIT 1	SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
1	SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1	SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
1	SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1	SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
0	SELECT T1.winner_name, MAX(T3.ranking_points) FROM matches AS T1 JOIN rankings AS T3 ON T1.winner_id = T3.player_id GROUP BY T1.winner_id ORDER BY COUNT(*) DESC LIMIT 1	SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
0	SELECT players.first_name, players.last_name, MAX(rankings.ranking_points) AS rank_points FROM matches JOIN players ON matches.winner_id = players.player_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(matches.winner_id) DESC LIMIT 1	SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
0	SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' AND winner_rank_points = (SELECT max(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open')	SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
1	SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1	SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
1	SELECT m.loser_name, m.winner_name FROM matches m ORDER BY m.minutes DESC LIMIT 1	SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
1	SELECT winner_name, loser_name FROM matches ORDER BY minutes DESC LIMIT 1	SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
0	SELECT players.first_name, avg(rankings.ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id, players.first_name	SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
0	SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id	SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
0	SELECT sum(T1.ranking_points), T2.first_name FROM rankings AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id	SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
1	SELECT sum(ranking_points), first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY first_name	SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
1	SELECT country_code, count(*) FROM players GROUP BY country_code	SELECT count(*) ,  country_code FROM players GROUP BY country_code
1	SELECT country_code, COUNT(*) FROM players GROUP BY country_code	SELECT count(*) ,  country_code FROM players GROUP BY country_code
1	SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1	SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
1	SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1	SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
1	SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50	SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
1	SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50	SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
1	SELECT ranking_date, sum(tours) FROM rankings GROUP BY ranking_date	SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
1	SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date	SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
1	SELECT year, COUNT(*) FROM matches GROUP BY year	SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
1	SELECT year, COUNT(*) FROM matches GROUP BY year	SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
0	SELECT winner_name, winner_rank FROM matches ORDER BY winner_age ASC LIMIT 3	SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
0	SELECT p.first_name, p.last_name, m.winner_rank FROM matches m JOIN players p ON m.winner_id = p.player_id ORDER BY p.birth_date DESC LIMIT 3	SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
0	SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = "WTA Championships" AND winner_hand = "L"	SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
0	SELECT count(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'	SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
1	SELECT P.first_name, P.country_code, P.birth_date FROM players AS P JOIN matches AS M ON P.player_id = M.winner_id ORDER BY M.winner_rank_points DESC LIMIT 1	SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
0	SELECT P.first_name, P.country_code, P.birth_date FROM players AS P JOIN matches AS M ON P.player_id = M.winner_id GROUP BY P.player_id ORDER BY sum(M.winner_rank_points) DESC LIMIT 1	SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
1	SELECT hand, count(*) FROM players GROUP BY hand	SELECT count(*) ,  hand FROM players GROUP BY hand
1	SELECT hand , COUNT(*) FROM players GROUP BY hand	SELECT count(*) ,  hand FROM players GROUP BY hand
1	SELECT count(*) FROM ship WHERE disposition_of_ship = 'Captured'	SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
1	SELECT Name, tonnage FROM ship ORDER BY Name DESC	SELECT name ,  tonnage FROM ship ORDER BY name DESC
0	SELECT name , date , result FROM battle	SELECT name ,  date FROM battle
0	SELECT max(killed) , min(killed) FROM death GROUP BY caused_by_ship_id	SELECT max(killed) ,  min(killed) FROM death
1	SELECT avg(injured) FROM death	SELECT avg(injured) FROM death
1	SELECT killed, injured FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = 't'	SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
1	SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'	SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'
1	SELECT DISTINCT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'	SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'
1	SELECT B.id, B.name FROM battle AS B JOIN ship AS S ON B.id = S.lost_in_battle JOIN death AS D ON S.id = D.caused_by_ship_id GROUP BY B.id, B.name HAVING SUM(D.killed) > 10	SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10
0	SELECT ship.id, ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id ORDER BY SUM(death.injured) DESC LIMIT 1	SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
0	SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'	SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'
1	SELECT count(DISTINCT result) FROM battle	SELECT count(DISTINCT RESULT) FROM battle
1	SELECT count(*) FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE tonnage = '225')	SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );
0	SELECT T1.name, T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name IN ('Lettice', 'HMS Atalanta')	SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'
0	SELECT name, result, bulgarian_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')	SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
1	SELECT note FROM death WHERE note LIKE "%East%"	SELECT note FROM death WHERE note LIKE '%East%'
1	SELECT line_1, line_2 FROM Addresses	SELECT line_1 ,  line_2 FROM addresses
1	SELECT line_1, line_2 FROM Addresses;	SELECT line_1 ,  line_2 FROM addresses
1	SELECT count(*) FROM Courses	SELECT count(*) FROM Courses
1	SELECT count(*) FROM Courses	SELECT count(*) FROM Courses
0	SELECT course_description FROM Courses WHERE course_name = "Math"	SELECT course_description FROM Courses WHERE course_name  =  'math'
0	SELECT course_description FROM Courses WHERE course_name LIKE "%math%"	SELECT course_description FROM Courses WHERE course_name  =  'math'
1	SELECT zip_postcode FROM Addresses WHERE city = "Port Chelsea";	SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
1	SELECT `zip_postcode` FROM `Addresses` WHERE `city` = 'Port Chelsea'	SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
1	SELECT D1.department_name, D1.department_id FROM Departments AS D1 JOIN Degree_Programs AS DP ON D1.department_id = DP.department_id GROUP BY D1.department_id ORDER BY COUNT(*) DESC LIMIT 1;	SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
1	SELECT T1.department_name, T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1	select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1
1	SELECT count(DISTINCT department_id) FROM Degree_Programs	SELECT count(DISTINCT department_id) FROM Degree_Programs
1	SELECT count(DISTINCT department_id) FROM Degree_Programs	SELECT count(DISTINCT department_id) FROM Degree_Programs
1	SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs	SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
1	SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs	SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
0	SELECT count(*) FROM Degree_Programs AS dp JOIN Departments AS d ON dp.department_id = d.department_id WHERE d.department_name = "Engineering"	SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
0	SELECT count(*) FROM Degree_Programs AS dp JOIN Departments AS d ON dp.department_id = d.department_id WHERE d.department_name = "Engineering"	SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
1	SELECT section_name, section_description FROM Sections;	SELECT section_name ,  section_description FROM Sections
1	SELECT section_name, section_description FROM Sections	SELECT section_name ,  section_description FROM Sections
1	SELECT T1.course_id, T1.course_name FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING count(T2.section_id) <= 2;	SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
0	SELECT C.course_id, C.course_name FROM Courses AS C LEFT JOIN Sections AS S ON C.course_id = S.course_id GROUP BY C.course_id HAVING COUNT(S.section_id) < 2	SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
1	SELECT section_name FROM Sections ORDER BY section_name DESC	SELECT section_name FROM Sections ORDER BY section_name DESC
1	SELECT section_name FROM Sections ORDER BY section_name DESC	SELECT section_name FROM Sections ORDER BY section_name DESC
1	SELECT T1.semester_name, T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
0	SELECT S1.semester_name, S1.semester_id FROM Semesters S1 JOIN Student_Enrolment S2 ON S1.semester_id = S2.semester_id GROUP BY S1.semester_id ORDER BY COUNT(DISTINCT S2.student_id) DESC LIMIT 1	SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
1	SELECT department_description FROM Departments WHERE department_name LIKE "%computer%"	SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
1	SELECT department_description FROM Departments WHERE department_name LIKE "%computer%"	SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
0	SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(DISTINCT T2.degree_program_id) = 2	SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
0	SELECT S.first_name, S.middle_name, S.last_name, S.student_id FROM Students AS S JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id GROUP BY S.student_id, SE.semester_id HAVING COUNT(DISTINCT SE.degree_program_id) = 2	SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
0	SELECT S.first_name, S.middle_name, S.last_name FROM Students AS S JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name LIKE '%Bachelor%'	SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
0	SELECT S.first_name, S.middle_name, S.last_dic_name FROM Students AS S JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name LIKE '%Bachelors%'	SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
1	SELECT T3.degree_summary_name FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T3 ON T1.degree_program_id = T3.degree_program_id GROUP BY T3.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
1	SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
1	SELECT T1.degree_program_id, T2.degree_summary_name FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
1	SELECT T1.degree_program_id, T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
0	SELECT S.student_id, S.first_name, S.middle_name, S.last_name, COUNT(*) AS number_of_enrollments FROM Students S JOIN Student_Enrolment SE ON S.student_id = SE.student_id GROUP BY S.student_id ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
0	SELECT S.first_name, S.middle_name, S.last_name, S.student_id, COUNT(SE.student_id) AS number_of_enrollments FROM Students AS S JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id GROUP BY S.student_id ORDER BY COUNT(SE.student_id) DESC LIMIT 1	SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
1	SELECT `semester_name` FROM `Semesters` WHERE `semester_id` NOT IN (SELECT `semester_id` FROM `Student_Enrolment`)	SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
1	SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_id IS NULL	SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
1	SELECT DISTINCT c.course_name FROM Courses AS c JOIN Student_Enrolment_Courses AS sec ON c.course_id = sec.course_id	SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
1	SELECT DISTINCT T2.course_name FROM Courses AS T2 JOIN Student_Enrolment_Courses AS T1 ON T2.course_id = T1.course_id	SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
1	SELECT C.course_name FROM Courses C JOIN Student_Enrolment_Courses SEC ON C.course_id = SEC.course_id GROUP BY C.course_name ORDER BY COUNT(*) DESC LIMIT 1	SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
1	SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1	SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
0	SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id LEFT JOIN Student_Enrolment AS T3 ON T1.student_id = T3.student_id WHERE T2.state_province_county = 'North Carolina' AND T3.student_id IS NULL	SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
0	SELECT s.last_name FROM Students s JOIN Addresses a ON s.permanent_address_id = a.address_id LEFT JOIN Student_Enrolment se ON s.student_id = se.student_id WHERE a.state_province_county = "North Carolina" AND se.student_id IS NULL	SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
1	SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count(*) >= 2	SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
1	SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(*) >= 2	SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
1	SELECT cell_mobile_number FROM Students WHERE first_name = "Timmothy" AND last_name = "Ward"	SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'
0	SELECT cell_mobile_number FROM Students WHERE first_name = "Timmothy" AND last_name = "Ward"	select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'
1	SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered LIMIT 1	SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
1	SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered LIMIT 1	SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
1	SELECT first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1	SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
1	SELECT `first_name`, `middle_name`, `last_name` FROM `Students` ORDER BY `date_left` ASC LIMIT 1	SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
1	SELECT first_name FROM Students WHERE current_address_id != permanent_address_id	SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
1	SELECT T1.first_name FROM Students AS T1 WHERE T1.current_address_id != T1.permanent_address_id	SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
0	SELECT `current_address_id`, `line_1`, `line_2`, `line_3` FROM `Students` JOIN `Addresses` ON `Students`.`current_address_id` = `Addresses`.`address_id` GROUP BY `current_address_id` ORDER BY COUNT(`student_id`) DESC LIMIT 1;	SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
1	SELECT `address_id`, `line_1`, `line_2` FROM `Addresses` AS T1 JOIN `Students` AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1	SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
1	SELECT avg(transcript_date) FROM Transcripts	SELECT avg(transcript_date) FROM Transcripts
1	SELECT avg(transcript_date) FROM Transcripts	SELECT avg(transcript_date) FROM Transcripts
1	SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1	SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
1	SELECT `transcript_date`, `other_details` FROM `Transcripts` ORDER BY `transcript_date` ASC LIMIT 1	SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
1	SELECT count(*) FROM Transcripts;	SELECT count(*) FROM Transcripts
1	SELECT count(*) FROM Transcripts	SELECT count(*) FROM Transcripts
1	SELECT max(transcript_date) FROM Transcripts	SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
1	SELECT max(transcript_date) FROM Transcripts	SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
1	SELECT student_course_id, COUNT(*) FROM Transcript_Contents GROUP BY student_course_id ORDER BY COUNT(*) DESC LIMIT 1	SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
0	SELECT MAX(COUNT(*)), T1.course_id FROM Transcript_Contents AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id GROUP BY T2.course_id ORDER BY COUNT(*) DESC LIMIT 1	SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
1	SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(*) ASC LIMIT 1	SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
0	SELECT transcript_id, transcript_date FROM Transcript_Contents JOIN Transcripts ON Transcript_Contents.transcript_id = Transcripts.transcript_id GROUP BY Transcript_Contents.transcript_id ORDER BY count(*) ASC LIMIT 1	SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
0	SELECT semester_name FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE degree_summary_name = 'Master') INTERSECT SELECT semester_name FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE degree_summary_name = 'Bachelor')	SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
0	SELECT T1.semester_id FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.semester_id HAVING COUNT(DISTINCT T2.degree_summary_name) > 1	SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
1	SELECT count(DISTINCT current_address_id) FROM Students	SELECT count(DISTINCT current_address_id) FROM Students
0	SELECT DISTINCT a.line_1, a.line_2, a.line_3, a.city, a.zip_postcode, a.state_province_county, a.country FROM Addresses AS a JOIN Students AS s ON a.address_id = s.current_address_id OR a.address_id = s.permanent_address_id	SELECT count(DISTINCT current_address_id) FROM Students
0	SELECT * FROM Students ORDER BY student_id DESC	SELECT other_student_details FROM Students ORDER BY other_student_details DESC
1	SELECT other_student_details FROM Students ORDER BY other_student_details DESC	SELECT other_student_details FROM Students ORDER BY other_student_details DESC
1	SELECT section_description FROM Sections WHERE section_name = "h"	SELECT section_description FROM Sections WHERE section_name  =  'h'
1	SELECT section_description FROM Sections WHERE section_name = "h";	SELECT section_description FROM Sections WHERE section_name  =  'h'
0	SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.country = 'Haiti' OR T1.cell_mobile_number = '09700166582'	select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
0	SELECT first_name FROM Students AS S JOIN Addresses AS A ON S.permanent_address_id = A.address_id WHERE A.country = "Haiti" OR S.cell_mobile_number = "09700166582"	select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
1	SELECT Title FROM Cartoon ORDER BY Title ASC	SELECT Title FROM Cartoon ORDER BY title
1	SELECT Title FROM Cartoon ORDER BY Title	SELECT Title FROM Cartoon ORDER BY title
1	SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'	SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
1	SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones"	SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
1	SELECT count(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';	SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
1	SELECT count(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'	SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
1	SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date	SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
1	SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date	SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
1	SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'	SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
1	SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'	SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
1	SELECT Country, COUNT(*) AS NumberOfTVChannels FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1;	SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
1	SELECT Country , COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1	SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
1	SELECT count(DISTINCT series_name), count(DISTINCT Content) FROM TV_Channel	SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
1	SELECT count(DISTINCT series_name), count(DISTINCT Content) FROM TV_Channel	SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
1	SELECT content FROM TV_Channel WHERE series_name = 'Sky Radio'	SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
1	SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";	SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
1	SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'	SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
1	SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio"	SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
1	SELECT count(*) FROM TV_Channel WHERE Language = 'English'	SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
1	SELECT count(*) FROM TV_Channel WHERE Language = "English"	SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
1	SELECT Language, count(*) FROM TV_Channel GROUP BY Language ORDER BY count(*) ASC LIMIT 1;	SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
1	SELECT Language , COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1	SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
1	SELECT Language , COUNT(*) FROM TV_Channel GROUP BY Language	SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
1	SELECT Language , COUNT(*) FROM TV_Channel GROUP BY Language	SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
1	SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = 'The Rise of the Blue Beetle!'	SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
0	SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = 'The Rise of the. Blue Beetle'	SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
1	SELECT C.Title FROM Cartoon AS C JOIN TV_Channel AS T ON C.Channel = T.id WHERE T.series_name = 'Sky Radio'	SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
1	SELECT C1.Title FROM Cartoon AS C1 JOIN TV_Channel as C2 ON C1.Channel = C2.id WHERE C2.series_name = 'Sky Radio'	SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
1	SELECT Episode FROM TV_series ORDER BY Rating	SELECT Episode FROM TV_series ORDER BY rating
1	SELECT Episode FROM TV_series ORDER BY Rating	SELECT Episode FROM TV_series ORDER BY rating
1	SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3	SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
1	SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3	SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
1	SELECT min(Share), max(Share) FROM TV_series	SELECT max(SHARE) , min(SHARE) FROM TV_series;
1	SELECT max(Share), min(Share) FROM TV_series	SELECT max(SHARE) , min(SHARE) FROM TV_series;
1	SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime"	SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
1	SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'	SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
1	SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'	SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
1	SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'	SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
1	SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'A Love of a Lifetime'	SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
1	SELECT series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'A Love of a Lifetime'	SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
1	SELECT T1.Episode FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'	SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
1	SELECT Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio'	SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
1	SELECT Directed_by , COUNT(*) FROM Cartoon GROUP BY Directed_by	SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
1	SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by	SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
1	SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1	select production_code ,  channel from cartoon order by original_air_date desc limit 1
1	SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1	select production_code ,  channel from cartoon order by original_air_date desc limit 1
0	SELECT T1.Package_Option, T1.series_name FROM TV_Channel AS T1 WHERE T1.Hight_definition_TV = "Yes"	SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
0	SELECT T1.Package_Option, T1.series_name FROM TV_Channel AS T1 WHERE T1.Hight_definition_TV = 'Yes'	SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
0	SELECT DISTINCT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey'	SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
0	SELECT DISTINCT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = "Todd Casey";	SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
0	SELECT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')	SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
0	SELECT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')	SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
0	SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by IN ("Ben Jones", "Michael Chang")	SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
1	SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = "Ben Jones" INTERSECT SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = "Michael Chang"	SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
1	SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != "English"	SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
1	SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> "English"	SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
0	SELECT `Country`, COUNT(`id`) FROM `TV_Channel` GROUP BY `Country` HAVING COUNT(`id`) > 2	SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
0	SELECT id FROM TV_Channel GROUP BY id HAVING count(id) > 2;	SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
1	SELECT id FROM TV_Channel EXCEPT SELECT T1.id FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = 'Ben Jones'	SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
1	SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')	SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
1	SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')	SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
1	SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')	SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
1	SELECT count(*) FROM poker_player	SELECT count(*) FROM poker_player
1	SELECT count(*) FROM poker_player	SELECT count(*) FROM poker_player
1	SELECT Earnings FROM poker_player ORDER BY Earnings DESC	SELECT Earnings FROM poker_player ORDER BY Earnings DESC
1	SELECT Earnings FROM poker_player ORDER BY Earnings DESC	SELECT Earnings FROM poker_player ORDER BY Earnings DESC
1	SELECT Final_Table_Made, Best_Finish FROM poker_player	SELECT Final_Table_Made ,  Best_Finish FROM poker_player
1	SELECT Final_Table_Made, Best_Finish FROM poker_player	SELECT Final_Table_Made ,  Best_Finish FROM poker_player
1	SELECT avg(Earnings) FROM poker_player	SELECT avg(Earnings) FROM poker_player
1	SELECT avg(Earnings) FROM poker_player	SELECT avg(Earnings) FROM poker_player
1	SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1	SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
1	SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1	SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
1	SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000	SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
1	SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000	SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
1	SELECT Name FROM poker_player AS pp JOIN people AS p ON pp.People_ID = p.People_ID	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
1	SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
1	SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Earnings > 300000	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
1	SELECT T1.Name FROM poker_player AS T2 JOIN people AS T1 ON T2.People_ID = T1.People_ID WHERE T2.Earnings > 300000	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
1	SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Final_Table_Made ASC	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
1	SELECT P2.Name FROM poker_player AS P1 JOIN people AS P2 ON P1.People_ID = P2.People_ID ORDER BY P1.Final_Table_Made ASC	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
1	SELECT P.birth_Date FROM people P JOIN poker_player PP ON P.People_ID = PP.People_ID ORDER BY PP.Earnings LIMIT 1	SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
1	SELECT Birth_Date FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Earnings ASC LIMIT 1	SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
1	SELECT T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Height DESC LIMIT 1	SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
1	SELECT T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Height DESC LIMIT 1	SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
1	SELECT avg(T1.Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200	SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
1	SELECT avg(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200	SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
1	SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
1	SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Earnings DESC	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
1	SELECT Nationality, count(*) FROM people GROUP BY Nationality	SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
1	SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality	SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
1	SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1	SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
1	SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1	SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
1	SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2	SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
1	SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2	SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
1	SELECT Name, Birth_Date FROM people ORDER BY Name ASC	SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
1	SELECT Name, Birth_Date FROM people ORDER BY Name	SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
1	SELECT Name FROM people WHERE Nationality != 'Russia'	SELECT Name FROM people WHERE Nationality != "Russia"
1	SELECT Name FROM people WHERE Nationality != "Russia"	SELECT Name FROM people WHERE Nationality != "Russia"
1	SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)	SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
1	SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)	SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
1	SELECT count(DISTINCT Nationality) FROM people	SELECT count(DISTINCT Nationality) FROM people
1	SELECT COUNT(DISTINCT Nationality) FROM people	SELECT count(DISTINCT Nationality) FROM people
0	SELECT count(DISTINCT state) FROM AREA_CODE_STATE	SELECT count(*) FROM area_code_state
1	SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC	SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC
1	SELECT vote_id, phone_number, state FROM VOTES	SELECT vote_id ,  phone_number ,  state FROM votes
1	SELECT max(area_code), min(area_code) FROM AREA_CODE_STATE	SELECT max(area_code) ,  min(area_code) FROM area_code_state
1	SELECT max(`created`) FROM `VOTES` WHERE `state` = 'CA'	SELECT max(created) FROM votes WHERE state  =  'CA'
1	SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'	SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
1	SELECT DISTINCT state, created FROM VOTES	SELECT DISTINCT state ,  created FROM votes
1	SELECT T1.contestant_number, T2.contestant_name FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number HAVING COUNT(*) >= 2	SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2
1	SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1	SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1
1	SELECT count(*) FROM VOTES WHERE state = 'NY' OR state = 'CA'	SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'
1	SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)	SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )
0	SELECT phone_number / 1000000 AS area_code, COUNT(*) FROM VOTES GROUP BY area_code ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1
1	SELECT V.created, V.state, V.phone_number FROM VOTES AS V JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Tabatha Gehling'	SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'
1	SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES ON AREA_CODE_STATE.state = VOTES.state JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = "Tabatha Gehling" INTERSECT SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES ON AREA_CODE_STATE.state = VOTES.state JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = "Kelly Clauss"	SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
1	SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE "%Al%"	select contestant_name from contestants where contestant_name like "%al%"
1	SELECT Name FROM country WHERE IndepYear > 1950	SELECT Name FROM country WHERE IndepYear  >  1950
1	SELECT Name FROM country WHERE IndepYear > 1950	SELECT Name FROM country WHERE IndepYear  >  1950
0	SELECT count(*) FROM country WHERE GovernmentForm LIKE "%Republic%"	SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
0	SELECT count(*) FROM country WHERE GovernmentForm LIKE "%Republic%"	SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
1	SELECT sum(SurfaceArea) FROM country WHERE Region = "Caribbean"	SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
1	SELECT sum(SurfaceArea) FROM country WHERE Region = 'Caribbean';	SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
1	SELECT Continent FROM country WHERE Name = "Anguilla";	SELECT Continent FROM country WHERE Name  =  "Anguilla"
1	SELECT `Continent` FROM `country` WHERE `Name` = "Anguilla";	SELECT Continent FROM country WHERE Name  =  "Anguilla"
1	SELECT `Region` FROM `country` WHERE `Code` = (SELECT `CountryCode` FROM `city` WHERE `Name` = "Kabul")	SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
1	SELECT `Region` FROM `city` JOIN `country` ON city.CountryCode = country.Code WHERE city.Name = "Kabul";	SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
1	SELECT T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Name = 'Aruba' ORDER BY T1.Percentage DESC LIMIT 1;	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
0	SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') AND IsOfficial = 'T'	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
1	SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'	SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
1	SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'	SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
1	SELECT Region, Population FROM country WHERE Name = "Angola"	SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
1	SELECT Region, Population FROM country WHERE Name = "Angola"	SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
1	SELECT avg(T1.LifeExpectancy) FROM country AS T1 WHERE T1.Region = "Central Africa"	SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
1	SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'	SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
1	SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1	SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
1	SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1	SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
1	SELECT sum(Population), max(GNP) FROM country WHERE Continent = 'Asia'	SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
1	SELECT sum(Population) , max(GNP) FROM country WHERE Continent = 'Asia'	SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
0	SELECT avg(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'	SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
0	SELECT avg(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'	SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
1	SELECT sum(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'	SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
1	SELECT sum(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'	SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
1	SELECT sum(Population) FROM city WHERE District = 'Gelderland';	SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
1	SELECT sum(Population) FROM city WHERE District = "Gelderland"	SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
0	SELECT avg(GNP), sum(Population) FROM country WHERE GovernmentForm = "US territory"	SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
1	SELECT avg(GNP) , sum(Population) FROM country WHERE GovernmentForm = 'US Territory'	SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
1	SELECT COUNT(DISTINCT Language) FROM countrylanguage	SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
1	SELECT count(DISTINCT Language) FROM countrylanguage	SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
1	SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'	SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
1	SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'	SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
0	SELECT count(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')	SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
0	SELECT count(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')	SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
0	SELECT count(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'	SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
0	SELECT count(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'	SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
0	SELECT C.Name FROM country AS C JOIN countrylanguage AS CL ON C.Code = CL.CountryCode GROUP BY CL.CountryCode ORDER BY COUNT(*) DESC LIMIT 1;	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
1	SELECT C.Name FROM country AS C JOIN countrylanguage AS CL ON C.Code = CL.CountryCode GROUP BY C.Name ORDER BY COUNT(CL.Language) DESC LIMIT 1	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
0	SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY count(DISTINCT Language) DESC LIMIT 1	SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
0	SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY count(DISTINCT countrylanguage.Language) DESC LIMIT 1	SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
0	SELECT count(DISTINCT cl1.CountryCode) FROM countrylanguage AS cl1 JOIN countrylanguage AS cl2 ON cl1.CountryCode = cl2.CountryCode WHERE cl1.Language = 'English' AND cl2.Language = 'Dutch'	SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
0	SELECT COUNT(*) FROM (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' INTERSECT SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch')	SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
0	SELECT name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
1	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'French'	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
1	SELECT `country`.`Name` FROM `countrylanguage` AS English JOIN `country` ON English.`CountryCode` = `country`.`Code` WHERE English.`Language` = 'English' AND English.`IsOfficial` = 'T' INTERSECT SELECT `country`.`Name` FROM `countrylanguage` AS French JOIN `country` ON French.`CountryCode` = `country`.`Code` WHERE French.`Language` = 'French' AND French.`IsOfficial` = 'T'	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
0	SELECT DISTINCT t1.Name FROM country AS t1 JOIN countrylanguage AS t2 ON t1.Code = t2.CountryCode WHERE t2.Language IN ('English', 'French') AND t2.IsOfficial = 'T'	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
1	SELECT count(DISTINCT `Continent`) FROM `country` AS T1 JOIN `countrylanguage` AS T2 ON T1.`Code` = T2.`CountryCode` WHERE T2.`Language` = 'Chinese'	SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
1	SELECT COUNT(DISTINCT Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese'	SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
1	SELECT DISTINCT country.Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch'	SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
0	SELECT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language = "Dutch" OR Language = "English"	SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
0	SELECT name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English', 'Dutch') AND IsOfficial = 'T')	select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t"
0	SELECT Name FROM country AS c JOIN countrylanguage AS cl ON c.Code = cl.CountryCode WHERE (cl.Language = "English" OR cl.Language = "Dutch") AND cl.IsOfficial = "T"	SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"
0	SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language ORDER BY SUM(country.Population * countrylanguage.Percentage / 100) DESC LIMIT 1	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
1	SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language ORDER BY COUNT(*) DESC LIMIT 1	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
0	SELECT Language FROM countrylanguage CL JOIN country C ON CL.CountryCode = C.Code GROUP BY Language HAVING COUNT(DISTINCT CountryCode) = 1 AND MAX(C.GovernmentForm) LIKE '%Republic%'	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
0	SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code GROUP BY countrylanguage.Language HAVING COUNT(countrylanguage.CountryCode) = 1 AND MAX(country.GovernmentForm) = 'Republic'	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
0	SELECT Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;	SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
0	SELECT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1;	SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
1	SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1	SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
1	SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1	SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
0	SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')	SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
0	SELECT avg(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')	SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
0	SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')	SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
0	SELECT sum(population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')	SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
0	SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix') AND IsOfficial = 'T'	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
0	SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix') AND IsOfficial = 'T'	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
1	SELECT count(DISTINCT T1.Language) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear < 1930 AND T1.IsOfficial = 'T'	SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
1	SELECT count(DISTINCT Language) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930)	SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
0	SELECT Name FROM country WHERE SurfaceArea > (SELECT max(SurfaceArea) FROM country WHERE Continent = 'Europe')	SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
0	SELECT Name FROM country WHERE SurfaceArea > (SELECT max(SurfaceArea) FROM country WHERE Continent = "Europe")	SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
0	SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')	SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")
1	SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT min(Population) FROM country WHERE Continent = 'Asia')	SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")
1	SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT max(Population) FROM country WHERE Continent = 'Africa')	SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")
0	SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT max(Population) FROM country WHERE Continent = 'Africa')	SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")
0	SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != "English"	SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
0	SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')	SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
1	SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'	SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
0	SELECT CountryCode FROM countrylanguage WHERE Language != 'English'	SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
0	SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm NOT LIKE '%Republic%'	SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
0	SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm NOT LIKE '%Republic%'	SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
0	SELECT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = "Europe" AND T3.Language = "English" AND T3.IsOfficial != "T"	SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
0	SELECT Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Continent = 'Europe' AND Language != 'English' AND IsOfficial = 'T'	SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
0	SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'	select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  "asia"
1	SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'	SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"
1	SELECT Name, IndepYear, SurfaceArea FROM country ORDER BY Population LIMIT 1	SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
1	SELECT Name, IndepYear, SurfaceArea FROM country ORDER BY Population LIMIT 1	SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
1	SELECT Population, Name, HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1	SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
1	SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT max(SurfaceArea) FROM country)	SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
0	SELECT T1.Name, COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Code HAVING COUNT(*) >= 3	SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
1	SELECT country.Name, COUNT(*) AS Languages_Count FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode GROUP BY country.Name HAVING COUNT(*) > 2	SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
1	SELECT COUNT(*) AS NumberOfCities, District FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District	SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
1	SELECT count(*), District FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District	SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
1	SELECT GovernmentForm, SUM(Population) FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72	SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
1	SELECT GovernmentForm, sum(Population) FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy) > 72	SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
1	SELECT Continent, avg(LifeExpectancy) AS AverageLifeExpectancy, sum(Population) AS TotalPopulation FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72	SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
1	SELECT Continent, SUM(Population), AVG(LifeExpectancy) FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72	SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
1	SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5	SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
1	SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5	SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
1	SELECT Name FROM country ORDER BY Population DESC LIMIT 3	SELECT Name FROM country ORDER BY Population DESC LIMIT 3
1	SELECT Name FROM country ORDER BY Population DESC LIMIT 3	SELECT Name FROM country ORDER BY Population DESC LIMIT 3
1	SELECT Name FROM country ORDER BY Population ASC LIMIT 3	SELECT Name FROM country ORDER BY Population ASC LIMIT 3
1	SELECT Name FROM country ORDER BY Population ASC LIMIT 3	SELECT Name FROM country ORDER BY Population ASC LIMIT 3
1	SELECT count(*) FROM country WHERE Continent = 'Asia';	SELECT count(*) FROM country WHERE continent  =  "Asia"
1	SELECT count(*) FROM country WHERE Continent = 'Asia'	SELECT count(*) FROM country WHERE continent  =  "Asia"
1	SELECT Name FROM country WHERE Continent = "Europe" AND Population = 80000	SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
0	SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 800000	SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
0	SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000	select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
0	SELECT sum(Population), avg(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000	select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
1	SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000	SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000
1	SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000	select name from city where population between 160000 and 900000
1	SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(CountryCode) DESC LIMIT 1;	SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
1	SELECT Language FROM countrylanguage GROUP BY Language ORDER BY count(*) DESC LIMIT 1	SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
1	SELECT CountryCode, Language, MAX(Percentage) FROM countrylanguage GROUP BY CountryCode;	SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
1	SELECT CountryCode, Language, MAX(Percentage) FROM countrylanguage GROUP BY CountryCode	SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
0	SELECT count(*) FROM countrylanguage WHERE Language = "Spanish" ORDER BY Percentage DESC LIMIT 1	SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
0	SELECT count(*) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T'	SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
0	SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC;	SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
0	SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T'	SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
1	SELECT count(*) FROM conductor	SELECT count(*) FROM conductor
1	SELECT count(*) FROM conductor	SELECT count(*) FROM conductor
1	SELECT Name FROM conductor ORDER BY Age ASC	SELECT Name FROM conductor ORDER BY Age ASC
1	SELECT Name FROM conductor ORDER BY Age	SELECT Name FROM conductor ORDER BY Age ASC
1	SELECT Name FROM conductor WHERE Nationality != 'USA'	SELECT Name FROM conductor WHERE Nationality != 'USA'
1	SELECT Name FROM conductor WHERE Nationality != 'USA'	SELECT Name FROM conductor WHERE Nationality != 'USA'
1	SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC	SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
1	SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC	SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
1	SELECT avg(Attendance) FROM show	SELECT avg(Attendance) FROM SHOW
1	SELECT avg(Attendance) FROM show	SELECT avg(Attendance) FROM SHOW
1	SELECT max(Share), min(Share) FROM performance WHERE Type != 'Live final'	SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
1	SELECT max(Share) , min(Share) FROM performance WHERE Type != 'Live final'	SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
1	SELECT count(DISTINCT Nationality) FROM conductor	SELECT count(DISTINCT Nationality) FROM conductor
1	SELECT count(DISTINCT Nationality) FROM conductor	SELECT count(DISTINCT Nationality) FROM conductor
1	SELECT Name FROM conductor ORDER BY Year_of_Work DESC	SELECT Name FROM conductor ORDER BY Year_of_Work DESC
1	SELECT Name FROM conductor ORDER BY Year_of_Work DESC	SELECT Name FROM conductor ORDER BY Year_of_Work DESC
1	SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1	SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
1	SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1	SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
1	SELECT C.Name, O.Orchestra FROM conductor AS C JOIN orchestra AS O ON C.Conductor_ID = O.Conductor_ID	SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
1	SELECT C.Name, O.Orchestra FROM conductor AS C JOIN orchestra AS O ON C.Conductor_ID = O.Conductor_ID	SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
1	SELECT C.Name FROM conductor AS C JOIN orchestra AS O ON C.Conductor_ID = O.Conductor_ID GROUP BY C.Conductor_ID HAVING COUNT(DISTINCT O.Orchestra_ID) > 1	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
0	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
1	SELECT T2.Name FROM conductor AS T2 JOIN orchestra AS T1 ON T2.Conductor_ID = T1.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
1	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
0	SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded > 2008)	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
0	SELECT DISTINCT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
1	SELECT Record_Company, COUNT(*) FROM orchestra GROUP BY Record_Company	SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
1	SELECT Record_Company, COUNT(*) FROM orchestra GROUP BY Record_Company	SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
1	SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC	SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
0	SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_format ORDER BY COUNT(*) DESC	SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
1	SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1	SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
1	SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1	SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
1	SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)	SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
1	SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)	SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
1	SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003	SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
1	SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003	SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
1	SELECT count(*) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'	SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
0	SELECT count(*) FROM orchestra WHERE Major_Record_Format = "CD" OR Major_Record_flag = "DVD"	SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
1	SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 1)	SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
1	SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T1.Orchestra_ID HAVING COUNT(T2.Performance_ID) > 1	SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
1	SELECT count(*) FROM Highschooler	SELECT count(*) FROM Highschooler
1	SELECT count(*) FROM Highschooler	SELECT count(*) FROM Highschooler
1	SELECT name , grade FROM Highschooler	SELECT name ,  grade FROM Highschooler
1	SELECT name, grade FROM Highschooler;	SELECT name ,  grade FROM Highschooler
1	SELECT grade FROM Highschooler	SELECT grade FROM Highschooler
1	SELECT Grade FROM Highschooler	SELECT grade FROM Highschooler
1	SELECT grade FROM Highschooler WHERE name = "Kyle";	SELECT grade FROM Highschooler WHERE name  =  "Kyle"
1	SELECT grade FROM Highschooler WHERE name = "Kyle"	SELECT grade FROM Highschooler WHERE name  =  "Kyle"
1	SELECT name FROM Highschooler WHERE grade = 10	SELECT name FROM Highschooler WHERE grade  =  10
1	SELECT name FROM Highschooler WHERE grade = 10;	SELECT name FROM Highschooler WHERE grade  =  10
1	SELECT ID FROM Highschooler WHERE name = 'Kyle'	SELECT ID FROM Highschooler WHERE name  =  "Kyle"
1	SELECT ID FROM Highschooler WHERE name = 'Kyle';	SELECT ID FROM Highschooler WHERE name  =  "Kyle"
1	SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)	SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
1	SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10	SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
1	SELECT grade, count(*) FROM Highschooler GROUP BY grade	SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
1	SELECT count(*) , grade FROM Highschooler GROUP BY grade	SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
1	SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1	SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
1	SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1	SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
1	SELECT grade FROM Highschooler GROUP BY grade HAVING count(ID) >= 4	SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
1	SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4	SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
1	SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id	SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
1	SELECT student_id, COUNT(*) FROM Friend GROUP BY student_id	SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
0	SELECT H.name , COUNT(F.friend_id) FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id GROUP BY H.ID, H.name	SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
1	SELECT H.name, COUNT(F.friend_id) FROM Highschooler AS H JOIN Friend AS F ON H.ID = F.student_id GROUP BY H.ID, H.name	SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
1	SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(*) DESC LIMIT 1	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
0	SELECT H.name FROM Highschooler H JOIN Friend F ON H.ID = F.student_id GROUP BY H.name ORDER BY COUNT(*) DESC LIMIT 1	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
1	SELECT H.name FROM Highschooler AS H JOIN Friend AS F ON H.ID = F.student_id GROUP BY H.ID HAVING count(F.friend_id) >= 3	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
1	SELECT H.Name FROM Highschooler AS H JOIN Friend AS F ON H.ID = F.student_id GROUP BY H.ID HAVING COUNT(*) >= 3	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
1	SELECT H.name FROM Highschooler AS H JOIN Friend AS F ON H.ID = F.friend_id JOIN Highschooler AS K ON K.ID = F.student_id WHERE K.name = "Kyle"	SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
1	SELECT H.name FROM Highschooler AS K JOIN Friend AS F ON K.ID = F.student_id JOIN Highschooler AS H ON F.friend_id = H.ID WHERE K.name = 'Kyle'	SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
0	SELECT COUNT(*) FROM Friend WHERE student_id IN (SELECT ID FROM Highschooler WHERE name = 'Kyle') OR friend_id IN (SELECT ID FROM Highschooler WHERE name = 'Kyle');	SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
1	SELECT count(*) FROM Friend AS F JOIN Highschooler AS H ON F.student_id = H.ID WHERE H.name = 'Kyle'	SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
0	SELECT ID FROM Highschooler EXCEPT SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend	SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
1	SELECT ID FROM Highschooler EXCEPT SELECT student_id FROM Friend	SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
0	SELECT name FROM Highschooler EXCEPT SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)	SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
0	SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)	SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
1	SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes	SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
0	SELECT DISTINCT T1.student_id FROM Friend AS T1 JOIN Likes AS T2 ON T1.student_id = T2.student_id	SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
0	SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Likes AS T3 ON T1.ID = T3.liked_id	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
0	SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Likes AS T3 ON T1.ID = T3.liked_id	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
1	SELECT student_id, count(*) FROM Likes GROUP BY student_id	SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
1	SELECT student_id , count(*) FROM Likes GROUP BY student_id	SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
1	SELECT H.name, COUNT(*) FROM Highschooler AS H JOIN Likes AS L ON H.ID = L.student_id GROUP BY H.ID, H.name	SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
0	SELECT H.name, count(*) FROM Highschooler AS H JOIN Likes AS L ON H.ID = L.student_id GROUP BY H.name	SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
1	SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(*) DESC LIMIT 1	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
1	SELECT H1.name FROM Highschooler AS H1 JOIN Likes ON H1.ID = Likes.student_id GROUP BY Likes.student_id ORDER BY COUNT(*) DESC LIMIT 1	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
1	SELECT H.name FROM Highschooler AS H JOIN Likes AS L ON H.ID = L.student_id GROUP BY L.student_id HAVING count(*) >= 2	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
1	SELECT H.name FROM Highschooler AS H JOIN Likes AS L ON H.ID = L.student_id GROUP BY H.ID HAVING COUNT(*) >= 2	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
1	SELECT H.name FROM Highschooler H JOIN Friend F ON H.ID = F.student_id GROUP BY H.ID HAVING H.grade > 5 AND COUNT(F.friend_id) >= 2	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
1	SELECT H.name FROM Highschooler AS H JOIN Friend AS F ON H.ID = F.student_id GROUP BY H.ID HAVING H.grade > 5 AND COUNT(*) >= 2	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
0	SELECT count(*) FROM Likes WHERE liked_id IN (SELECT ID FROM Highschooler WHERE name = 'Kyle')	SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
1	SELECT count(*) FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle'	SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
1	SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)	SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
1	SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)	SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
0	SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend) AND ID NOT IN (SELECT friend_id FROM Friend)	SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
0	SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)	SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
1	SELECT DISTINCT T1.state FROM Owners AS T1 JOIN Professionals AS T2 ON T1.state = T2.state	SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
1	SELECT DISTINCT T1.state FROM Owners AS T1 JOIN Professionals AS T2 ON T1.state = T2.state	SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
1	SELECT avg(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)	SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
1	SELECT avg(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)	SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
1	SELECT P.professional_id, P.last_name, P.cell_number FROM Professionals AS P WHERE P.state = "Indiana" UNION SELECT P.professional_id, P.last_name, P.cell_number FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id GROUP BY P.professional_id HAVING COUNT(T.treatment_id) > 2;	SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
1	SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING T1.state = 'Indiana' OR COUNT(T2.treatment_id) > 2	SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
1	SELECT name FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments GROUP BY dog_id HAVING SUM(cost_of_treatment) > 1000)	select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
0	SELECT D.name FROM Dogs AS D JOIN Treatments AS T ON D.dog_id = T.dog_id JOIN Owners AS O ON D.owner_id = O.owner_id GROUP BY D.dog_id HAVING SUM(T.cost_of_treatment) <= 1000	select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
1	SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs	SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
1	SELECT first_name FROM ( SELECT first_name FROM Owners UNION SELECT first_name FROM Professionals ) AS CombinedNames WHERE first_name NOT IN (SELECT name FROM Dogs)	SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
1	SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)	SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
1	SELECT professional_id, role_code, email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id	SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
1	SELECT T1.owner_id, T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
0	SELECT owner_id, first_name, last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY count(*) DESC LIMIT 1	SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
1	SELECT P.professional_id, P.role_code, P.first_name FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id GROUP BY P.professional_id HAVING COUNT(*) >= 2	SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
1	SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(*) >= 2	SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
1	SELECT breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY Breeds.breed_name ORDER BY count(*) DESC LIMIT 1	SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
1	SELECT B.breed_name FROM Dogs AS D JOIN Breeds AS B ON D.breed_code = B.breed_code GROUP BY B.breed_name ORDER BY COUNT(*) DESC LIMIT 1	SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
0	SELECT o.owner_id, o.last_name FROM Owners AS o JOIN Dogs AS d ON o.owner_id = d.owner_id JOIN Treatments AS t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY count(t.treatment_id) DESC LIMIT 1	SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
0	SELECT o.owner_id, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id JOIN Treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1	SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
0	SELECT t1.treatment_type_description FROM Treatment_Types AS t1 JOIN Treatments AS t2 ON t1.treatment_type_code = t2.treatment_type_code GROUP BY t1.treatment_type_description ORDER BY SUM(t2.cost_of_treatment) ASC LIMIT 1;	SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
1	SELECT treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatment_Types.treatment_type_code ORDER BY SUM(cost_of_treatment) ASC LIMIT 1	SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
1	SELECT T1.owner_id, T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1	SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
1	SELECT t1.owner_id, t1.zip_code FROM Owners AS t1 JOIN Dogs AS t2 ON t1.owner_id = t2.owner_id JOIN Treatments AS t3 ON t2.dog_id = t3.dog_id GROUP BY t1.owner_id ORDER BY SUM(t3.cost_of_treatment) DESC LIMIT 1	SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
0	SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2	SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
0	SELECT T1.professional_id, T3.cell_number FROM Treatments AS T1 JOIN Professionals AS T3 ON T1.professional_id = T3.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T1.treatment_type_code) >= 2	SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
0	SELECT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments))	SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
0	SELECT DISTINCT P.first_name, P.last_name FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)	SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
1	SELECT date_of_treatment, first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id	SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
1	SELECT `date_of_treatment`, `first_name` FROM `Treatments` JOIN `Professionals` ON `Treatments`.`professional_id` = `Professionals`.`professional_id`	SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
1	SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code	SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
1	SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code	SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
0	SELECT O.first_name, O.last_name, S.size_description FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id JOIN Sizes S ON D.size_code = S.size_code	SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
0	SELECT O.first_name, O.last_name, S.size_description FROM Owners AS O JOIN Dogs AS D ON O.owner_id = D.owner_id JOIN Sizes AS S ON D.size_code = S.size_code	SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
1	SELECT O.first_name, D.name FROM Owners AS O JOIN Dogs AS D ON O.owner_id = D.owner_id	SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
1	SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id	SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
1	SELECT D.name, T.date_of_treatment FROM Dogs AS D JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE D.breed_code IN ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1 )	SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
1	SELECT D.name, T.date_of_treatment FROM Dogs AS D JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)	SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
1	SELECT O.first_name, D.name FROM Dogs D JOIN Owners O ON D.owner_id = O.owner_id WHERE O.state = 'Virginia'	SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
1	SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia'	SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
0	SELECT date_arrived, date_departed FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)	SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
0	SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id	SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
0	SELECT last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY date_of_birth DESC LIMIT 1	SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
0	SELECT last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.date_of_birth DESC LIMIT 1;	SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
1	SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'	SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
1	SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')	SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
1	SELECT date_arrived, date_departed FROM Dogs;	SELECT date_arrived ,  date_departed FROM Dogs
1	SELECT date_arrived, date_departed FROM Dogs	SELECT date_arrived ,  date_departed FROM Dogs
1	SELECT COUNT(DISTINCT dog_id) FROM Treatments	SELECT count(DISTINCT dog_id) FROM Treatments
1	SELECT count(DISTINCT dog_id) FROM Treatments	SELECT count(DISTINCT dog_id) FROM Treatments
1	SELECT COUNT(DISTINCT professional_id) FROM Treatments	SELECT count(DISTINCT professional_id) FROM Treatments
1	SELECT COUNT(DISTINCT professional_id) FROM Treatments	SELECT count(DISTINCT professional_id) FROM Treatments
1	SELECT role_code, street, city, state FROM Professionals WHERE city LIKE "%West%"	SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
1	SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'	SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
1	SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE "%North%"	SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
1	SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE "%North%"	SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
1	SELECT count(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)	SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
1	SELECT count(*) FROM Dogs WHERE age < (SELECT avg(age) FROM Dogs)	SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
1	SELECT `cost_of_treatment` FROM `Treatments` ORDER BY `date_of_treatment` DESC LIMIT 1	SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
1	SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1	SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
1	SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)	SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )
1	SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)	select count(*) from dogs where dog_id not in ( select dog_id from treatments )
1	SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)	SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
0	SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT DISTINCT owner_id FROM Dogs WHERE abandoned_yn = 'N' AND (date_adopted IS NULL OR date_departed IS NOT NULL))	SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
1	SELECT count(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)	SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
1	SELECT count(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)	SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
1	SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'	SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
1	SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'	SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
1	SELECT AVG(age) FROM Dogs	SELECT avg(age) FROM Dogs
1	SELECT avg(age) FROM Dogs	SELECT avg(age) FROM Dogs
1	SELECT max(age) FROM Dogs	SELECT max(age) FROM Dogs
1	SELECT age FROM Dogs ORDER BY age DESC LIMIT 1	SELECT max(age) FROM Dogs
0	SELECT charge_type, sum(charge_amount) FROM Charges GROUP BY charge_type	SELECT charge_type ,  charge_amount FROM Charges
1	SELECT charge_type, charge_amount FROM Charges;	SELECT charge_type ,  charge_amount FROM Charges
1	SELECT max(charge_amount) FROM Charges	SELECT max(charge_amount) FROM Charges
1	SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1	SELECT max(charge_amount) FROM Charges
1	SELECT email_address, cell_number, home_phone FROM Professionals	SELECT email_address ,  cell_number ,  home_phone FROM professionals
1	SELECT email_address, cell_number, home_phone FROM Professionals	SELECT email_address ,  cell_number ,  home_phone FROM professionals
0	SELECT B.breed_name, S.size_description FROM Breeds B CROSS JOIN Sizes S	SELECT DISTINCT breed_code ,  size_code FROM dogs
0	SELECT DISTINCT B.breed_name, S.size_description FROM Breeds AS B JOIN Dogs AS D ON B.breed_code = D.breed_code JOIN Sizes AS S ON D.size_code = S.size_code	SELECT DISTINCT breed_code ,  size_code FROM dogs
0	SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code	SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
0	SELECT P.first_name, TT.treatment_type_description FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id JOIN Treatment_Types AS TT ON T.treatment_type_code = TT.treatment_type_code	SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
1	SELECT count(*) FROM singer	SELECT count(*) FROM singer
1	SELECT count(*) FROM singer	SELECT count(*) FROM singer
1	SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC	SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
1	SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC	SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
1	SELECT Birth_Year , Citizenship FROM singer	SELECT Birth_Year ,  Citizenship FROM singer
1	SELECT Birth_Year, Citizenship FROM singer	SELECT Birth_Year ,  Citizenship FROM singer
1	SELECT Name FROM singer WHERE Citizenship != 'France'	SELECT Name FROM singer WHERE Citizenship != "France"
0	SELECT Name FROM singer WHERE Citizenship != "French"	SELECT Name FROM singer WHERE Citizenship != "France"
1	SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949	SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
1	SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)	SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
1	SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1	SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
1	SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1	SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
1	SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship	SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
1	SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship	SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
1	SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1	SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
0	SELECT Citizenship , count(*) FROM singer GROUP BY Citizenship ORDER BY count(*) DESC LIMIT 1	select citizenship from singer group by citizenship order by count(*) desc limit 1
1	SELECT "Citizenship", max("Net_Worth_Millions") FROM "singer" GROUP BY "Citizenship"	SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
1	SELECT `Citizenship`, MAX(`Net_Worth_Millions`) FROM `singer` GROUP BY `Citizenship`	SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
1	SELECT T1.Title, T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID	SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
1	SELECT Title , Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID	SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
1	SELECT DISTINCT s.Name FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID WHERE so.Sales > 300000	SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
1	SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000	SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
1	SELECT S.Name FROM singer AS S JOIN song AS SO ON S.Singer_ID = SO.Singer_ID GROUP BY S.Name HAVING COUNT(*) > 1	SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
0	SELECT Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID HAVING COUNT(song.Song_ID) > 1	SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
0	SELECT Name, sum(Sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID	SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
1	SELECT sum(S.sales) AS Total_Sales, Sg.Name FROM song AS S JOIN singer AS Sg ON S.Singer_ID = Sg.Singer_ID GROUP BY Sg.Name	SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
1	SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)	SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
1	SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)	SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
1	SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955	SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
1	SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955	SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
1	SELECT count(*) FROM Other_Available_Features	SELECT count(*) FROM Other_Available_Features
0	SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = (SELECT feature_type_code FROM Other_Available_Features WHERE feature_name = "AirCon");	SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"
0	SELECT DISTINCT `property_type_description` FROM `Ref_Property_Types`	SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code
0	SELECT property_name FROM Properties WHERE (property_type_code IN ('house', 'apartment') AND room_count > 1)	SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1
                     easy                 medium               hard                 extra                all                 
count                0                    0                    0                    0                    1034                
=====================   EXECUTION ACCURACY     =====================
execution            0.000                0.000                0.000                0.000                0.735               
