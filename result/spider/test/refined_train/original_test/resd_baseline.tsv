1	select count ( * ) from club	SELECT count(*) FROM club
1	select count ( * ) from club	SELECT count(*) FROM club
1	select name from club order by name asc	SELECT Name FROM club ORDER BY Name ASC
1	select name from club order by name asc	SELECT Name FROM club ORDER BY Name ASC
1	select manager , captain from club	SELECT Manager ,  Captain FROM club
1	select manager , captain from club	SELECT Manager ,  Captain FROM club
1	select name from club where manufacturer != 'Nike'	SELECT Name FROM club WHERE Manufacturer != "Nike"
1	select name from club where manufacturer != 'Nike'	SELECT Name FROM club WHERE Manufacturer != "Nike"
1	select name from player order by wins_count asc	SELECT Name FROM player ORDER BY Wins_count ASC
1	select name from player order by wins_count asc	SELECT Name FROM player ORDER BY Wins_count ASC
1	select name from player order by earnings desc limit 1	SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1
1	select name from player order by earnings desc limit 1	SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1
1	select distinct country from player where earnings > 1200000	SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000
0	select country from player where earnings > 1200000	SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000
0	select country from player where wins_count > 2 and earnings = ( select max ( earnings ) from player where wins_count > 2 )	SELECT Country FROM player WHERE Wins_count  >  2 ORDER BY Earnings DESC LIMIT 1
0	select country from player where wins_count > 2 group by country order by sum ( earnings ) desc limit 1	SELECT Country FROM player WHERE Wins_count  >  2 ORDER BY Earnings DESC LIMIT 1
1	select player.name , club.name from club join player on club.club_id = player.club_id	SELECT T2.Name ,  T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID
1	select player.name , club.name from club join player on club.club_id = player.club_id	SELECT T2.Name ,  T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID
0	select club.name from club where club_id in ( select club_id from player where wins_count > 2 )	SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Wins_count  >  2
0	select club.name from club where club_id in ( select club_id from player group by club_id having count ( wins_count ) > 2 )	SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Wins_count  >  2
1	select player.name from club join player on club.club_id = player.club_id where club.manager = 'Sam Allardyce'	SELECT T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Manager  =  "Sam Allardyce"
1	select player.name from club join player on club.club_id = player.club_id where club.manager = 'Sam Allardyce'	SELECT T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Manager  =  "Sam Allardyce"
1	select club.name from club join player on club.club_id = player.club_id group by club.club_id order by avg ( player.earnings ) desc	SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Club_ID ORDER BY avg(T2.Earnings) DESC
1	select club.name from club join player on club.club_id = player.club_id group by club.club_id order by avg ( player.earnings ) desc	SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Club_ID ORDER BY avg(T2.Earnings) DESC
1	select manufacturer , count ( * ) from club group by manufacturer	SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer
1	select manufacturer , count ( * ) from club group by manufacturer	SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer
0	select manufacturer from club group by manufacturer having count ( manufacturer ) = ( select max ( count ) from ( select count ( manufacturer ) as count from club group by manufacturer ) )	SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1
0	select manufacturer from club group by manufacturer having count ( manufacturer ) = ( select max ( cnt ) from ( select count ( manufacturer ) as cnt from club group by manufacturer ) )	SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1
1	select manufacturer from club group by manufacturer having count ( * ) > 1	SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1
1	select manufacturer from club group by manufacturer having count ( * ) > 1	SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1
1	select country from player group by country having count ( * ) > 1	SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1
1	select country from player group by country having count ( * ) > 1	SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1
1	select name from club where club_id not in ( select club_id from player )	SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)
1	select name from club where club_id not in ( select club_id from player )	SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)
0	select country from player where earnings > 1400000 and earnings < 1100000	SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000
1	select country from player where earnings > 1400000 intersect select country from player where earnings < 1100000	SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000
1	select count ( distinct country ) from player	SELECT COUNT (DISTINCT Country) FROM player
1	select count ( distinct country ) from player	SELECT COUNT (DISTINCT Country) FROM player
1	select earnings from player where country = 'Australia' or country = 'Zimbabwe'	SELECT Earnings FROM player WHERE Country  =  "Australia" OR Country  =  "Zimbabwe"
1	select earnings from player where country = 'Australia' or country = 'Zimbabwe'	SELECT Earnings FROM player WHERE Country  =  "Australia" OR Country  =  "Zimbabwe"
1	select orders.customer_id , customers.customer_first_name , customers.customer_last_name from orders join customers on orders.customer_id = customers.customer_id group by orders.customer_id having count ( * ) > 2 intersect select customers.customer_id , customers.customer_first_name , customers.customer_last_name from orders join customers on orders.customer_id = customers.customer_id join order_items on orders.order_id = order_items.order_id group by orders.customer_id having count ( * ) > 2	SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 INTERSECT SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >= 3
1	select orders.customer_id , customers.customer_first_name , customers.customer_last_name from orders join customers on orders.customer_id = customers.customer_id group by orders.customer_id having count ( * ) > 2 intersect select customers.customer_id , customers.customer_first_name , customers.customer_last_name from orders join customers on orders.customer_id = customers.customer_id join order_items on orders.order_id = order_items.order_id group by orders.customer_id having count ( * ) > 2	SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 INTERSECT SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >= 3
1	select orders.order_id , orders.order_status_code , count ( * ) from orders join order_items on orders.order_id = order_items.order_id group by orders.order_id	SELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id
1	select count ( * ) , orders.order_status_code , orders.order_id from orders join order_items on orders.order_id = order_items.order_id group by orders.order_id	SELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id
0	select date_order_placed from orders where date_order_placed = ( select min ( date_order_placed ) from orders ) or order_id in ( select order_id from order_items group by order_id having count ( * ) > 1 )	SELECT min(date_order_placed) FROM Orders UNION SELECT T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  1
0	select min ( date_order_placed ) , max ( date_order_placed ) from orders group by date_order_placed having count ( * ) > 1	SELECT min(date_order_placed) FROM Orders UNION SELECT T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  1
0	select customer_first_name , customer_middle_initial , customer_last_name from customers where customer_id not in ( select customer_id from orders )	SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id
0	select customer_first_name , customer_last_name , customer_middle_initial from customers where customer_id not in ( select customer_id from orders )	SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id
1	select p.product_id , p.product_name , p.product_price , p.product_color from products p where p.product_id not in ( select oi.product_id from order_items oi group by oi.product_id having count ( oi.order_id ) >= 2 )	SELECT product_id ,  product_name ,  product_price ,  product_color FROM Products EXCEPT SELECT T1.product_id ,  T1.product_name ,  T1.product_price ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.product_id HAVING count(*)  >=  2
1	select p.product_id , p.product_name , p.product_price , p.product_color from products p where p.product_id in ( select oi.product_id from order_items oi group by oi.product_id having count ( oi.order_id ) < 2 )	select t1.product_id ,  t1.product_name ,  t1.product_price ,  t1.product_color from products as t1 join order_items as t2 on t1.product_id  =  t2.product_id join orders as t3 on t2.order_id  =  t3.order_id group by t1.product_id having count(*) < 2
1	select orders.order_id , orders.date_order_placed from orders join order_items on orders.order_id = order_items.order_id group by orders.order_id having count ( * ) >= 2	SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2
0	select distinct o.order_id , o.date_order_placed from orders o where o.order_id in ( select oi.order_id from order_items oi group by oi.order_id having count ( distinct oi.product_id ) >= 2 )	SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2
1	select products.product_id , products.product_name , products.product_price from order_items join products on order_items.product_id = products.product_id group by order_items.product_id order by count ( * ) desc limit 1	SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1
1	select products.product_id , products.product_name , products.product_price from order_items join products on order_items.product_id = products.product_id group by order_items.product_id order by count ( * ) desc limit 1	SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1
1	select orders.order_id , sum ( products.product_price ) from orders join order_items on orders.order_id = order_items.order_id join products on order_items.product_id = products.product_id group by orders.order_id order by sum ( products.product_price ) asc limit 1	SELECT T1.order_id ,  sum(T2.product_price) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.order_id ORDER BY sum(T2.product_price) ASC LIMIT 1
0	sql placeholder	select t1.order_id ,  sum(t2.product_price) from order_items as t1 join products as t2 on t1.product_id  =  t2.product_id group by t1.order_id order by sum(t2.product_price) asc limit 1
0	select cpm.payment_method_code from customer_payment_methods cpm group by cpm.payment_method_code having count ( cpm.payment_method_code ) = ( select max ( count ) from ( select count ( * ) as count from customer_payment_methods group by payment_method_code ) )	SELECT Payment_method_code FROM Customer_Payment_Methods GROUP BY Payment_method_code ORDER BY count(*) DESC LIMIT 1
0	with popularpayment as ( select payment_method_code , count ( customer_id ) as popularity from customer_payment_methods group by payment_method_code ) select payment_method_code from popularpayment where popularity = ( select max ( popularity ) from popularpayment )	SELECT Payment_method_code FROM Customer_Payment_Methods GROUP BY Payment_method_code ORDER BY count(*) DESC LIMIT 1
1	select customers.gender_code , count ( * ) from customers join orders on customers.customer_id = orders.customer_id join order_items on orders.order_id = order_items.order_id join products on order_items.product_id = products.product_id group by customers.gender_code	SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code
1	select customers.gender_code , count ( * ) from customers join orders join order_items join products on customers.customer_id = orders.customer_id and orders.order_id = order_items.order_id and order_items.product_id = products.product_id group by customers.gender_code	SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code
1	select gender_code , count ( * ) from orders join customers on orders.customer_id = customers.customer_id group by gender_code	SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code
1	select gender_code , count ( * ) from orders join customers on orders.customer_id = customers.customer_id group by gender_code	SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code
0	select customers.customer_first_name , customers.customer_last_name , customer_payment_methods.payment_method_code from customers join customer_payment_methods on customers.customer_id = customer_payment_methods.customer_id	SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.Payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id
1	select customer_first_name , customer_middle_initial , customer_last_name , customer_payment_methods.payment_method_code from customers join customer_payment_methods on customers.customer_id = customer_payment_methods.customer_id	SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.Payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id
1	select invoices.invoice_status_code , invoices.invoice_date , shipments.shipment_date from invoices join shipments on invoices.invoice_number = shipments.invoice_number	SELECT T1.invoice_status_code ,  T1.invoice_date ,  T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number
1	select invoices.invoice_status_code , invoices.invoice_date , shipments.shipment_date from invoices join shipments on invoices.invoice_number = shipments.invoice_number	SELECT T1.invoice_status_code ,  T1.invoice_date ,  T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number
0	sql placeholder	SELECT T1.product_name ,  T4.shipment_date FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id
0	sql placeholder	SELECT T1.product_name ,  T4.shipment_date FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id
0	select order_items.order_item_status_code , shipments.shipment_tracking_number from order_items join shipments on order_items.order_item_id = shipments.order_id	SELECT T1.order_item_status_code ,  T3.shipment_tracking_number FROM Order_items AS T1 JOIN Shipment_Items AS T2 ON T1.order_item_id  =  T2.order_item_id JOIN Shipments AS T3 ON T2.shipment_id  =  T3.shipment_id
0	select order_item_status_code from order_items where order_id in ( select order_id from shipments ) and order_item_id in ( select order_item_id from shipment_items )	SELECT T1.order_item_status_code ,  T3.shipment_tracking_number FROM Order_items AS T1 JOIN Shipment_Items AS T2 ON T1.order_item_id  =  T2.order_item_id JOIN Shipments AS T3 ON T2.shipment_id  =  T3.shipment_id
0	select product_name , product_color from products where product_id in ( select product_id from order_items )	SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id
0	select product_name , product_color from products where product_id in ( select product_id from shipment_items )	SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id
1	select distinct products.product_name , products.product_price , products.product_description from customers join orders join order_items join products on customers.customer_id = orders.customer_id and orders.order_id = order_items.order_id and order_items.product_id = products.product_id where customers.gender_code = 'Female'	SELECT DISTINCT T1.product_name ,  T1.product_price ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id JOIN Customers AS T4 ON T3.customer_id  =  T4.customer_id WHERE T4.gender_code  =  'Female'
1	select distinct products.product_name , products.product_price , products.product_description from customers join orders join order_items join products on customers.customer_id = orders.customer_id and orders.order_id = order_items.order_id and order_items.product_id = products.product_id where customers.gender_code = 'Female'	SELECT DISTINCT T1.product_name ,  T1.product_price ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id JOIN Customers AS T4 ON T3.customer_id  =  T4.customer_id WHERE T4.gender_code  =  'Female'
1	select invoice_status_code from invoices where invoice_number not in ( select invoice_number from shipments )	SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )
1	select invoice_status_code from invoices where invoice_number not in ( select invoice_number from shipments )	SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )
0	sql placeholder	select t1.order_id ,  t1.date_order_placed ,  sum(t3.product_price) from orders as t1 join order_items as t2 on t1.order_id  =  t2.order_id join products as t3 on t2.product_id  =  t3.product_id group by t1.order_id
0	sql placeholder	SELECT T1.order_id ,  T1.date_order_placed ,  sum(T3.product_price) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id JOIN Products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T1.order_id
1	select count ( distinct customer_id ) from orders	SELECT count(DISTINCT customer_id) FROM Orders
1	select count ( distinct customer_id ) from orders	SELECT count(DISTINCT customer_id) FROM Orders
1	select count ( distinct order_item_status_code ) from order_items	SELECT count(DISTINCT order_item_status_code) FROM Order_items
1	select count ( distinct order_item_status_code ) from order_items	SELECT count(DISTINCT order_item_status_code) FROM Order_items
1	select count ( distinct payment_method_code ) from customer_payment_methods	SELECT count(DISTINCT Payment_method_code) FROM Customer_Payment_Methods
1	select count ( distinct payment_method_code ) from customer_payment_methods	SELECT count(DISTINCT Payment_method_code) FROM Customer_Payment_Methods
1	select login_name , login_password from customers where phone_number like '%+12%'	SELECT login_name ,  login_password FROM Customers WHERE phone_number LIKE '+12%'
0	select customer_first_name , login_password from customers where phone_number like '%12%'	SELECT login_name ,  login_password FROM Customers WHERE phone_number LIKE '+12%'
1	select product_size from products where product_name like '%Dell%'	SELECT product_size FROM Products WHERE product_name LIKE '%Dell%'
1	select product_size from products where product_name like '%Dell%'	SELECT product_size FROM Products WHERE product_name LIKE '%Dell%'
1	select product_price , product_size from products where product_price > ( select avg ( product_price ) from products )	SELECT product_price ,  product_size FROM Products WHERE product_price  >  ( SELECT avg(product_price) FROM Products )
1	select product_price , product_size from products where product_price > ( select avg ( product_price ) from products )	SELECT product_price ,  product_size FROM Products WHERE product_price  >  ( SELECT avg(product_price) FROM Products )
1	select count ( * ) from products where product_id not in ( select product_id from order_items )	SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )
1	select count ( * ) from products where product_id not in ( select product_id from order_items )	SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )
1	select count ( * ) from customers where customer_id not in ( select customer_id from customer_payment_methods )	SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods )
1	select count ( * ) from customers where customer_id not in ( select customer_id from customer_payment_methods )	SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods )
1	select order_status_code , date_order_placed from orders	SELECT order_status_code ,  date_order_placed FROM Orders
1	select order_status_code , date_order_placed from orders	SELECT order_status_code ,  date_order_placed FROM Orders
1	select address_line_1 , town_city , county from customers where country = 'USA'	SELECT address_line_1 ,  town_city ,  county FROM Customers WHERE Country  =  'USA'
0	select address_line_1 , town_city , county from customers where country = 'United States'	SELECT address_line_1 ,  town_city ,  county FROM Customers WHERE Country  =  'USA'
0	select customers.customer_first_name , products.product_name from customers join orders on customers.customer_id = orders.customer_id join products on orders.order_id = products.product_id	SELECT T1.customer_first_name ,  T4.product_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id JOIN Products AS T4 ON T3.product_id  =  T4.product_id
1	select customers.customer_first_name , products.product_name from customers join orders join order_items join products on customers.customer_id = orders.customer_id and orders.order_id = order_items.order_id and order_items.product_id = products.product_id	SELECT T1.customer_first_name ,  T4.product_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id JOIN Products AS T4 ON T3.product_id  =  T4.product_id
0	select count ( * ) from shipments	SELECT count(*) FROM Shipment_Items
0	select count ( * ) from shipments	SELECT count(*) FROM Shipment_Items
1	select avg ( product_price ) from products	SELECT avg(product_price) FROM Products
1	select avg ( product_price ) from products	SELECT avg(product_price) FROM Products
1	select avg ( products.product_price ) from orders join order_items join products on orders.order_id = order_items.order_id and order_items.product_id = products.product_id	SELECT avg(T1.product_price) FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id
0	select avg ( products.product_price ) from order_items join products on order_items.product_id = products.product_id group by products.product_id	SELECT avg(T1.product_price) FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id
0	select email_address , town_city , county from customers group by gender_code order by count ( * ) asc limit 1	SELECT email_address ,  town_city ,  county FROM Customers WHERE gender_code  =  ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1 )
0	select email_address , town_city , county from customers where gender_code in ( select customer_id from orders group by customer_id having count ( customer_id ) = ( select min ( count ) from ( select count ( customer_id ) as count from orders group by customer_id ) ) )	SELECT email_address ,  town_city ,  county FROM Customers WHERE gender_code  =  ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1 )
1	select date_order_placed from orders where customer_id in ( select customer_id from customer_payment_methods group by customer_id having count ( distinct payment_method_code ) >= 2 )	SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )
0	select orders.date_order_placed from orders join customer_payment_methods on orders.customer_id = customer_payment_methods.customer_id group by customer_payment_methods.customer_id having count ( * ) >= 2	SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )
0	select order_status_code from orders group by order_status_code having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from orders group by order_status_code ) )	SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) LIMIT 1
1	select order_status_code from orders group by order_status_code order by count ( * ) asc limit 1	SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) LIMIT 1
1	select products.product_id , products.product_description from order_items join products on order_items.product_id = products.product_id group by products.product_id having count ( * ) > 3	SELECT T1.product_id ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id HAVING count(*)  >  3
1	select p.product_id , p.product_description from products p where p.product_id in ( select oi.product_id from order_items oi group by oi.product_id having count ( oi.order_id ) > 3 )	SELECT T1.product_id ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id HAVING count(*)  >  3
1	select invoices.invoice_date , shipments.invoice_number from invoices join shipments on invoices.invoice_number = shipments.invoice_number group by shipments.invoice_number having count ( * ) >= 2	SELECT T1.invoice_date ,  T1.invoice_number FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number HAVING count(*)  >=  2
1	select invoices.invoice_date , shipments.invoice_number from invoices join shipments on invoices.invoice_number = shipments.invoice_number group by shipments.invoice_number having count ( * ) >= 2	SELECT T1.invoice_date ,  T1.invoice_number FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number HAVING count(*)  >=  2
1	select shipment_tracking_number , shipment_date from shipments	SELECT shipment_tracking_number ,  shipment_date FROM Shipments
1	select shipment_tracking_number , shipment_date from shipments	SELECT shipment_tracking_number ,  shipment_date FROM Shipments
1	select product_color , product_description , product_size from products where product_price < ( select max ( product_price ) from products )	SELECT product_color ,  product_description ,  product_size FROM Products WHERE product_price  <  ( SELECT max(product_price) FROM products )
1	select product_color , product_description , product_size from products where product_price != ( select max ( product_price ) from products )	select product_color ,  product_description ,  product_size from products where product_price  !=  ( select max(product_price) from products )
1	select name from director where age > ( select avg ( age ) from director )	SELECT name FROM director WHERE age  >  (SELECT avg(age) FROM director)
0	select name from director where age = ( select max ( age ) from director )	SELECT name FROM director ORDER BY age DESC LIMIT 1
1	select count ( * ) from channel where internet like '%bbc%'	SELECT count(*) FROM channel WHERE internet LIKE "%bbc%"
1	select count ( distinct digital_terrestrial_channel ) from channel	SELECT count(DISTINCT Digital_terrestrial_channel) FROM channel
1	select title from program order by start_year desc	SELECT title FROM program ORDER BY start_year DESC
1	select director.name from program join director on program.director_id = director.director_id group by director.director_id order by count ( * ) desc limit 1	SELECT t2.name FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id GROUP BY t1.director_id ORDER BY count(*) DESC LIMIT 1
1	select director.name , director.age from director join program on director.director_id = program.director_id group by director.director_id order by count ( * ) desc limit 1	SELECT t2.name ,  t2.age FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id GROUP BY t1.director_id ORDER BY count(*) DESC LIMIT 1
0	select p.title from program p where p.start_year = ( select max ( start_year ) from program )	SELECT title FROM program ORDER BY start_year DESC LIMIT 1
1	select channel.name , channel.internet from channel join program on channel.channel_id = program.channel_id group by channel.channel_id having count ( * ) > 1	SELECT t1.name ,  t1.internet FROM channel AS t1 JOIN program AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id HAVING count(*)  >  1
0	select name , ( select count ( * ) from program where channel_id = channel.channel_id ) as program_count from channel	SELECT t1.name ,  count(*) FROM channel AS t1 JOIN program AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id
1	select count ( * ) from channel where channel_id not in ( select channel_id from program )	SELECT count(*) FROM channel WHERE channel_id NOT IN (SELECT channel_id FROM program)
0	select name from director where director_id in ( select director_id from program where title = 'Dracula' )	SELECT t2.name FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id WHERE t1.title  =  'Dracula'
1	select channel.name , channel.internet from channel join director_admin on channel.channel_id = director_admin.channel_id group by channel.channel_id order by count ( * ) desc limit 1	SELECT t1.name ,  t1.internet FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id ORDER BY count(*) DESC LIMIT 1
1	select name from director where age between 30 and 60	SELECT name FROM director WHERE age BETWEEN 30 AND 60
0	sql placeholder	SELECT t1.name FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.age  <  40 INTERSECT SELECT t1.name FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.age  >  60
0	select channel_id , name from channel where channel_id not in ( select channel_id from director_admin where director_id = 'Hank Baskett' )	SELECT t1.name ,  t1.channel_id FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.name != "Hank Baskett"
1	select count ( * ) from radio	SELECT count(*) FROM radio
1	select transmitter from radio order by erp_kw asc	select transmitter from radio order by erp_kw asc
1	select tv_show_name , original_airdate from tv_show	SELECT tv_show_name ,  Original_Airdate FROM tv_show
1	select station_name from city_channel where affiliation != 'ABC'	SELECT Station_name FROM city_channel WHERE Affiliation != "ABC"
1	select transmitter from radio where erp_kw > 150 or erp_kw < 30	SELECT Transmitter FROM radio WHERE ERP_kW  >  150 OR ERP_kW  <  30
1	select transmitter from radio order by erp_kw desc limit 1	SELECT Transmitter FROM radio ORDER BY ERP_kW DESC LIMIT 1
1	select avg ( erp_kw ) from radio	SELECT avg(ERP_kW) FROM radio
1	select affiliation , count ( * ) from city_channel group by affiliation	SELECT Affiliation ,  COUNT(*) FROM city_channel GROUP BY Affiliation
1	select affiliation from city_channel group by affiliation order by count ( * ) desc limit 1	SELECT Affiliation FROM city_channel GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1
1	select affiliation from city_channel group by affiliation having count ( * ) > 3	SELECT Affiliation FROM city_channel GROUP BY Affiliation HAVING COUNT(*)  >  3
1	select city , station_name from city_channel order by station_name asc	SELECT City ,  Station_name FROM city_channel ORDER BY Station_name ASC
1	select radio.transmitter , city_channel.city from city_channel_radio join radio on city_channel_radio.radio_id = radio.radio_id join city_channel on city_channel.id = city_channel_radio.city_channel_id	SELECT T3.Transmitter ,  T2.City FROM city_channel_radio AS T1 JOIN city_channel AS T2 ON T1.City_channel_ID  =  T2.ID JOIN radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID
1	select radio.transmitter , city_channel.station_name from city_channel join city_channel_radio on city_channel.id = city_channel_radio.city_channel_id join radio on city_channel_radio.radio_id = radio.radio_id order by radio.erp_kw desc	SELECT T3.Transmitter ,  T2.Station_name FROM city_channel_radio AS T1 JOIN city_channel AS T2 ON T1.City_channel_ID  =  T2.ID JOIN radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID ORDER BY T3.ERP_kW DESC
0	select radio.transmitter , count ( * ) from city_channel_radio join radio on city_channel_radio.radio_id = radio.radio_id group by radio.radio_id	SELECT T2.Transmitter ,  COUNT(*) FROM city_channel_radio AS T1 JOIN radio AS T2 ON T1.Radio_ID  =  T2.Radio_ID GROUP BY T2.Transmitter
0	select distinct transmitter from radio where radio_id not in ( select radio_id from city_channel_radio )	SELECT Transmitter FROM radio WHERE Radio_ID NOT IN (SELECT Radio_ID FROM city_channel_radio)
0	select model from vehicle where top_speed = ( select max ( top_speed ) from vehicle where power > 6000 )	SELECT model FROM vehicle WHERE power  >  6000 ORDER BY top_speed DESC LIMIT 1
0	select model from vehicle where power > 6000 and top_speed = ( select max ( top_speed ) from vehicle where power > 6000 )	SELECT model FROM vehicle WHERE power  >  6000 ORDER BY top_speed DESC LIMIT 1
1	select name from driver where citizenship = 'United States'	SELECT name FROM driver WHERE citizenship  =  'United States'
1	select name from driver where citizenship = 'United States'	SELECT name FROM driver WHERE citizenship  =  'United States'
0	select driver.driver_id , count ( * ) from vehicle_driver join driver on vehicle_driver.driver_id = driver.driver_id group by driver.driver_id having count ( * ) <= 1	SELECT count(*) ,  driver_id FROM vehicle_driver GROUP BY driver_id ORDER BY count(*) DESC LIMIT 1
1	select driver.driver_id , count ( * ) from vehicle_driver join driver on vehicle_driver.driver_id = driver.driver_id group by driver.driver_id order by count ( * ) desc limit 1	SELECT count(*) ,  driver_id FROM vehicle_driver GROUP BY driver_id ORDER BY count(*) DESC LIMIT 1
1	select max ( power ) , avg ( power ) from vehicle where builder = 'Zhuzhou'	SELECT max(power) ,  avg(power) FROM vehicle WHERE builder  =  'Zhuzhou'
1	select max ( power ) , avg ( power ) from vehicle where builder = 'Zhuzhou'	SELECT max(power) ,  avg(power) FROM vehicle WHERE builder  =  'Zhuzhou'
1	select vehicle_driver.vehicle_id from vehicle_driver join vehicle on vehicle_driver.vehicle_id = vehicle.vehicle_id group by vehicle_driver.vehicle_id order by count ( * ) asc limit 1	SELECT vehicle_id FROM vehicle_driver GROUP BY vehicle_id ORDER BY count(*) ASC LIMIT 1
1	select vehicle.vehicle_id from vehicle_driver join vehicle on vehicle_driver.vehicle_id = vehicle.vehicle_id group by vehicle.vehicle_id order by count ( * ) asc limit 1	SELECT vehicle_id FROM vehicle_driver GROUP BY vehicle_id ORDER BY count(*) ASC LIMIT 1
1	select top_speed , power from vehicle where build_year = 1996	SELECT top_speed ,  power FROM vehicle WHERE build_year  =  1996
1	select top_speed , power from vehicle where build_year = 1996	SELECT top_speed ,  power FROM vehicle WHERE build_year  =  1996
1	select build_year , model , builder from vehicle	SELECT build_year ,  model ,  builder FROM vehicle
1	select build_year , model , builder from vehicle	SELECT build_year ,  model ,  builder FROM vehicle
1	select count ( distinct vehicle_driver.driver_id ) from vehicle_driver join vehicle on vehicle_driver.vehicle_id = vehicle.vehicle_id where vehicle.build_year = 2012	SELECT count(DISTINCT T1.driver_id) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.vehicle_id  =  T2.vehicle_id WHERE T2.build_year  =  2012
1	select count ( distinct vehicle_driver.driver_id ) from vehicle_driver join vehicle on vehicle_driver.vehicle_id = vehicle.vehicle_id where vehicle.build_year = 2012	SELECT count(DISTINCT T1.driver_id) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.vehicle_id  =  T2.vehicle_id WHERE T2.build_year  =  2012
1	select count ( * ) from driver where racing_series = 'NASCAR'	SELECT count(*) FROM driver WHERE Racing_Series  =  'NASCAR'
1	select count ( * ) from driver where racing_series = 'NASCAR'	SELECT count(*) FROM driver WHERE Racing_Series  =  'NASCAR'
1	select avg ( top_speed ) from vehicle	SELECT avg(top_speed) FROM vehicle
1	select avg ( top_speed ) from vehicle	SELECT avg(top_speed) FROM vehicle
1	select distinct driver.name from vehicle_driver join vehicle on vehicle_driver.vehicle_id = vehicle.vehicle_id join driver on vehicle_driver.driver_id = driver.driver_id where vehicle.power > 5000	select distinct t1.name from driver as t1 join vehicle_driver as t2 on t1.driver_id  =  t2.driver_id join vehicle as t3 on t2.vehicle_id  =  t3.vehicle_id where t3.power  >  5000
0	select driver.name from vehicle_driver join vehicle on vehicle_driver.vehicle_id = vehicle.vehicle_id join driver on vehicle_driver.driver_id = driver.driver_id where vehicle.power > 5000	SELECT DISTINCT T1.Name FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.power  >  5000
1	select model from vehicle where total_production > 100 or top_speed > 150	SELECT model FROM vehicle WHERE total_production  >  100 OR top_speed  >  150
1	select model from vehicle where total_production > 100 or top_speed > 150	SELECT model FROM vehicle WHERE total_production  >  100 OR top_speed  >  150
1	select model , build_year from vehicle where model like '%DJ%'	SELECT model ,  build_year FROM vehicle WHERE model LIKE '%DJ%'
1	select model , build_year from vehicle where model like '%DJ%'	SELECT model ,  build_year FROM vehicle WHERE model LIKE '%DJ%'
0	select model from vehicle where vehicle_id not in ( select vehicle_id from vehicle_driver )	SELECT model FROM vehicle EXCEPT SELECT T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id
0	select model from vehicle where vehicle_id not in ( select vehicle_id from vehicle_driver )	SELECT model FROM vehicle EXCEPT SELECT T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id
0	select vehicle.vehicle_id , vehicle.model from vehicle_driver join vehicle on vehicle_driver.vehicle_id = vehicle.vehicle_id group by vehicle.vehicle_id having count ( * ) = 2 union select vehicle.vehicle_id , vehicle.model from vehicle_driver join vehicle on vehicle_driver.vehicle_id = vehicle.vehicle_id group by vehicle.vehicle_id having count ( * ) = 2	SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  =  2 OR T1.builder  =  'Ziyang'
0	select vehicle_id , model from vehicle where builder = 'Ziyang' or vehicle_id in ( select vehicle_id from vehicle_driver where driver_id = 2 union select vehicle_id from vehicle_driver where builder = 'Ziyang' )	SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  =  2 OR T1.builder  =  'Ziyang'
0	select vehicle.vehicle_id , vehicle.model from vehicle_driver join vehicle on vehicle_driver.vehicle_id = vehicle.vehicle_id join driver on vehicle_driver.driver_id = driver.driver_id where driver.name = 'Jeff Gordon' union select vehicle.vehicle_id , vehicle.model from vehicle_driver join vehicle on vehicle_driver.vehicle_id = vehicle.vehicle_id join driver on vehicle_driver.driver_id = driver.driver_id where driver.name = 'Jeff Gordon'	SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id JOIN driver AS T3 ON T2.driver_id  =  T3.driver_id WHERE T3.name  =  'Jeff Gordon' UNION SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  >  2
0	select vehicle.vehicle_id , vehicle.model from vehicle_driver join vehicle on vehicle_driver.vehicle_id = vehicle.vehicle_id join driver on vehicle_driver.driver_id = driver.driver_id where driver.name = 'Jeff Gordon' union select vehicle.vehicle_id , vehicle.model from vehicle_driver join vehicle on vehicle_driver.vehicle_id = vehicle.vehicle_id join driver on vehicle_driver.driver_id = driver.driver_id where driver.name = 'Jefff Gordon'	SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id JOIN driver AS T3 ON T2.driver_id  =  T3.driver_id WHERE T3.name  =  'Jeff Gordon' UNION SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  >  2
1	select count ( * ) from vehicle where top_speed = ( select max ( top_speed ) from vehicle )	SELECT count(*) FROM vehicle WHERE top_speed  =  (SELECT max(top_speed) FROM vehicle)
1	select count ( * ) from vehicle where top_speed = ( select max ( top_speed ) from vehicle )	SELECT count(*) FROM vehicle WHERE top_speed  =  (SELECT max(top_speed) FROM vehicle)
1	select name from driver order by name asc	SELECT name FROM driver ORDER BY name
1	select name from driver order by name asc	SELECT name FROM driver ORDER BY name
1	select racing_series , count ( * ) from driver group by racing_series	SELECT count(*) ,  racing_series FROM driver GROUP BY racing_series
1	select count ( * ) , racing_series from driver group by racing_series	SELECT count(*) ,  racing_series FROM driver GROUP BY racing_series
1	select driver.name , driver.citizenship from vehicle_driver join vehicle on vehicle_driver.vehicle_id = vehicle.vehicle_id join driver on vehicle_driver.driver_id = driver.driver_id where vehicle.model = 'DJ1'	SELECT T1.name ,  T1.citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.model  =  'DJ1'
1	select driver.name , driver.citizenship from vehicle_driver join vehicle on vehicle_driver.vehicle_id = vehicle.vehicle_id join driver on vehicle_driver.driver_id = driver.driver_id where vehicle.model = 'DJ1'	SELECT T1.name ,  T1.citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.model  =  'DJ1'
1	select count ( * ) from driver where driver_id not in ( select driver_id from vehicle_driver )	SELECT count(*) FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM vehicle_driver )
1	select count ( * ) from driver where driver_id not in ( select driver_id from vehicle_driver )	SELECT count(*) FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM vehicle_driver )
1	select count ( * ) from exams	SELECT count(*) FROM Exams
1	select count ( * ) from exams	SELECT count(*) FROM Exams
1	select distinct subject_code from exams order by subject_code asc	select distinct subject_code from exams order by subject_code asc
1	select distinct subject_code from exams order by subject_code asc	SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code
1	select exam_name , exam_date from exams where subject_code != 'Database'	SELECT Exam_Date ,  Exam_Name FROM Exams WHERE Subject_Code != 'Database'
1	select exam_date , exam_name from exams where subject_code != 'Database'	SELECT Exam_Date ,  Exam_Name FROM Exams WHERE Subject_Code != 'Database'
1	select exam_date from exams where subject_code like '%data%' order by exam_date desc	SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC
1	select exam_date from exams where subject_code like '%data%' order by exam_date desc	SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC
1	select type_of_question_code , count ( * ) from questions group by type_of_question_code	SELECT Type_of_Question_Code ,  COUNT(*) FROM Questions GROUP BY Type_of_Question_Code
1	select type_of_question_code , count ( * ) from questions group by type_of_question_code	SELECT Type_of_Question_Code ,  COUNT(*) FROM Questions GROUP BY Type_of_Question_Code
1	select distinct student_answer_text from student_answers where comments = 'Normal'	SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments  =  "Normal"
1	select distinct student_answer_text from student_answers where comments = 'Normal'	SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments  =  "Normal"
1	select count ( distinct comments ) from student_answers	SELECT count(DISTINCT Comments) FROM Student_Answers
1	select count ( distinct comments ) from student_answers	SELECT count(DISTINCT Comments) FROM Student_Answers
1	select student_answer_text from student_answers group by student_answer_text order by count ( * ) desc	SELECT Student_Answer_Text FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY COUNT(*) DESC
1	select student_answer_text from student_answers group by student_answer_text order by count ( * ) desc	SELECT Student_Answer_Text FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY COUNT(*) DESC
1	select s.first_name , sa.date_of_answer from student_answers sa join students s on sa.student_id = s.student_id	SELECT T2.First_Name ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID
1	select students.first_name , student_answers.date_of_answer from student_answers join students on student_answers.student_id = students.student_id	SELECT T2.First_Name ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID
1	select students.email_adress , student_answers.date_of_answer from student_answers join students on student_answers.student_id = students.student_id order by date_of_answer desc	SELECT T2.Email_Adress ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID ORDER BY T1.Date_of_Answer DESC
1	select students.email_adress , student_answers.date_of_answer from student_answers join students on student_answers.student_id = students.student_id order by date_of_answer desc	SELECT T2.Email_Adress ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID ORDER BY T1.Date_of_Answer DESC
1	select assessment from student_assessments group by assessment order by count ( * ) asc limit 1	SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) ASC LIMIT 1
1	select assessment from student_assessments group by assessment order by count ( * ) asc limit 1	SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) ASC LIMIT 1
1	select students.first_name from student_answers join students on student_answers.student_id = students.student_id group by student_answers.student_id having count ( * ) >= 2	SELECT T2.First_Name FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID GROUP BY T1.Student_ID HAVING COUNT(*)  >=  2
1	select s.first_name from students s join student_answers sa on s.student_id = sa.student_id group by s.student_id having count ( distinct sa.student_answer_id ) >= 2	SELECT T2.First_Name FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID GROUP BY T1.Student_ID HAVING COUNT(*)  >=  2
0	select valid_answer_text from valid_answers group by valid_answer_text having count ( valid_answer_text ) = ( select max ( count ) from ( select count ( valid_answer_text ) as count from valid_answers group by valid_answer_text ) )	SELECT Valid_Answer_Text FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY COUNT(*) DESC LIMIT 1
1	select valid_answer_text from valid_answers group by valid_answer_text order by count ( * ) desc limit 1	SELECT Valid_Answer_Text FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY COUNT(*) DESC LIMIT 1
1	select last_name from students where gender_mfu != 'M'	SELECT Last_Name FROM Students WHERE Gender_MFU != "M"
1	select last_name from students where gender_mfu != 'M'	SELECT Last_Name FROM Students WHERE Gender_MFU != "M"
1	select gender_mfu , count ( * ) from students group by gender_mfu	SELECT Gender_MFU ,  COUNT(*) FROM Students GROUP BY Gender_MFU
1	select gender_mfu , count ( * ) from students group by gender_mfu	SELECT Gender_MFU ,  COUNT(*) FROM Students GROUP BY Gender_MFU
1	select last_name from students where gender_mfu = 'F' or gender_mfu = 'M'	SELECT Last_Name FROM Students WHERE Gender_MFU  =  "F" OR Gender_MFU  =  "M"
1	select last_name from students where gender_mfu = 'F' or gender_mfu = 'M'	SELECT Last_Name FROM Students WHERE Gender_MFU  =  "F" OR Gender_MFU  =  "M"
1	select first_name from students where student_id not in ( select student_id from student_answers )	SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers)
1	select first_name from students where student_id not in ( select student_id from student_answers )	SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers)
1	select student_answer_text from student_answers where comments = 'Normal' intersect select student_answer_text from student_answers where comments = 'Absent'	SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  "Normal" INTERSECT SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  "Absent"
1	select student_answer_text from student_answers where comments = 'Normal' intersect select student_answer_text from student_answers where comments = 'Absent'	SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  "Normal" INTERSECT SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  "Absent"
1	select type_of_question_code from questions group by type_of_question_code having count ( * ) >= 3	SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING count(*)  >=  3
1	select type_of_question_code from questions group by type_of_question_code having count ( * ) >= 3	SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING count(*)  >=  3
1	select * from students	SELECT * FROM Students
1	select * from students	SELECT * FROM Students
1	select count ( * ) from addresses	SELECT count(*) FROM Addresses
1	select count ( * ) from addresses	SELECT count(*) FROM Addresses
1	select address_id , address_details from addresses	SELECT address_id ,  address_details FROM Addresses
1	select address_id , address_details from addresses	SELECT address_id ,  address_details FROM Addresses
1	select count ( * ) from products	SELECT count(*) FROM Products
1	select count ( * ) from products	SELECT count(*) FROM Products
1	select product_id , product_type_code , product_name from products	SELECT product_id ,  product_type_code ,  product_name FROM Products
1	select product_id , product_type_code , product_name from products	SELECT product_id ,  product_type_code ,  product_name FROM Products
1	select product_price from products where product_name = 'Monitor'	SELECT product_price FROM Products WHERE product_name  =  "Monitor"
1	select product_price from products where product_name = 'Monitor'	SELECT product_price FROM Products WHERE product_name  =  "Monitor"
1	select min ( product_price ) , avg ( product_price ) , max ( product_price ) from products	SELECT min(product_price) ,  avg(product_price) ,  max(product_price) FROM Products
1	select min ( product_price ) , avg ( product_price ) , max ( product_price ) from products	SELECT min(product_price) ,  avg(product_price) ,  max(product_price) FROM Products
1	select avg ( product_price ) from products where product_type_code = 'Clothes'	SELECT avg(product_price) FROM Products WHERE product_type_code  =  "Clothes"
1	select avg ( product_price ) from products where product_type_code = 'Clothes'	SELECT avg(product_price) FROM Products WHERE product_type_code  =  "Clothes"
1	select count ( * ) from products where product_type_code = 'Hardware'	SELECT count(*) FROM Products WHERE product_type_code  =  "Hardware"
1	select count ( * ) from products where product_type_code = 'Hardware'	SELECT count(*) FROM Products WHERE product_type_code  =  "Hardware"
1	select product_name from products where product_price > ( select avg ( product_price ) from products )	SELECT product_name FROM Products WHERE product_price  >  (SELECT avg(product_price) FROM Products)
1	select product_name from products where product_price > ( select avg ( product_price ) from products )	SELECT product_name FROM Products WHERE product_price  >  (SELECT avg(product_price) FROM Products)
0	select product_name from products where product_price > ( select avg ( product_price ) from products where product_type_code = 'Hardware' )	SELECT product_name FROM Products WHERE product_type_code  =  "Hardware" AND product_price  >  (SELECT avg(product_price) FROM Products WHERE product_type_code  =  "Hardware")
0	select product_name from products where product_price > ( select avg ( product_price ) from products where product_type_code = 'Hardware' )	SELECT product_name FROM Products WHERE product_type_code  =  "Hardware" AND product_price  >  (SELECT avg(product_price) FROM Products WHERE product_type_code  =  "Hardware")
0	select p.product_name from products p where p.product_type_code = 'Clothes' and p.product_price = ( select max ( product_price ) from products where product_type_code = 'Clothes' )	SELECT product_name FROM Products WHERE product_type_code  =  "Clothes" ORDER BY product_price DESC LIMIT 1
0	select product_name from products where product_type_code = 'Clothes' and product_price = ( select max ( product_price ) from products where product_type_code = 'Clothes' )	SELECT product_name FROM Products WHERE product_type_code  =  "Clothes" ORDER BY product_price DESC LIMIT 1
0	select p.product_id , p.product_name from products p where p.product_type_code = 'Hardware' and p.product_price = ( select min ( product_price ) from products where product_type_code = 'Hardware' )	SELECT product_id ,  product_name FROM Products WHERE product_type_code  =  "Hardware" ORDER BY product_price ASC LIMIT 1
0	select product_id , product_name from products where product_type_code = 'Hardware' and product_price = ( select min ( product_price ) from products where product_type_code = 'Hardware' ) and product_name = 'Hardware'	SELECT product_id ,  product_name FROM Products WHERE product_type_code  =  "Hardware" ORDER BY product_price ASC LIMIT 1
1	select product_name from products order by product_price desc	SELECT product_name FROM Products ORDER BY product_price DESC
1	select product_name from products order by product_price desc	SELECT product_name FROM Products ORDER BY product_price DESC
0	select product_price from products where product_type_code = 'Hardware' order by product_price asc	SELECT product_name FROM Products WHERE product_type_code  =  "Hardware" ORDER BY product_price ASC
1	select product_name from products where product_type_code = 'Hardware' order by product_price asc	SELECT product_name FROM Products WHERE product_type_code  =  "Hardware" ORDER BY product_price ASC
1	select product_type_code , count ( * ) from products group by product_type_code	SELECT product_type_code ,  count(*) FROM Products GROUP BY product_type_code
1	select product_type_code , count ( * ) from products group by product_type_code	SELECT product_type_code ,  count(*) FROM Products GROUP BY product_type_code
1	select product_type_code , avg ( product_price ) from products group by product_type_code	SELECT product_type_code ,  avg(product_price) FROM Products GROUP BY product_type_code
1	select product_type_code , avg ( product_price ) from products group by product_type_code	SELECT product_type_code ,  avg(product_price) FROM Products GROUP BY product_type_code
1	select product_type_code from products group by product_type_code having count ( * ) >= 2	SELECT product_type_code FROM Products GROUP BY product_type_code HAVING count(*)  >=  2
1	select product_type_code from products group by product_type_code having count ( * ) >= 2	SELECT product_type_code FROM Products GROUP BY product_type_code HAVING count(*)  >=  2
0	select product_type_code from products group by product_type_code having count ( * ) = ( select max ( cnt ) from ( select count ( * ) as cnt from products group by product_type_code ) )	SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) DESC LIMIT 1
1	select product_type_code from products group by product_type_code order by count ( * ) desc limit 1	SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) DESC LIMIT 1
1	select count ( * ) from customers	SELECT count(*) FROM Customers
1	select count ( * ) from customers	SELECT count(*) FROM Customers
1	select customer_id , customer_name from customers	SELECT customer_id ,  customer_name FROM Customers
1	select customer_id , customer_name from customers	SELECT customer_id ,  customer_name FROM Customers
1	select customer_address , customer_phone , customer_email from customers where customer_name = 'Jeromy'	SELECT customer_address ,  customer_phone ,  customer_email FROM Customers WHERE customer_name  =  "Jeromy"
1	select customer_address , customer_phone , customer_email from customers where customer_name = 'Jeromy'	SELECT customer_address ,  customer_phone ,  customer_email FROM Customers WHERE customer_name  =  "Jeromy"
1	select payment_method_code , count ( * ) from customers group by payment_method_code	SELECT payment_method_code ,  count(*) FROM Customers GROUP BY payment_method_code
1	select payment_method_code , count ( * ) from customers group by payment_method_code	SELECT payment_method_code ,  count(*) FROM Customers GROUP BY payment_method_code
0	select payment_method_code from customers group by payment_method_code having count ( customer_id ) = ( select max ( count ) from ( select count ( customer_id ) as count from customers group by payment_method_code ) )	SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1
1	select payment_method_code from customers group by payment_method_code order by count ( * ) desc limit 1	SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1
0	sql placeholder	SELECT customer_name FROM Customers WHERE payment_method_code  =  ( SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) ASC LIMIT 1)
1	select customer_name from customers where payment_method_code = ( select payment_method_code from customers group by payment_method_code order by count ( * ) asc limit 1 )	SELECT customer_name FROM Customers WHERE payment_method_code  =  ( SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) ASC LIMIT 1)
1	select payment_method_code , customer_number from customers where customer_name = 'Jeromy'	SELECT payment_method_code ,  customer_number FROM Customers WHERE customer_name  =  "Jeromy"
1	select payment_method_code , customer_number from customers where customer_name = 'Jeromy'	SELECT payment_method_code ,  customer_number FROM Customers WHERE customer_name  =  "Jeromy"
1	select distinct payment_method_code from customers	SELECT DISTINCT payment_method_code FROM Customers
1	select distinct payment_method_code from customers	SELECT DISTINCT payment_method_code FROM Customers
1	select product_id , product_type_code from products order by product_name asc	SELECT product_id ,  product_type_code FROM Products ORDER BY product_name
1	select product_id , product_type_code from products order by product_name asc	SELECT product_id ,  product_type_code FROM Products ORDER BY product_name
1	select product_type_code from products group by product_type_code order by count ( * ) asc limit 1	SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) ASC LIMIT 1
1	select product_type_code from products group by product_type_code order by count ( * ) asc limit 1	SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) ASC LIMIT 1
1	select count ( * ) from customer_orders	SELECT count(*) FROM Customer_orders
1	select count ( * ) from customer_orders	SELECT count(*) FROM Customer_orders
1	select customer_orders.order_id , customer_orders.order_date , customer_orders.order_status_code from customers join customer_orders on customers.customer_id = customer_orders.customer_id where customers.customer_name = 'Jeromy'	SELECT order_id ,  order_date ,  order_status_code FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_name  =  "Jeromy"
0	select order_id , order_date , order_status_code from customer_orders where customer_id = 'Jeromy'	SELECT order_id ,  order_date ,  order_status_code FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_name  =  "Jeromy"
0	select customers.customer_name , customers.customer_id , count ( customer_orders.order_id ) as orders_count from customers left join customer_orders on customers.customer_id = customer_orders.customer_id group by customers.customer_id	SELECT T2.customer_name ,  T1.customer_id ,  count(*) FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id
1	select customers.customer_name , customers.customer_id , count ( * ) as ordercount from customers join customer_orders on customers.customer_id = customer_orders.customer_id group by customers.customer_id	SELECT T2.customer_name ,  T1.customer_id ,  count(*) FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id
1	select customers.customer_id , customers.customer_name , customers.customer_phone , customers.customer_email from customers join customer_orders on customers.customer_id = customer_orders.customer_id group by customers.customer_id order by count ( * ) desc limit 1	SELECT T1.customer_id ,  T2.customer_name ,  T2.customer_phone ,  T2.customer_email FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1
1	select customers.customer_id , customers.customer_name , customers.customer_phone , customers.customer_email from customers join customer_orders on customers.customer_id = customer_orders.customer_id group by customers.customer_id order by count ( * ) desc limit 1	SELECT T1.customer_id ,  T2.customer_name ,  T2.customer_phone ,  T2.customer_email FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1
1	select order_status_code , count ( * ) from customer_orders group by order_status_code	SELECT order_status_code ,  count(*) FROM Customer_orders GROUP BY order_status_code
1	select order_status_code , count ( * ) from customer_orders group by order_status_code	SELECT order_status_code ,  count(*) FROM Customer_orders GROUP BY order_status_code
1	select order_status_code from customer_orders group by order_status_code order by count ( * ) desc limit 1	SELECT order_status_code FROM Customer_orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1
0	with ordercounts as ( select order_status_code , count ( * ) as cnt from customer_orders group by order_status_code ) select order_status_code from ordercounts where cnt = ( select max ( cnt ) from ordercounts )	SELECT order_status_code FROM Customer_orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1
1	select count ( * ) from customers where customer_id not in ( select customer_id from customer_orders )	SELECT count(*) FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Customer_orders)
1	select count ( * ) from customers where customer_id not in ( select customer_id from customer_orders )	SELECT count(*) FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Customer_orders)
0	select product_name from products where product_id not in ( select product_id from order_items )	SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS t1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id
0	select product_name from products where product_id not in ( select product_id from order_items )	SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS t1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id
0	select count ( * ) from order_items join products on order_items.product_id = products.product_id where products.product_name = 'Monitor'	SELECT sum(order_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name  =  "Monitor"
0	select count ( * ) from order_items join products on order_items.product_id = products.product_id where products.product_name = 'Monitor'	SELECT sum(order_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name  =  "Monitor"
1	select count ( distinct customer_orders.customer_id ) from customer_orders join order_items on customer_orders.order_id = order_items.order_id join products on order_items.product_id = products.product_id where products.product_name = 'Monitor'	SELECT count(DISTINCT T3.customer_id) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Customer_orders AS T3 ON T3.order_id  =  T1.order_id WHERE T2.product_name  =  "Monitor"
1	select count ( distinct customers.customer_id ) from customers join customer_orders on customers.customer_id = customer_orders.customer_id join order_items on customer_orders.order_id = order_items.order_id join products on order_items.product_id = products.product_id where products.product_name = 'Monitor'	SELECT count(DISTINCT T3.customer_id) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Customer_orders AS T3 ON T3.order_id  =  T1.order_id WHERE T2.product_name  =  "Monitor"
1	select count ( distinct customer_id ) from customer_orders	SELECT count(DISTINCT customer_id) FROM Customer_orders
1	select count ( distinct customer_id ) from customer_orders	SELECT count(DISTINCT customer_id) FROM Customer_orders
1	select customer_id from customers except select customer_id from customer_orders	SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Customer_orders
1	select customer_id from customers where customer_id not in ( select customer_id from customer_orders )	SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Customer_orders
0	select distinct co.order_date , co.order_id from customer_orders co join order_items oi on co.order_id = oi.order_id where oi.order_quantity > 6 or co.order_id in ( select order_id from order_items group by order_id having count ( distinct product_id ) > 3 )	SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id WHERE T2.order_quantity  >  6 UNION SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  3;
0	select customer_orders.order_id , customer_orders.order_date from customer_orders join order_items on customer_orders.order_id = order_items.order_id where order_items.order_quantity > 6 or order_items.product_id > 3	SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id WHERE T2.order_quantity  >  6 UNION SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  3;
1	select count ( * ) from building	SELECT count(*) FROM building
1	select count ( * ) from building	SELECT count(*) FROM building
1	select name from building order by number_of_stories asc	SELECT Name FROM building ORDER BY Number_of_Stories ASC
1	select name from building order by number_of_stories asc	SELECT Name FROM building ORDER BY Number_of_Stories ASC
1	select address from building order by completed_year desc	SELECT Address FROM building ORDER BY Completed_Year DESC
1	select address from building order by completed_year desc	SELECT Address FROM building ORDER BY Completed_Year DESC
1	select max ( number_of_stories ) from building where completed_year != 1980	SELECT max(Number_of_Stories) FROM building WHERE Completed_Year != "1980"
1	select max ( number_of_stories ) from building where completed_year != 1980	SELECT max(Number_of_Stories) FROM building WHERE Completed_Year != "1980"
1	select avg ( population ) from region	SELECT avg(Population) FROM region
1	select avg ( population ) from region	SELECT avg(Population) FROM region
1	select name from region order by name asc	SELECT Name FROM region ORDER BY Name ASC
1	select name from region order by name asc	SELECT Name FROM region ORDER BY Name ASC
1	select capital from region where area > 10000	SELECT Capital FROM region WHERE Area  >  10000
1	select capital from region where area > 10000	SELECT Capital FROM region WHERE Area  >  10000
0	select capital from region where population = ( select max ( population ) from region )	SELECT Capital FROM region ORDER BY Population DESC LIMIT 1
0	select capital from region where population = ( select max ( population ) from region )	SELECT Capital FROM region ORDER BY Population DESC LIMIT 1
1	select name from region order by area desc limit 5	SELECT Name FROM region ORDER BY Area DESC LIMIT 5
1	select name from region order by area desc limit 5	SELECT Name FROM region ORDER BY Area DESC LIMIT 5
1	select building.name , region.name from building join region on building.region_id = region.region_id	SELECT T1.Name ,  T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID
1	select building.name , region.name from building join region on building.region_id = region.region_id	SELECT T1.Name ,  T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID
1	select region.name from region join building on region.region_id = building.region_id group by region.region_id having count ( * ) > 1	SELECT T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID HAVING COUNT(*)  >  1
1	select region.name from region join building on region.region_id = building.region_id group by region.region_id having count ( * ) > 1	SELECT T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID HAVING COUNT(*)  >  1
1	select region.capital from region join building on region.region_id = building.region_id group by region.region_id order by count ( * ) desc limit 1	SELECT T2.capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID ORDER BY COUNT(*) DESC LIMIT 1
1	select region.capital from building join region on building.region_id = region.region_id group by region.region_id order by count ( * ) desc limit 1	SELECT T2.capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID ORDER BY COUNT(*) DESC LIMIT 1
1	select building.address , region.capital from building join region on building.region_id = region.region_id	SELECT T1.Address ,  T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID
0	select building.address , region.name from building join region on building.region_id = region.region_id	SELECT T1.Address ,  T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID
1	select building.number_of_stories from building join region on building.region_id = region.region_id where region.name = 'Abruzzo'	SELECT T1.Number_of_Stories FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID WHERE T2.Name  =  "Abruzzo"
1	select building.number_of_stories from building join region on building.region_id = region.region_id where region.name = 'Abruzzo'	SELECT T1.Number_of_Stories FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID WHERE T2.Name  =  "Abruzzo"
1	select completed_year , count ( * ) from building group by completed_year	SELECT Completed_Year ,  COUNT(*) FROM building GROUP BY Completed_Year
1	select completed_year , count ( * ) from building group by completed_year	SELECT Completed_Year ,  COUNT(*) FROM building GROUP BY Completed_Year
1	select completed_year from building group by completed_year order by count ( * ) desc limit 1	SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1
1	select completed_year from building group by completed_year order by count ( * ) desc limit 1	SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1
1	select name from region where region_id not in ( select region_id from building )	SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)
1	select name from region where region_id not in ( select region_id from building )	SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)
1	select completed_year from building where number_of_stories > 20 intersect select completed_year from building where number_of_stories < 15	SELECT Completed_Year FROM building WHERE Number_of_Stories  >  20 INTERSECT SELECT Completed_Year FROM building WHERE Number_of_Stories  <  15
1	select completed_year from building where number_of_stories > 20 intersect select completed_year from building where number_of_stories < 15	SELECT Completed_Year FROM building WHERE Number_of_Stories  >  20 INTERSECT SELECT Completed_Year FROM building WHERE Number_of_Stories  <  15
1	select distinct address from building	SELECT DISTINCT Address FROM building
1	select distinct address from building	SELECT DISTINCT Address FROM building
1	select completed_year from building order by number_of_stories desc	SELECT Completed_Year FROM building ORDER BY Number_of_Stories DESC
0	select completed_year from building order by number_of_stories desc , completed_year	SELECT Completed_Year FROM building ORDER BY Number_of_Stories DESC
1	select channel_details from channels order by channel_details asc	select channel_details from channels order by channel_details
1	select channel_details from channels order by channel_details asc	select channel_details from channels order by channel_details
1	select count ( * ) from services	SELECT count(*) FROM services
1	select count ( * ) from services	SELECT count(*) FROM services
1	select analytical_layer_type_code from analytical_layer group by analytical_layer_type_code order by count ( * ) desc limit 1	SELECT analytical_layer_type_code FROM analytical_layer GROUP BY analytical_layer_type_code ORDER BY count(*) DESC LIMIT 1
0	select analytical_layer_type_code from analytical_layer group by analytical_layer_type_code having count ( analytical_layer_type_code ) = ( select max ( cnt ) from ( select count ( * ) as cnt from analytical_layer group by analytical_layer_type_code ) tmp )	SELECT analytical_layer_type_code FROM analytical_layer GROUP BY analytical_layer_type_code ORDER BY count(*) DESC LIMIT 1
1	select services.service_details from customers join customers_and_services on customers.customer_id = customers_and_services.customer_id join services on customers_and_services.service_id = services.service_id where customers.customer_details = 'Hardy Kutch'	SELECT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t1.customer_details  =  "Hardy Kutch"
1	select services.service_details from customers join customers_and_services on customers.customer_id = customers_and_services.customer_id join services on customers_and_services.service_id = services.service_id where customers.customer_details = 'Hardy Kutch'	SELECT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t1.customer_details  =  "Hardy Kutch"
0	select services.service_details from customer_interactions join services on customer_interactions.service_id = services.service_id group by customer_interactions.service_id having count ( * ) > 3	select t1.service_details from services as t1 join customers_and_services as t2 on t1.service_id  =  t2.service_id group by t1.service_details having count(*)  >  3
0	select service_details from services where service_id in ( select service_id from customers_and_services group by service_id having count ( customer_id ) > 3 )	SELECT t1.service_details FROM services AS t1 JOIN customers_and_services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_details HAVING count(*)  >  3
0	select customer_details from customers where customer_id in ( select customer_id from customers_and_services group by customer_id having count ( customer_id ) = ( select max ( count ) from ( select count ( customer_id ) as count from customers_and_services group by customer_id ) ) )	SELECT t1.customer_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_details ORDER BY count(*) DESC LIMIT 1
0	select customer_details from customers where customer_id in ( select customer_id from customers_and_services group by customer_id having count ( service_id ) = ( select max ( counted ) from ( select count ( service_id ) as counted from customers_and_services group by customer_id ) ) )	select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1
0	select customer_details from customers where customer_id in ( select customer_id from customers_and_services group by customer_id having count ( distinct customers_and_services_id ) = ( select max ( cnt ) from ( select count ( distinct customers_and_services_id ) as cnt from customers_and_services group by customer_id ) ) )	select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1
0	select customer_details from customers where customer_id in ( select customer_id from customers_and_services group by customer_id having count ( distinct customers_and_services_id ) = ( select max ( cnt ) from ( select count ( distinct customers_and_services_id ) as cnt from customers_and_services group by customer_id ) ) )	select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1
0	select customer_details from customers where customer_id not in ( select customer_id from customer_interactions )	select customer_details from customers where customer_id not in (select customer_id from customers_and_services)
1	select customer_details from customers where customer_id not in ( select customer_id from customers_and_services )	select customer_details from customers where customer_id not in (select customer_id from customers_and_services)
0	select customer_details from customers where customer_id in ( select customer_id from customer_interactions group by customer_id order by count ( * ) asc limit 1 )	select distinct t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id where t2.service_id  =  (select service_id from services group by service_id order by count(*) asc limit 1)
1	select distinct customer_details from customers where customer_id in ( select customer_id from customers_and_services where service_id in ( select service_id from services group by service_id order by count ( * ) asc limit 1 ) )	select distinct t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id where t2.service_id  =  (select service_id from services group by service_id order by count(*) asc limit 1)
1	select count ( distinct customers_and_services_details ) from customers_and_services	SELECT count(DISTINCT customers_and_services_details) FROM customers_and_services
0	select count ( * ) from customers_and_services	SELECT count(DISTINCT customers_and_services_details) FROM customers_and_services
1	select customer_details from customers where customer_details like '%Kutch%'	SELECT customer_details FROM customers WHERE customer_details LIKE "%Kutch%"
1	select customer_details from customers where customer_details like '%Kutch%'	SELECT customer_details FROM customers WHERE customer_details LIKE "%Kutch%"
0	select service_details from services where service_id in ( select service_id from customer_interactions where customer_id in ( select customer_id from customers where customer_details = 'Hardy Kutch' ) )	SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  "Hardy Kutch" OR t4.services_and_channels_details  =  "good"
0	select service_details from services where service_id in ( select service_id from customer_interactions where customer_id in ( select customer_id from customers where customer_details = 'Hardy Kutch' ) or service_id in ( select service_id from customer_interactions where customer_id = 'Hardy Kutch' ) )	SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  "Hardy Kutch" OR t4.services_and_channels_details  =  "good"
0	select service_details from services where service_id in ( select service_id from customer_interactions where customer_id in ( select customer_id from customers where customer_details = 'Hardy Kutch' ) and status_code = 'bad' )	SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  "Hardy Kutch" AND t4.services_and_channels_details  =  "bad"
0	sql placeholder	SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  "Hardy Kutch" AND t4.services_and_channels_details  =  "bad"
0	select services.service_details from services join customer_interactions on services.service_id = customer_interactions.service_id join channels on customer_interactions.channel_id = channels.channel_id where channels.channel_details = '' and customer_interactions.customer_id = 1	select distinct t1.service_details from services as t1 join customer_interactions as t2 on t1.service_id  =  t2.service_id join channels as t3 on t2.channel_id  =  t3.channel_id where t3.channel_details  =  "15 ij"
0	select services.service_details from services join customer_interactions on services.service_id = customer_interactions.service_id join channels on customer_interactions.channel_id = channels.channel_id where channels.channel_details = '15 ij'	SELECT DISTINCT t1.service_details FROM services AS t1 JOIN customer_interactions AS t2 ON t1.service_id  =  t2.service_id JOIN channels AS t3 ON t2.channel_id  =  t3.channel_id WHERE t3.channel_details  =  "15 ij"
1	select customer_details from customers where customer_id in ( select customer_id from customer_interactions where status_code = 'Stuck' intersect select customer_id from customer_interactions where services_and_channels_details = 'Bad' )	select t1.customer_details from customers as t1 join customer_interactions as t2 on t1.customer_id  =  t2.customer_id where t2.status_code  =  "stuck" and services_and_channels_details  =  "bad"
0	select customer_details from customers where customer_id in ( select customer_id from customer_interactions where status_code = 'Stuck' intersect select customer_id from customer_interactions where services_and_channels_details = 'bad' )	SELECT t1.customer_details FROM customers AS t1 JOIN customer_interactions AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.status_code  =  "Stuck" AND services_and_channels_details  =  "bad"
1	select count ( * ) from integration_platform where integration_platform_details = 'Success'	SELECT count(*) FROM integration_platform WHERE integration_platform_details  =  "Success"
1	select count ( * ) from integration_platform where integration_platform_details = 'Success'	SELECT count(*) FROM integration_platform WHERE integration_platform_details  =  "Success"
1	select customer_details from customers where customer_id in ( select customer_id from customer_interactions join integration_platform on customer_interactions.customer_interaction_id = integration_platform.customer_interaction_id where integration_platform.integration_platform_details = 'Failed' )	select distinct t1.customer_details from customers as t1 join customer_interactions as t2 on t1.customer_id  =  t2.customer_id join integration_platform as t3 where t3.integration_platform_details  =  "fail"
0	select c.customer_details from customers c where exists ( select 1 from customer_interactions ci join integration_platform ip on ci.customer_interaction_id = ip.customer_interaction_id where ci.customer_id = c.customer_id and ip.integration_platform_details = 'Fail' )	SELECT DISTINCT t1.customer_details FROM customers AS t1 JOIN customer_interactions AS t2 ON t1.customer_id  =  t2.customer_id JOIN integration_platform AS t3 WHERE t3.integration_platform_details  =  "Fail"
0	select service_details from services where service_id not in ( select service_id from customers_and_services )	select service_details from services except select t2.service_details from customers_and_services as t1 join services as t2 on t1.service_id  =  t2.service_id
0	select service_details from services where service_id not in ( select service_id from customers_and_services )	select service_details from services except select t2.service_details from customers_and_services as t1 join services as t2 on t1.service_id  =  t2.service_id
1	select analytical_layer_type_code , count ( * ) from analytical_layer group by analytical_layer_type_code	SELECT analytical_layer_type_code ,  count(*) FROM analytical_layer GROUP BY analytical_layer_type_code
1	select analytical_layer_type_code , count ( * ) from analytical_layer group by analytical_layer_type_code	SELECT analytical_layer_type_code ,  count(*) FROM analytical_layer GROUP BY analytical_layer_type_code
0	select s.service_details from services s where exists ( select 1 from customers_and_services cs where cs.service_id = s.service_id and cs.customers_and_services_details = 'Unsatisfied' )	select distinct t1.service_details from services as t1 join customers_and_services as t2 on t1.service_id  =  t2.service_id where t2.customers_and_services_details  =  "unsatisfied"
0	select service_details from services where service_id in ( select service_id from customers_and_services where customers_and_services_details = 'unsatisfied' )	SELECT DISTINCT t1.service_details FROM services AS t1 JOIN customers_and_services AS t2 ON t1.service_id  =  t2.service_id WHERE t2.customers_and_services_details  =  "Unsatisfied"
1	select count ( * ) from vehicles	SELECT count(*) FROM vehicles
1	select count ( * ) from vehicles	SELECT count(*) FROM vehicles
1	select name from vehicles order by model_year desc	SELECT name FROM vehicles ORDER BY model_year DESC
1	select name from vehicles order by model_year desc	SELECT name FROM vehicles ORDER BY model_year DESC
1	select distinct type_of_powertrain from vehicles	SELECT DISTINCT type_of_powertrain FROM vehicles
1	select distinct type_of_powertrain from vehicles	SELECT DISTINCT type_of_powertrain FROM vehicles
1	select name , type_of_powertrain , annual_fuel_cost from vehicles where model_year = 2013 or model_year = 2014	SELECT name ,  type_of_powertrain ,  annual_fuel_cost FROM vehicles WHERE model_year  =  2013 OR model_year  =  2014
1	select name , type_of_powertrain , annual_fuel_cost from vehicles where model_year = 2013 or model_year = 2014	SELECT name ,  type_of_powertrain ,  annual_fuel_cost FROM vehicles WHERE model_year  =  2013 OR model_year  =  2014
1	select type_of_powertrain from vehicles where model_year = 2014 intersect select type_of_powertrain from vehicles where model_year = 2013	SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2014 INTERSECT SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2013
1	select type_of_powertrain from vehicles where model_year = 2013 intersect select type_of_powertrain from vehicles where model_year = 2014	SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2014 INTERSECT SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2013
1	select type_of_powertrain , count ( * ) from vehicles group by type_of_powertrain	SELECT type_of_powertrain ,  count(*) FROM vehicles GROUP BY type_of_powertrain
1	select type_of_powertrain , count ( * ) from vehicles group by type_of_powertrain	SELECT type_of_powertrain ,  count(*) FROM vehicles GROUP BY type_of_powertrain
0	select type_of_powertrain from vehicles group by type_of_powertrain having count ( * ) = ( select max ( cnt ) from ( select count ( * ) as cnt from vehicles group by type_of_powertrain ) )	SELECT type_of_powertrain FROM vehicles GROUP BY type_of_powertrain ORDER BY count(*) DESC LIMIT 1
0	select type_of_powertrain from vehicles group by type_of_powertrain having count ( type_of_powertrain ) = ( select max ( cnt ) from ( select count ( type_of_powertrain ) as cnt from vehicles group by type_of_powertrain ) )	SELECT type_of_powertrain FROM vehicles GROUP BY type_of_powertrain ORDER BY count(*) DESC LIMIT 1
1	select min ( annual_fuel_cost ) , max ( annual_fuel_cost ) , avg ( annual_fuel_cost ) from vehicles	SELECT min(annual_fuel_cost) ,  max(annual_fuel_cost) ,  avg(annual_fuel_cost) FROM vehicles
1	select min ( annual_fuel_cost ) , max ( annual_fuel_cost ) , avg ( annual_fuel_cost ) from vehicles	SELECT min(annual_fuel_cost) ,  max(annual_fuel_cost) ,  avg(annual_fuel_cost) FROM vehicles
0	select name , model_year from vehicles where city_fuel_economy_rate < ( select min ( city_fuel_economy_rate ) from vehicles )	SELECT name ,  model_year FROM vehicles WHERE city_fuel_economy_rate  <=  highway_fuel_economy_rate
0	select name , model_year from vehicles where city_fuel_economy_rate <= ( select min ( city_fuel_economy_rate ) from vehicles )	SELECT name ,  model_year FROM vehicles WHERE city_fuel_economy_rate  <=  highway_fuel_economy_rate
1	select type_of_powertrain , avg ( annual_fuel_cost ) from vehicles group by type_of_powertrain having count ( * ) >= 2	SELECT type_of_powertrain ,  avg(annual_fuel_cost) FROM vehicles GROUP BY type_of_powertrain HAVING count(*)  >=  2
1	select type_of_powertrain , avg ( annual_fuel_cost ) from vehicles group by type_of_powertrain having count ( * ) >= 2	SELECT type_of_powertrain ,  avg(annual_fuel_cost) FROM vehicles GROUP BY type_of_powertrain HAVING count(*)  >=  2
1	select name , age , membership_credit from customers	SELECT name ,  age ,  membership_credit FROM customers
1	select name , age , membership_credit from customers	SELECT name ,  age ,  membership_credit FROM customers
0	select name , age from customers where membership_credit = ( select max ( membership_credit ) from customers )	SELECT name ,  age FROM customers ORDER BY membership_credit DESC LIMIT 1
0	select name , age from customers where membership_credit = ( select max ( membership_credit ) from customers )	SELECT name ,  age FROM customers ORDER BY membership_credit DESC LIMIT 1
1	select avg ( age ) from customers where membership_credit > ( select avg ( membership_credit ) from customers )	SELECT avg(age) FROM customers WHERE membership_credit  >  (SELECT avg(membership_credit) FROM customers)
0	select avg ( age ) from customers where membership_credit > ( select avg ( age ) from customers )	SELECT avg(age) FROM customers WHERE membership_credit  >  (SELECT avg(membership_credit) FROM customers)
1	select * from discount	SELECT * FROM discount
1	select * from discount	SELECT * FROM discount
0	select vehicles.name , renting_history.total_hours from renting_history join vehicles on renting_history.vehicles_id = vehicles.id	SELECT T2.name ,  sum(T1.total_hours) FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id
0	select vehicles.name , renting_history.total_hours from vehicles join renting_history on vehicles.id = renting_history.vehicles_id	SELECT T2.name ,  sum(T1.total_hours) FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id
1	select name from vehicles where id not in ( select vehicles_id from renting_history )	SELECT name FROM vehicles WHERE id NOT IN (SELECT vehicles_id FROM renting_history)
1	select name from vehicles where id not in ( select vehicles_id from renting_history )	SELECT name FROM vehicles WHERE id NOT IN (SELECT vehicles_id FROM renting_history)
1	select customers.name from customers join renting_history on customers.id = renting_history.customer_id group by renting_history.customer_id having count ( * ) >= 2	SELECT T2.name FROM renting_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.id GROUP BY T2.id HAVING count(*)  >=  2
1	select customers.name from customers join renting_history on customers.id = renting_history.customer_id group by renting_history.customer_id having count ( * ) >= 2	SELECT T2.name FROM renting_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.id GROUP BY T2.id HAVING count(*)  >=  2
0	select name , model_year from vehicles where id in ( select vehicles_id from renting_history group by vehicles_id having count ( customer_id ) = ( select max ( cnt ) from ( select count ( customer_id ) as cnt from renting_history group by vehicles_id ) ) )	SELECT T2.name ,  T2.model_year FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
1	select vehicles.name , vehicles.model_year from vehicles join renting_history on vehicles.id = renting_history.vehicles_id group by renting_history.vehicles_id order by count ( * ) desc limit 1	SELECT T2.name ,  T2.model_year FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
0	select vehicles.name from vehicles join renting_history on vehicles.id = renting_history.vehicles_id order by renting_history.total_hours desc	SELECT T2.name FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.total_hours) DESC
0	select vehicles.name from vehicles join renting_history on vehicles.id = renting_history.vehicles_id order by renting_history.total_hours desc	SELECT T2.name FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.total_hours) DESC
1	select discount.name from renting_history join discount on renting_history.discount_id = discount.id group by renting_history.discount_id order by count ( * ) desc limit 1	SELECT T2.name FROM renting_history AS T1 JOIN discount AS T2 ON T1.discount_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
1	select discount.name from renting_history join discount on renting_history.discount_id = discount.id group by renting_history.discount_id order by count ( * ) desc limit 1	SELECT T2.name FROM renting_history AS T1 JOIN discount AS T2 ON T1.discount_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
1	select name , type_of_powertrain from vehicles where id in ( select vehicles_id from renting_history group by vehicles_id having sum ( total_hours ) > 30 )	SELECT T2.name ,  T2.Type_of_powertrain FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T1.vehicles_id HAVING sum(T1.total_hours)  >  30
1	select name , type_of_powertrain from vehicles where id in ( select vehicles_id from renting_history group by vehicles_id having sum ( total_hours ) > 30 )	SELECT T2.name ,  T2.Type_of_powertrain FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T1.vehicles_id HAVING sum(T1.total_hours)  >  30
1	select avg ( city_fuel_economy_rate ) , avg ( highway_fuel_economy_rate ) , type_of_powertrain from vehicles group by type_of_powertrain	SELECT avg(City_fuel_economy_rate) ,  avg(Highway_fuel_economy_rate) , Type_of_powertrain FROM vehicles GROUP BY Type_of_powertrain
1	select avg ( city_fuel_economy_rate ) , avg ( highway_fuel_economy_rate ) , type_of_powertrain from vehicles group by type_of_powertrain	SELECT avg(City_fuel_economy_rate) ,  avg(Highway_fuel_economy_rate) , Type_of_powertrain FROM vehicles GROUP BY Type_of_powertrain
1	select avg ( amount_of_loan ) from student_loans	SELECT avg(amount_of_loan) FROM Student_Loans
1	select avg ( amount_of_loan ) from student_loans	SELECT avg(amount_of_loan) FROM Student_Loans
0	select students.bio_data , students.student_id from classes join students on classes.student_id = students.student_id group by students.student_id having count ( * ) >= 2 intersect select students.bio_data , students.student_id from students join classes on students.student_id = classes.student_id group by students.student_id having count ( * ) < 2	SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  >=  2 UNION SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Detention AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  <  2
0	select students.bio_data , students.student_id from classes join students on classes.student_id = students.student_id group by students.student_id having count ( * ) >= 2 union select students.bio_data , students.student_id from students join classes on students.student_id = classes.student_id group by students.student_id having count ( * ) < 2	SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  >=  2 UNION SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Detention AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  <  2
1	select teachers.teacher_details from teachers join classes on teachers.teacher_id = classes.teacher_id where classes.class_details like '%data%' except select teachers.teacher_details from teachers join classes on teachers.teacher_id = classes.teacher_id where classes.class_details like '%net%'	SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE '%data%' EXCEPT SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE 'net%'
0	select t.teacher_details from teachers t where exists ( select 1 from classes c where c.teacher_id = t.teacher_id and c.class_details like '%data%' ) and not exists ( select 1 from classes c2 where c2.teacher_id = t.teacher_id and c2.class_details like '%net%' )	SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE '%data%' EXCEPT SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE 'net%'
0	select bio_data from students where student_id not in ( select student_id from detention ) or student_id not in ( select student_id from student_loans )	select bio_data from students where student_id not in (select t1.student_id from students as t1 join detention as t2 on t1.student_id  =  t2.student_id union select t1.student_id from students as t1 join student_loans as t2 on t1.student_id  =  t2.student_id)
0	select bio_data from students where student_id not in ( select student_id from detention ) or student_id not in ( select student_id from student_loans )	select bio_data from students where student_id not in (select t1.student_id from students as t1 join detention as t2 on t1.student_id  =  t2.student_id union select t1.student_id from students as t1 join student_loans as t2 on t1.student_id  =  t2.student_id)
0	select student_loans.amount_of_loan , student_loans.date_of_loan from student_loans join achievements on student_loans.student_id = achievements.student_id group by achievements.student_id having count ( * ) >= 2	SELECT amount_of_loan ,  date_of_loan FROM Student_Loans WHERE student_id IN ( SELECT student_id FROM Achievements GROUP BY student_id HAVING count(*)  >=  2 )
0	select student_loans.amount_of_loan , student_loans.date_of_loan from student_loans join achievements on student_loans.student_id = achievements.student_id group by achievements.student_id having count ( * ) >= 2	SELECT amount_of_loan ,  date_of_loan FROM Student_Loans WHERE student_id IN ( SELECT student_id FROM Achievements GROUP BY student_id HAVING count(*)  >=  2 )
1	select teachers.teacher_details , teachers.teacher_id from classes join teachers on classes.teacher_id = teachers.teacher_id group by teachers.teacher_id order by count ( * ) desc limit 1	SELECT T1.teacher_details ,  T1.teacher_id FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1
1	select teachers.teacher_details , teachers.teacher_id from classes join teachers on classes.teacher_id = teachers.teacher_id group by teachers.teacher_id order by count ( * ) desc limit 1	SELECT T1.teacher_details ,  T1.teacher_id FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1
1	select distinct ref_detention_type.detention_type_description from ref_detention_type join detention on ref_detention_type.detention_type_code = detention.detention_type_code	SELECT distinct(T1.detention_type_description) FROM Ref_Detention_Type AS T1 JOIN Detention AS T2 ON T1.detention_type_code  =  T2.detention_type_code
1	select distinct ref_detention_type.detention_type_description from ref_detention_type join detention on ref_detention_type.detention_type_code = detention.detention_type_code	SELECT distinct(T1.detention_type_description) FROM Ref_Detention_Type AS T1 JOIN Detention AS T2 ON T1.detention_type_code  =  T2.detention_type_code
0	select students.student_details , ref_address_types.address_type_description from students join students_addresses on students.student_id = students_addresses.student_id join addresses on students_addresses.address_id = addresses.address_id join ref_address_types on students_addresses.address_type_code = ref_address_types.address_type_code	SELECT DISTINCT T1.student_details ,  T3.address_type_description FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Address_Types AS T3 ON T2.address_type_code  =  T3.address_type_code
0	select students.student_details , ref_address_types.address_type_description from students join students_addresses on students.student_id = students_addresses.student_id join addresses on students_addresses.address_id = addresses.address_id join ref_address_types on students_addresses.address_type_code = ref_address_types.address_type_code	SELECT DISTINCT T1.student_details ,  T3.address_type_description FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Address_Types AS T3 ON T2.address_type_code  =  T3.address_type_code
1	select addresses.address_details , students.bio_data from addresses join students_addresses on addresses.address_id = students_addresses.address_id join students on students_addresses.student_id = students.student_id	SELECT T1.address_details ,  T3.bio_data FROM Addresses AS T1 JOIN Students_Addresses AS T2 ON T1.address_id  =  T2.address_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id
1	select addresses.address_details , students.bio_data from addresses join students_addresses on addresses.address_id = students_addresses.address_id join students on students_addresses.student_id = students.student_id	SELECT T1.address_details ,  T3.bio_data FROM Addresses AS T1 JOIN Students_Addresses AS T2 ON T1.address_id  =  T2.address_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id
1	select students.bio_data , transcripts.date_of_transcript from students join transcripts on students.student_id = transcripts.student_id	SELECT T1.bio_data ,  T2.date_of_transcript FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id  =  T2.student_id
1	select students.bio_data , transcripts.date_of_transcript from students join transcripts on students.student_id = transcripts.student_id	SELECT T1.bio_data ,  T2.date_of_transcript FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id  =  T2.student_id
0	select student_id , behaviour_monitoring_details from behaviour_monitoring group by student_id order by count ( * ) desc limit 1	SELECT count(DISTINCT student_id) ,  behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1
0	select behaviour_monitoring_details , count ( * ) from behaviour_monitoring group by behaviour_monitoring_details having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from behaviour_monitoring group by behaviour_monitoring_details ) )	SELECT count(DISTINCT student_id) ,  behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1
0	select s.bio_data , s.student_details from students s where s.student_id in ( select a.student_id from behaviour_monitoring a group by a.student_id having count ( a.behaviour_monitoring_id ) = ( select max ( cnt ) from ( select count ( * ) as cnt from behaviour_monitoring group by student_id ) ) )	SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 ) INTERSECT SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details HAVING count(*)  =  3 )
0	select s.bio_data , s.student_details from students s where s.student_id in ( select bm.student_id from behaviour_monitoring bm group by bm.student_id having count ( bm.student_id ) = ( select max ( cnt ) from ( select count ( * ) as cnt from behaviour_monitoring group by student_id ) ) )	SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 ) INTERSECT SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details HAVING count(*)  =  3 )
0	select bio_data from students where student_id = ( select student_id from behaviour_monitoring group by student_id order by count ( * ) desc limit 1 )	SELECT T1.bio_data FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 ) EXCEPT SELECT T1.bio_data FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details NOT IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 )
0	select students.bio_data from students join behaviour_monitoring on students.student_id = behaviour_monitoring.student_id group by behaviour_monitoring.student_id order by count ( * ) desc limit 1	select t1.bio_data from students as t1 join behaviour_monitoring as t2 on t1.student_id  =  t2.student_id where t2.behaviour_monitoring_details in ( select behaviour_monitoring_details from behaviour_monitoring group by behaviour_monitoring_details order by count(*) desc limit 1 ) except select t1.bio_data from students as t1 join behaviour_monitoring as t2 on t1.student_id  =  t2.student_id where t2.behaviour_monitoring_details not in ( select behaviour_monitoring_details from behaviour_monitoring group by behaviour_monitoring_details order by count(*) desc limit 1 )
1	select students.bio_data , student_events.event_date from student_events join students on student_events.student_id = students.student_id	SELECT T1.bio_data ,  T2.event_date FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id
1	select students.bio_data , student_events.event_date from students join student_events on students.student_id = student_events.student_id	SELECT T1.bio_data ,  T2.event_date FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id
0	select count ( distinct student_id ) , ref_event_types.event_type_description from student_events join ref_event_types on student_events.event_type_code = ref_event_types.event_type_code group by ref_event_types.event_type_code order by count ( * ) desc limit 1	SELECT count(*) ,  T2.event_type_code ,  T3.event_type_description FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Event_Types AS T3 ON T2.event_type_code  =  T3.event_type_code GROUP BY T2.event_type_code ORDER BY count(*) DESC LIMIT 1
0	select event_type_code , count ( * ) from student_events group by event_type_code order by count ( * ) desc limit 1	SELECT count(*) ,  T2.event_type_code ,  T3.event_type_description FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Event_Types AS T3 ON T2.event_type_code  =  T3.event_type_code GROUP BY T2.event_type_code ORDER BY count(*) DESC LIMIT 1
1	select achievements.achievement_details , ref_achievement_type.achievement_type_description from achievements join ref_achievement_type on achievements.achievement_type_code = ref_achievement_type.achievement_type_code	SELECT T1.achievement_details ,  T2.achievement_type_description FROM Achievements AS T1 JOIN Ref_Achievement_Type AS T2 ON T1.achievement_type_code  =  T2.achievement_type_code
1	select achievements.achievement_details , ref_achievement_type.achievement_type_description from achievements join ref_achievement_type on achievements.achievement_type_code = ref_achievement_type.achievement_type_code	SELECT T1.achievement_details ,  T2.achievement_type_description FROM Achievements AS T1 JOIN Ref_Achievement_Type AS T2 ON T1.achievement_type_code  =  T2.achievement_type_code
1	select count ( distinct teacher_id ) from classes where student_id not in ( select student_id from achievements )	SELECT count(DISTINCT T1.teacher_id) FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.student_id NOT IN ( SELECT student_id FROM Achievements )
1	select count ( distinct teacher_id ) from classes where student_id not in ( select student_id from achievements )	SELECT count(DISTINCT T1.teacher_id) FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.student_id NOT IN ( SELECT student_id FROM Achievements )
1	select date_of_transcript , transcript_details from transcripts	SELECT date_of_transcript ,  transcript_details FROM Transcripts
1	select date_of_transcript , transcript_details from transcripts	SELECT date_of_transcript ,  transcript_details FROM Transcripts
1	select achievement_type_code , achievement_details , date_achievement from achievements	SELECT achievement_type_code ,  achievement_details ,  date_achievement FROM Achievements
1	select achievement_type_code , achievement_details , date_achievement from achievements	SELECT achievement_type_code ,  achievement_details ,  date_achievement FROM Achievements
1	select datetime_detention_start , datetime_detention_end from detention	SELECT datetime_detention_start ,  datetime_detention_end FROM Detention
1	select datetime_detention_start , datetime_detention_end from detention	SELECT datetime_detention_start ,  datetime_detention_end FROM Detention
1	select bio_data from students where student_details like '%Suite%'	SELECT bio_data FROM Students WHERE student_details LIKE '%Suite%'
1	select bio_data from students where student_details like '%Suite%'	SELECT bio_data FROM Students WHERE student_details LIKE '%Suite%'
0	select teacher_details from teachers where teacher_id in ( select teacher_id from classes )	SELECT T1.teacher_details ,  T3.student_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id
0	select teacher_details from teachers where teacher_id in ( select teacher_id from classes )	SELECT T1.teacher_details ,  T3.student_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id
1	select classes.teacher_id , count ( * ) from classes join teachers on classes.teacher_id = teachers.teacher_id group by classes.teacher_id order by count ( * ) desc limit 1	SELECT count(*) ,  teacher_id FROM Classes GROUP BY teacher_id ORDER BY count(*) DESC LIMIT 1
1	select classes.teacher_id , count ( * ) from classes join teachers on classes.teacher_id = teachers.teacher_id group by classes.teacher_id order by count ( * ) desc limit 1	SELECT count(*) ,  teacher_id FROM Classes GROUP BY teacher_id ORDER BY count(*) DESC LIMIT 1
0	select s.student_id , count ( c.class_id ) as total_courses from students s join classes c on s.student_id = c.student_id group by s.student_id having total_courses = ( select max ( total_courses ) from ( select count ( class_id ) as total_courses from classes group by student_id ) )	SELECT count(*) ,  student_id FROM Classes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1
1	select student_id , count ( * ) from classes group by student_id order by count ( * ) desc limit 1	SELECT count(*) ,  student_id FROM Classes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1
1	select students.student_id , students.student_details from classes join students on classes.student_id = students.student_id group by students.student_id having count ( * ) = 2	SELECT T1.student_id ,  T1.student_details FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
1	select students.student_id , students.student_details from classes join students on classes.student_id = students.student_id group by students.student_id having count ( * ) = 2	SELECT T1.student_id ,  T1.student_details FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
1	select detention.detention_type_code , ref_detention_type.detention_type_description from detention join ref_detention_type on detention.detention_type_code = ref_detention_type.detention_type_code group by detention.detention_type_code order by count ( * ) asc limit 1	SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1
1	select detention.detention_type_code , ref_detention_type.detention_type_description from detention join ref_detention_type on detention.detention_type_code = ref_detention_type.detention_type_code group by detention.detention_type_code order by count ( * ) asc limit 1	SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1
0	select s.bio_data , s.student_details from students s where exists ( select 1 from student_loans sl where sl.student_id = s.student_id and sl.amount_of_loan > ( select avg ( amount_of_loan ) from student_loans ) )	SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id WHERE T2.amount_of_loan  >  ( SELECT avg(amount_of_loan) FROM Student_Loans )
1	select students.bio_data , students.student_details from student_loans join students on student_loans.student_id = students.student_id where student_loans.amount_of_loan > ( select avg ( amount_of_loan ) from student_loans )	SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id WHERE T2.amount_of_loan  >  ( SELECT avg(amount_of_loan) FROM Student_Loans )
1	select date_of_loan from student_loans order by date_of_loan asc limit 1	SELECT date_of_loan FROM Student_Loans ORDER BY date_of_loan ASC LIMIT 1
1	select date_of_loan from student_loans order by date_of_loan asc limit 1	SELECT date_of_loan FROM Student_Loans ORDER BY date_of_loan ASC LIMIT 1
0	select bio_data from students where student_id in ( select student_id from student_loans where amount_of_loan = ( select min ( amount_of_loan ) from student_loans ) )	SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan ASC LIMIT 1
1	select students.bio_data from student_loans join students on student_loans.student_id = students.student_id order by amount_of_loan asc limit 1	SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan ASC LIMIT 1
0	select date_of_transcript from transcripts join student_loans on transcripts.student_id = student_loans.student_id where student_loans.amount_of_loan = ( select max ( amount_of_loan ) from student_loans )	SELECT T1.date_of_transcript FROM Transcripts AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan DESC LIMIT 1
0	select t.date_of_transcript from transcripts t join student_loans sl on t.student_id = sl.student_id where sl.amount_of_loan = ( select max ( amount_of_loan ) from student_loans )	SELECT T1.date_of_transcript FROM Transcripts AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan DESC LIMIT 1
1	select teachers.teacher_details from teachers join classes on teachers.teacher_id = classes.teacher_id join transcripts on transcripts.student_id = classes.student_id order by transcripts.date_of_transcript asc limit 1	SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Transcripts AS T3 ON T2.student_id  =  T3.student_id ORDER BY T3.date_of_transcript ASC LIMIT 1
1	select teachers.teacher_details from classes join teachers on classes.teacher_id = teachers.teacher_id join transcripts on transcripts.student_id = classes.student_id order by transcripts.date_of_transcript asc limit 1	SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Transcripts AS T3 ON T2.student_id  =  T3.student_id ORDER BY T3.date_of_transcript ASC LIMIT 1
1	select s.student_id , sum ( sl.amount_of_loan ) as total_loan_amount from students s join student_loans sl on s.student_id = sl.student_id group by s.student_id	select student_id ,  sum(amount_of_loan) from student_loans group by student_id
0	select s.student_id , sum ( sl.amount_of_loan ) as total_loan_amount from students s left join student_loans sl on s.student_id = sl.student_id group by s.student_id	SELECT student_id ,  sum(amount_of_loan) FROM Student_Loans GROUP BY student_id
0	select student_id , bio_data , ( select count ( * ) from classes where classes.student_id = students.student_id ) as total_courses from students	SELECT T1.student_id ,  T1.bio_data ,  count(*) FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id
1	select students.student_id , students.bio_data , count ( * ) from classes join students on classes.student_id = students.student_id group by students.student_id	SELECT T1.student_id ,  T1.bio_data ,  count(*) FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id
1	select count ( distinct student_id ) from detention	SELECT count(DISTINCT student_id) FROM Detention
1	select count ( distinct student_id ) from detention	SELECT count(DISTINCT student_id) FROM Detention
1	select students_addresses.address_type_code , ref_address_types.address_type_description from students_addresses join ref_address_types on students_addresses.address_type_code = ref_address_types.address_type_code group by students_addresses.address_type_code order by count ( * ) desc limit 1	SELECT T1.address_type_code ,  T2.address_type_description FROM Students_Addresses AS T1 JOIN Ref_Address_Types AS T2 WHERE T1.address_type_code  =  T2.address_type_code GROUP BY T1.address_type_code ORDER BY count(*) DESC LIMIT 1
1	select students_addresses.address_type_code , ref_address_types.address_type_description from students_addresses join ref_address_types on students_addresses.address_type_code = ref_address_types.address_type_code group by students_addresses.address_type_code order by count ( * ) desc limit 1	SELECT T1.address_type_code ,  T2.address_type_description FROM Students_Addresses AS T1 JOIN Ref_Address_Types AS T2 WHERE T1.address_type_code  =  T2.address_type_code GROUP BY T1.address_type_code ORDER BY count(*) DESC LIMIT 1
0	select bio_data from students where student_id in ( select student_id from student_events except select student_id from student_loans )	SELECT T1.bio_data FROM Students AS T1 JOIN Student_Events AS T2 WHERE T1.student_id  =  T2.student_id EXCEPT SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 WHERE T1.student_id  =  T2.student_id
0	select bio_data from students where student_id in ( select student_id from student_events except select student_id from student_loans )	SELECT T1.bio_data FROM Students AS T1 JOIN Student_Events AS T2 WHERE T1.student_id  =  T2.student_id EXCEPT SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 WHERE T1.student_id  =  T2.student_id
0	select students_addresses.date_from , students_addresses.date_to from students join students_addresses on students.student_id = students_addresses.student_id join transcripts on students.student_id = transcripts.student_id group by students.student_id having count ( * ) = 2	SELECT date_from ,  date_to FROM Students_Addresses WHERE student_id IN ( SELECT student_id FROM Transcripts GROUP BY student_id HAVING count(*)  =  2 )
0	select students_addresses.date_from , students_addresses.date_to from students_addresses join transcripts on students_addresses.student_id = transcripts.student_id group by students_addresses.student_id having count ( * ) = 2	SELECT date_from ,  date_to FROM Students_Addresses WHERE student_id IN ( SELECT student_id FROM Transcripts GROUP BY student_id HAVING count(*)  =  2 )
1	select datetime_detention_start from detention	SELECT datetime_detention_start FROM Detention
1	select datetime_detention_start from detention	SELECT datetime_detention_start FROM Detention
1	select name from author	SELECT name FROM Author
1	select name from author	SELECT name FROM Author
1	select name , address from client	SELECT name ,  address FROM Client
1	select name , address from client	SELECT name ,  address FROM Client
1	select title , isbn , saleprice from book	SELECT title ,  isbn ,  SalePrice FROM Book
1	select title , isbn , saleprice from book	SELECT title ,  isbn ,  SalePrice FROM Book
1	select count ( * ) from book	SELECT count(*) FROM Book
1	select count ( * ) from book	SELECT count(*) FROM Book
1	select count ( * ) from author	SELECT count(*) FROM Author
1	select count ( * ) from author	SELECT count(*) FROM Author
1	select count ( * ) from client	SELECT count(*) FROM Client
1	select count ( * ) from client	SELECT count(*) FROM Client
1	select name , address from client order by name asc	SELECT name ,  address FROM Client ORDER BY name
1	select name , address from client order by name asc	SELECT name ,  address FROM Client ORDER BY name
0	select title , author from book	SELECT T3.title ,  T1.name FROM Author AS T1 JOIN Author_Book AS T2 ON T2.Author  =  T1.idAuthor JOIN Book AS T3 ON T2.isbn  =  T3.isbn
1	select book.title , author.name from book join author_book on book.isbn = author_book.isbn join author on author_book.author = author.idauthor	SELECT T3.title ,  T1.name FROM Author AS T1 JOIN Author_Book AS T2 ON T2.Author  =  T1.idAuthor JOIN Book AS T3 ON T2.isbn  =  T3.isbn
0	select idorder , idclient from orders	SELECT T1.idOrder ,  T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient
0	select idorder , idclient from orders	SELECT T1.idOrder ,  T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient
0	select author.name , count ( * ) from author_book join author on author_book.author = author.idauthor group by author.name	SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor  =  T2.Author GROUP BY T1.idAuthor
1	select author.name , count ( * ) from author join author_book on author.idauthor = author_book.author group by author.idauthor	SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor  =  T2.Author GROUP BY T1.idAuthor
1	select isbn , count ( * ) from books_order group by isbn	SELECT isbn ,  count(*) FROM Books_Order GROUP BY isbn
1	select isbn , count ( * ) from books_order group by isbn	SELECT isbn ,  count(*) FROM Books_Order GROUP BY isbn
1	select isbn , sum ( amount ) from books_order group by isbn	SELECT isbn ,  sum(amount) FROM Books_Order GROUP BY isbn
1	select isbn , sum ( amount ) from books_order group by isbn	SELECT isbn ,  sum(amount) FROM Books_Order GROUP BY isbn
0	select book.title from books_order join book on books_order.isbn = book.isbn group by books_order.idorder order by count ( * ) desc limit 1	SELECT T2.title FROM Books_Order AS T1 JOIN Book AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY count(*) DESC LIMIT 1
1	select book.title from books_order join book on books_order.isbn = book.isbn group by books_order.isbn order by count ( * ) desc limit 1	SELECT T2.title FROM Books_Order AS T1 JOIN Book AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY count(*) DESC LIMIT 1
1	select book.title , book.purchaseprice from book join books_order on book.isbn = books_order.isbn group by books_order.isbn order by sum ( amount ) desc limit 1	SELECT T2.title ,  T2.PurchasePrice FROM Books_Order AS T1 JOIN BOOk AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY sum(amount) DESC LIMIT 1
1	select book.title , book.purchaseprice from book join books_order on book.isbn = books_order.isbn group by books_order.isbn order by sum ( amount ) desc limit 1	SELECT T2.title ,  T2.PurchasePrice FROM Books_Order AS T1 JOIN BOOk AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY sum(amount) DESC LIMIT 1
0	select book.title from books_order join book on books_order.isbn = book.isbn	SELECT DISTINCT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn
1	select distinct book.title from books_order join book on books_order.isbn = book.isbn	SELECT DISTINCT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn
0	select name from client where idclient in ( select idclient from orders group by idclient having count ( * ) >= 1 )	SELECT DISTINCT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient
1	select distinct client.name from orders join client on orders.idclient = client.idclient	SELECT DISTINCT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient
1	select client.name , count ( * ) from orders join client on orders.idclient = client.idclient group by client.idclient	SELECT T2.name ,  count(*) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient
1	select client.name , count ( * ) from orders join client on orders.idclient = client.idclient group by client.idclient	SELECT T2.name ,  count(*) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient
0	select name from client where idclient in ( select idclient from orders group by idclient having count ( idorder ) = ( select max ( counted ) from ( select count ( idorder ) as counted from orders group by idclient ) ) )	SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient ORDER BY count(*) DESC LIMIT 1
1	select client.name from orders join client on orders.idclient = client.idclient group by orders.idclient order by count ( * ) desc limit 1	SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient ORDER BY count(*) DESC LIMIT 1
1	select client.name , sum ( books_order.amount ) from orders join books_order on orders.idorder = books_order.idorder join client on orders.idclient = client.idclient group by client.idclient	SELECT T2.name ,  sum(T3.amount) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient
1	select client.name , sum ( books_order.amount ) from orders join books_order on orders.idorder = books_order.idorder join client on orders.idclient = client.idclient group by client.idclient	SELECT T2.name ,  sum(T3.amount) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient
1	select client.name from orders join books_order on orders.idorder = books_order.idorder join client on orders.idclient = client.idclient group by orders.idclient order by sum ( books_order.amount ) desc limit 1	SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient ORDER BY sum(T3.amount) DESC LIMIT 1
1	select client.name from orders join books_order on orders.idorder = books_order.idorder join client on orders.idclient = client.idclient group by orders.idclient order by sum ( books_order.amount ) desc limit 1	SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient ORDER BY sum(T3.amount) DESC LIMIT 1
0	select title from book where isbn not in ( select isbn from books_order )	SELECT title FROM book EXCEPT SELECT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn
0	select title from book where isbn not in ( select isbn from books_order )	SELECT title FROM book EXCEPT SELECT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn
0	select name from client where idclient not in ( select idclient from orders )	SELECT name FROM Client EXCEPT SELECT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient
0	select name from client where idclient not in ( select idclient from orders )	SELECT name FROM Client EXCEPT SELECT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient
1	select max ( saleprice ) , min ( saleprice ) from book	SELECT max(saleprice) ,  min(saleprice) FROM Book
1	select max ( saleprice ) , min ( saleprice ) from book	SELECT max(saleprice) ,  min(saleprice) FROM Book
1	select avg ( purchaseprice ) , avg ( saleprice ) from book	SELECT avg(purchaseprice) ,  avg(saleprice) FROM Book
1	select avg ( purchaseprice ) , avg ( saleprice ) from book	SELECT avg(purchaseprice) ,  avg(saleprice) FROM Book
0	select max ( saleprice ) from book	SELECT max(saleprice - purchaseprice) FROM Book
0	select max ( saleprice ) from book	SELECT max(saleprice - purchaseprice) FROM Book
1	select title from book where saleprice > ( select avg ( saleprice ) from book )	SELECT title FROM book WHERE saleprice  >  (SELECT avg(saleprice) FROM book)
1	select title from book where saleprice > ( select avg ( saleprice ) from book )	SELECT title FROM book WHERE saleprice  >  (SELECT avg(saleprice) FROM book)
0	select title from book where saleprice = ( select min ( saleprice ) from book )	select title from book order by saleprice asc limit 1
0	select b.title from book b where b.saleprice = ( select min ( saleprice ) from book )	select title from book order by saleprice asc limit 1
0	select title from book where purchaseprice = ( select max ( purchaseprice ) from book )	select title from book order by purchaseprice  desc limit 1
0	select b.title from book b where b.purchaseprice = ( select max ( purchaseprice ) from book )	select title from book order by purchaseprice  desc limit 1
0	select avg ( book.saleprice ) from author_book join book on author_book.isbn = book.isbn where author_book.author = 'George Orwell'	SELECT avg(saleprice) FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  "George Orwell"
1	select avg ( book.saleprice ) from author_book join book on author_book.isbn = book.isbn join author on author_book.author = author.idauthor where author.name = 'George Orwell'	SELECT avg(saleprice) FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  "George Orwell"
0	select book.saleprice from book join author_book on book.isbn = author_book.isbn where author_book.author = 'Plato'	SELECT saleprice FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  "Plato"
0	select book.saleprice from book join author_book on book.isbn = author_book.isbn where author_book.author = 'Plato'	SELECT saleprice FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  "Plato"
0	sql placeholder	SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  "George Orwell" ORDER BY T1.saleprice LIMIT 1
0	select title from book where author = 'George Orwell' and saleprice = ( select min ( saleprice ) from book where author = 'George Orwell' )	SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  "George Orwell" ORDER BY T1.saleprice LIMIT 1
0	select title from book where author = 'Plato' and saleprice < ( select avg ( saleprice ) from book )	SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  "Plato" AND T1.saleprice  <  (SELECT avg(saleprice) FROM Book)
0	select book.title from book join author_book on book.isbn = author_book.isbn where author_book.author = 'Plato' and book.saleprice < ( select avg ( saleprice ) from book where author_book.author = 'Plato' )	SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  "Plato" AND T1.saleprice  <  (SELECT avg(saleprice) FROM Book)
1	select author.name from author_book join book on author_book.isbn = book.isbn join author on author_book.author = author.idauthor where book.title = 'Pride and Prejudice'	SELECT T3.name FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T1.title  =  "Pride and Prejudice"
1	select author.name from author_book join book on author_book.isbn = book.isbn join author on author.idauthor = author_book.author where book.title = 'Pride and Prejudice'	SELECT T3.name FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T1.title  =  "Pride and Prejudice"
1	select book.title from book join author_book on book.isbn = author_book.isbn join author on author_book.author = author.idauthor where author.name like '%Plato%'	SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name LIKE "%Plato%"
1	select book.title from book join author_book on book.isbn = author_book.isbn join author on author_book.author = author.idauthor where author.name like '%Plato%'	SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name LIKE "%Plato%"
1	select count ( * ) from orders join books_order on orders.idorder = books_order.idorder join book on books_order.isbn = book.isbn where book.title = 'Pride and Prejudice'	SELECT count(*) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  "Pride and Prejudice"
1	select count ( * ) from orders join books_order on orders.idorder = books_order.idorder join book on books_order.isbn = book.isbn where book.title = 'Pride and Prejudice'	SELECT count(*) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  "Pride and Prejudice"
1	select idorder from books_order join book on books_order.isbn = book.isbn where book.title = 'Pride and Prejudice' intersect select idorder from books_order join book on books_order.isbn = book.isbn where book.title = 'The Little Prince'	SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  "Pride and Prejudice" INTERSECT SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  "The Little Prince"
0	sql placeholder	SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  "Pride and Prejudice" INTERSECT SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  "The Little Prince"
1	select books_order.isbn from orders join books_order on orders.idorder = books_order.idorder join client on orders.idclient = client.idclient where client.name = 'Peter Doe' intersect select books_order.isbn from orders join books_order on orders.idorder = books_order.idorder join client on orders.idclient = client.idclient where client.name = 'James Smith'	SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  "Peter Doe" INTERSECT SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  "James Smith"
1	select books_order.isbn from orders join books_order on orders.idorder = books_order.idorder join client on orders.idclient = client.idclient where client.name = 'Peter Doe' intersect select books_order.isbn from orders join books_order on orders.idorder = books_order.idorder join client on orders.idclient = client.idclient where client.name = 'James Smith'	SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  "Peter Doe" INTERSECT SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  "James Smith"
0	select title from book where isbn in ( select isbn from books_order join orders on books_order.idorder = orders.idorder where orders.idclient = 'Peter Doe' except select book.title from books_order join orders on books_order.idorder = orders.idorder where orders.idclient = 'James Smith' )	SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  "Peter Doe" EXCEPT SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  "James Smith"
0	sql placeholder	SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  "Peter Doe" EXCEPT SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  "James Smith"
0	select name from client where idclient in ( select idclient from orders where idorder = 'Pride and Prejudice' )	SELECT T3.name FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN Book AS T4 ON T4.isbn  =  T2.isbn WHERE T4.title  =  "Pride and Prejudice"
0	select name from client where idclient in ( select idclient from orders where idorder = 'Pride and Prejudice' )	SELECT T3.name FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN Book AS T4 ON T4.isbn  =  T2.isbn WHERE T4.title  =  "Pride and Prejudice"
1	select count ( * ) from book	SELECT count(*) FROM book
1	select title from book order by title asc	SELECT Title FROM book ORDER BY Title ASC
1	select title from book order by pages desc	SELECT Title FROM book ORDER BY Pages DESC
1	select type , release from book	SELECT TYPE ,  Release FROM book
1	select max ( chapters ) , min ( chapters ) from book	SELECT max(Chapters) ,  min(Chapters) FROM book
0	select title from book where title not in ( 'Poet' )	SELECT Title FROM book WHERE TYPE != "Poet"
1	select avg ( rating ) from review	SELECT avg(Rating) FROM review
1	select book.title , review.rating from book join review on book.book_id = review.book_id	SELECT T1.Title ,  T2.Rating FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID
0	select review.rating from review join book on review.book_id = book.book_id where book.chapters = ( select max ( chapters ) from book )	SELECT T2.Rating FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T1.Chapters DESC LIMIT 1
1	select review.rank from book join review on book.book_id = review.book_id order by book.pages asc limit 1	SELECT T2.Rank FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T1.Pages ASC LIMIT 1
0	select book.title from book join review on book.book_id = review.book_id order by review.rank desc limit 1	SELECT T1.Title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Rank LIMIT 1
1	select avg ( review.readers_in_million ) from review join book on review.book_id = book.book_id where book.type = 'Novel'	SELECT avg(T2.Readers_in_Million) FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T1.Type  =  "Novel"
1	select type , count ( * ) from book group by type	SELECT TYPE ,  COUNT(*) FROM book GROUP BY TYPE
0	select type from book group by type having count ( type ) = ( select max ( cnt ) from ( select count ( * ) as cnt from book group by type ) )	SELECT TYPE FROM book GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1
1	select type from book group by type having count ( * ) >= 3	SELECT TYPE FROM book GROUP BY TYPE HAVING COUNT(*)  >=  3
1	select book.title from book join review on book.book_id = review.book_id order by review.rating asc	SELECT T1.Title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Rating ASC
1	select book.title , book.audio from book join review on book.book_id = review.book_id order by review.readers_in_million desc	SELECT T1.Title ,  T1.audio FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Readers_in_Million DESC
1	select count ( * ) from book where book_id not in ( select book_id from review )	SELECT count(*) FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review)
1	select type from book where chapters > 75 intersect select type from book where chapters < 50	SELECT TYPE FROM book WHERE Chapters  >  75 INTERSECT SELECT TYPE FROM book WHERE Chapters  <  50
1	select count ( distinct type ) from book	SELECT count(DISTINCT TYPE) FROM book
0	select type , title from book where book_id not in ( select book_id from review )	SELECT TYPE ,  title FROM book EXCEPT SELECT T1.type ,  T1.title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID;
1	select count ( * ) from customer	SELECT count(*) FROM customer
1	select count ( * ) from customer	SELECT count(*) FROM customer
1	select name from customer order by level_of_membership asc	SELECT Name FROM customer ORDER BY Level_of_Membership ASC
1	select name from customer order by level_of_membership asc	SELECT Name FROM customer ORDER BY Level_of_Membership ASC
1	select nationality , card_credit from customer	SELECT Nationality ,  Card_Credit FROM customer
1	select nationality , card_credit from customer	SELECT Nationality ,  Card_Credit FROM customer
1	select name from customer where nationality = 'England' or nationality = 'Australia'	SELECT Name FROM customer WHERE Nationality  =  "England" OR Nationality  =  "Australia"
1	select name from customer where nationality = 'England' or nationality = 'Australia'	SELECT Name FROM customer WHERE Nationality  =  "England" OR Nationality  =  "Australia"
1	select avg ( card_credit ) from customer where level_of_membership > 1	SELECT avg(Card_Credit) FROM customer WHERE Level_of_Membership  >  1
1	select avg ( card_credit ) from customer where level_of_membership > 1	SELECT avg(Card_Credit) FROM customer WHERE Level_of_Membership  >  1
0	select card_credit from customer where level_of_membership = ( select max ( level_of_membership ) from customer )	SELECT Card_Credit FROM customer ORDER BY Level_of_Membership DESC LIMIT 1
0	select card_credit from customer where level_of_membership = ( select max ( level_of_membership ) from customer )	SELECT Card_Credit FROM customer ORDER BY Level_of_Membership DESC LIMIT 1
1	select nationality , count ( * ) from customer group by nationality	SELECT Nationality ,  COUNT(*) FROM customer GROUP BY Nationality
1	select nationality , count ( * ) from customer group by nationality	SELECT Nationality ,  COUNT(*) FROM customer GROUP BY Nationality
0	with nationalitycount as ( select nationality , count ( * ) as count from customer group by nationality ) select nationality from nationalitycount where count = ( select max ( count ) from nationalitycount )	SELECT Nationality FROM customer GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
0	with nationalitycount as ( select nationality , count ( * ) as count from customer group by nationality ) select nationality from nationalitycount where count = ( select max ( count ) from nationalitycount )	SELECT Nationality FROM customer GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
1	select nationality from customer where card_credit < 50 intersect select nationality from customer where card_credit > 75	SELECT Nationality FROM customer WHERE Card_Credit  <  50 INTERSECT SELECT Nationality FROM customer WHERE Card_Credit  >  75
0	select nationality from customer where card_credit > 50 intersect select nationality from customer where card_credit < 75	SELECT Nationality FROM customer WHERE Card_Credit  <  50 INTERSECT SELECT Nationality FROM customer WHERE Card_Credit  >  75
1	select customer.name , customer_order.dish_name from customer join customer_order on customer.customer_id = customer_order.customer_id	SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID
1	select customer.name , dish_name from customer_order join customer on customer_order.customer_id = customer.customer_id	SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID
1	select customer.name , customer_order.dish_name from customer_order join customer on customer_order.customer_id = customer.customer_id order by customer_order.quantity desc	SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID ORDER BY T2.Quantity DESC
1	select customer.name , customer_order.dish_name from customer_order join customer on customer_order.customer_id = customer.customer_id order by customer_order.quantity desc	SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID ORDER BY T2.Quantity DESC
1	select customer.name , sum ( customer_order.quantity ) from customer_order join customer on customer_order.customer_id = customer.customer_id group by customer.name	SELECT T1.Name ,  sum(T2.Quantity) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name
1	select customer.name , sum ( customer_order.quantity ) from customer_order join customer on customer_order.customer_id = customer.customer_id group by customer.name	select t1.name ,  sum(t2.quantity) from customer as t1 join customer_order as t2 on t1.customer_id  =  t2.customer_id group by t1.name
1	select customer.name from customer_order join customer on customer_order.customer_id = customer.customer_id group by customer.name having sum ( customer_order.quantity ) > 1	SELECT T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name HAVING sum(T2.Quantity)  >  1
0	select customer.name from customer_order join customer on customer_order.customer_id = customer.customer_id group by customer.customer_id having sum ( customer_order.quantity ) > 1	SELECT T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name HAVING sum(T2.Quantity)  >  1
1	select distinct manager from branch	SELECT DISTINCT Manager FROM branch
1	select distinct manager from branch	SELECT DISTINCT Manager FROM branch
1	select name from customer where customer_id not in ( select customer_id from customer_order )	SELECT name FROM customer WHERE Customer_ID NOT IN (SELECT Customer_ID FROM customer_order)
1	select name from customer where customer_id not in ( select customer_id from customer_order )	SELECT name FROM customer WHERE Customer_ID NOT IN (SELECT Customer_ID FROM customer_order)
1	select count ( * ) from member	SELECT count(*) FROM member
1	select name from member order by age asc	SELECT Name FROM member ORDER BY Age ASC
1	select name , nationality from member	SELECT Name ,  Nationality FROM member
0	select name from member where nationality != 'England'	select name from member where nationality != "england"
1	select name from member where age = 19 or age = 20	SELECT Name FROM member WHERE Age  =  19 OR Age  =  20
0	select m.name from member m where m.age = ( select max ( age ) from member )	SELECT Name FROM member ORDER BY Age DESC LIMIT 1
1	select nationality , count ( * ) from member group by nationality	SELECT Nationality ,  COUNT(*) FROM member GROUP BY Nationality
0	with nationalitycount as ( select nationality , count ( * ) as count from member group by nationality ) select nationality from nationalitycount where count = ( select max ( count ) from nationalitycount )	SELECT Nationality ,  COUNT(*) FROM member GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
1	select nationality from member group by nationality having count ( * ) >= 2	SELECT Nationality FROM member GROUP BY Nationality HAVING COUNT(*)  >=  2
0	sql placeholder	SELECT T3.Name ,  T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID
0	select m.name from member m where exists ( select 1 from club_leader cl join club c on cl.club_id = c.club_id where cl.member_id = m.member_id and c.overall_ranking > 100 )	SELECT T3.Name ,  T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID WHERE T2.Overall_Ranking  <  100
0	select m.name from member m where exists ( select 1 from club_leader cl where cl.year_join < 2018 and cl.member_id = m.member_id )	SELECT T3.Name ,  T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID WHERE T1.Year_Join  <  2018
0	select m.name from member m where exists ( select 1 from club_leader cl join club c on cl.club_id = c.club_id where cl.member_id = m.member_id and c.club_name = 'Houston' )	SELECT T3.Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID WHERE T2.Club_Name  =  "Houston"
1	select name from member where member_id not in ( select member_id from club_leader )	SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM club_leader)
1	select nationality from member where age > 22 intersect select nationality from member where age < 19	SELECT Nationality FROM member WHERE Age  >  22 INTERSECT SELECT Nationality FROM member WHERE Age  <  19
1	select avg ( member.age ) from club_leader join member on club_leader.member_id = member.member_id	SELECT avg(T2.age) FROM club_leader AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id
1	select club_name from club where club_name like '%state%'	SELECT club_name FROM club WHERE club_name LIKE '%state%'
1	select collection_subset_name from collection_subsets	SELECT Collection_Subset_Name FROM Collection_Subsets;
1	select collection_subset_name from collection_subsets	SELECT Collection_Subset_Name FROM Collection_Subsets;
1	select collecrtion_subset_details from collection_subsets where collection_subset_name = 'Top collection'	SELECT Collecrtion_Subset_Details FROM Collection_Subsets WHERE Collection_Subset_Name = "Top collection";
0	sql placeholder	SELECT Collecrtion_Subset_Details FROM Collection_Subsets WHERE Collection_Subset_Name = "Top collection";
1	select document_subset_name from document_subsets	SELECT Document_Subset_Name FROM Document_Subsets;
1	select document_subset_name from document_subsets	SELECT Document_Subset_Name FROM Document_Subsets;
1	select document_subset_details from document_subsets where document_subset_name = 'Best for 2000'	SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = "Best for 2000";
1	select document_subset_details from document_subsets where document_subset_name = 'Best for 2000'	SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = "Best for 2000";
0	sql placeholder	SELECT Document_Object_ID FROM Document_Objects;
1	select document_object_id from document_objects	SELECT Document_Object_ID FROM Document_Objects;
1	select parent_document_object_id from document_objects where owner = 'Marlin'	SELECT Parent_Document_Object_ID FROM Document_Objects WHERE OWNER  =  'Marlin'
0	select document_object_id from document_objects where owner = 'Marlin'	SELECT Parent_Document_Object_ID FROM Document_Objects WHERE OWNER  =  'Marlin'
1	select owner from document_objects where description = 'Braeden Collection'	SELECT OWNER FROM Document_Objects WHERE Description  =  'Braeden Collection'
0	select document_objects.owner from document_objects join documents_in_collections on document_objects.document_object_id = documents_in_collections.document_object_id join collections on documents_in_collections.collection_id = collections.collection_id where collections.collection_name = 'Braeden Collection'	SELECT OWNER FROM Document_Objects WHERE Description  =  'Braeden Collection'
0	select owner from document_objects where owner = 'Marlin'	SELECT T2.Owner FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID WHERE T1.Owner  =  'Marlin'
0	select owner from document_objects where owner = 'Marlin'	SELECT T2.Owner FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID WHERE T1.Owner  =  'Marlin'
0	select distinct description from document_objects	SELECT DISTINCT T2.Description FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID
0	select distinct description from document_objects	SELECT DISTINCT T2.Description FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID
1	select count ( * ) from document_objects where owner = 'Marlin'	SELECT count(*) FROM Document_Objects WHERE OWNER = "Marlin";
1	select count ( * ) from document_objects where owner = 'Marlin'	SELECT count(*) FROM Document_Objects WHERE OWNER = "Marlin";
1	select document_object_id from document_objects except select parent_document_object_id from document_objects	SELECT Document_Object_ID FROM Document_Objects EXCEPT SELECT Parent_Document_Object_ID FROM Document_Objects
1	select document_object_id from document_objects except select parent_document_object_id from document_objects	SELECT Document_Object_ID FROM Document_Objects EXCEPT SELECT Parent_Document_Object_ID FROM Document_Objects
1	select parent_document_object_id , count ( * ) from document_objects group by parent_document_object_id	SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID;
0	sql placeholder	SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID;
1	select collection_name from collections	SELECT Collection_Name FROM Collections;
1	select collection_name from collections	SELECT Collection_Name FROM Collections;
1	select collection_description from collections where collection_name = 'Best'	SELECT Collection_Description FROM Collections WHERE Collection_Name = "Best";
1	select collection_description from collections where collection_name = 'Best'	SELECT Collection_Description FROM Collections WHERE Collection_Name = "Best";
0	select collection_name from collections where collection_name = 'Nice'	SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = "Nice";
0	select collection_name from collections where collection_name = 'Nice'	SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = "Nice";
0	select collection_name from collections where parent_collection_id not in ( select collection_id from collections )	SELECT Collection_Name FROM Collections EXCEPT SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID;
0	select collection_name from collections where collection_id not in ( select parent_collection_id from collections )	SELECT Collection_Name FROM Collections EXCEPT SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID;
0	sql placeholder	SELECT T2.Document_Object_ID FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID HAVING count(*)  >  1;
0	select document_object_id from document_objects group by document_object_id having count ( * ) > 1	SELECT T2.Document_Object_ID FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID HAVING count(*)  >  1;
0	select count ( * ) from collections where collection_name = 'Best'	SELECT count(*) FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = "Best";
0	select count ( * ) from collections where collection_name = 'Best'	SELECT count(*) FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = "Best";
0	select document_object_id from document_objects where owner = 'Ransom'	select t1.document_object_id from document_subset_members as t1 join document_objects as t2 on t1.document_object_id  =  t2.document_object_id where t2.owner  =  'ransom'
0	select document_object_id from document_objects where owner = 'Ransom'	select t1.document_object_id from document_subset_members as t1 join document_objects as t2 on t1.document_object_id  =  t2.document_object_id where t2.owner  =  'ransom'
0	select collection_subset_id , collection_subset_name , count ( * ) from collection_subsets group by collection_subset_id	SELECT T2.Collection_Subset_ID ,  T1.Collection_Subset_Name ,  count(*) FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID GROUP BY T2.Collection_Subset_ID;
0	sql placeholder	SELECT T2.Collection_Subset_ID ,  T1.Collection_Subset_Name ,  count(*) FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID GROUP BY T2.Collection_Subset_ID;
0	sql placeholder	SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID ORDER BY count(*) DESC LIMIT 1;
0	select document_object_id , count ( * ) from document_objects group by document_object_id	SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID ORDER BY count(*) DESC LIMIT 1;
0	sql placeholder	SELECT Document_Object_ID , count(*) FROM Document_Subset_Members GROUP BY Document_Object_ID ORDER BY count(*) ASC LIMIT 1;
0	select document_object_id from documents_in_collections group by document_object_id order by count ( * ) asc limit 1	select document_object_id , count(*) from document_subset_members group by document_object_id order by count(*) asc limit 1;
0	sql placeholder	select document_object_id , count(*) from document_subset_members group by document_object_id having count(*) between 2 and 4;
1	select document_object_id , count ( * ) from document_subset_members group by document_object_id having count ( * ) between 2 and 4	SELECT Document_Object_ID , count(*) FROM Document_Subset_Members GROUP BY Document_Object_ID HAVING count(*) BETWEEN 2 AND 4;
0	select owner from document_objects where document_object_id in ( select related_document_object_id from document_subset_members where owner = 'Braeden' )	SELECT DISTINCT OWNER FROM Document_Subset_Members AS T1 JOIN Document_Objects AS T2 ON T1.Related_Document_Object_ID  =  T2.Document_Object_ID WHERE T2.Owner  =  'Braeden';
1	select distinct owner from document_objects where document_object_id in ( select related_document_object_id from document_subset_members where owner = 'Braeden' )	SELECT DISTINCT OWNER FROM Document_Subset_Members AS T1 JOIN Document_Objects AS T2 ON T1.Related_Document_Object_ID  =  T2.Document_Object_ID WHERE T2.Owner  =  'Braeden';
0	select distinct document_subset_name from document_subsets join document_objects on document_subsets.document_subset_id = document_subsets.document_subset_id where document_objects.owner = 'Braeden'	SELECT DISTINCT T1.Document_Subset_Name FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Document_Objects AS T3 ON T2.Document_Object_ID  =  T3.Document_Object_ID WHERE T3.owner  =  'Braeden'
0	select distinct document_subset_name from document_objects join document_subsets on document_objects.document_object_id = document_subsets.document_subset_id where document_objects.owner = 'Breaeden'	SELECT DISTINCT T1.Document_Subset_Name FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Document_Objects AS T3 ON T2.Document_Object_ID  =  T3.Document_Object_ID WHERE T3.owner  =  'Braeden'
0	sql placeholder	SELECT T1.Document_Subset_ID ,  T2.Document_Subset_Name , count(DISTINCT T1.Document_Object_ID) FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID GROUP BY T1.Document_Subset_ID;
0	sql placeholder	SELECT T1.Document_Subset_ID ,  T2.Document_Subset_Name , count(DISTINCT T1.Document_Object_ID) FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID GROUP BY T1.Document_Subset_ID;
0	select document_subset_id , document_subset_name , count ( * ) from document_subsets group by document_subset_id order by count ( * ) desc limit 1	select t1.document_subset_id ,  t2.document_subset_name , count(distinct t1.document_object_id) from document_subset_members as t1 join document_subsets as t2 on t1.document_subset_id =  t2.document_subset_id group by t1.document_subset_id order by count(*) desc limit 1;
0	sql placeholder	select t1.document_subset_id ,  t2.document_subset_name , count(distinct t1.document_object_id) from document_subset_members as t1 join document_subsets as t2 on t1.document_subset_id =  t2.document_subset_id group by t1.document_subset_id order by count(*) desc limit 1;
0	select document_subset_id from document_subsets where document_subset_name = 'Best for 2000'	SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID WHERE T2.Document_Subset_Name = "Best for 2000";
0	select document_subset_id from document_subsets where document_subset_name = 'Best for 2000'	SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID WHERE T2.Document_Subset_Name = "Best for 2000";
0	sql placeholder	SELECT DISTINCT T3.Document_Subset_Name ,  T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subset_Members  AS T2 ON T1.Related_Document_Object_ID = T2.Document_Object_ID JOIN Document_Subsets AS T3 ON T2.Document_Subset_ID =  T3.Document_Subset_ID
0	sql placeholder	select distinct t3.document_subset_name ,  t1.document_object_id from document_subset_members as t1 join document_subset_members  as t2 on t1.related_document_object_id = t2.document_object_id join document_subsets as t3 on t2.document_subset_id =  t3.document_subset_id
0	select collections.collection_name from collections join documents_in_collections on collections.collection_id = documents_in_collections.collection_id join document_objects on documents_in_collections.document_object_id = document_objects.document_object_id where document_objects.owner = 'Ransom'	select t1.collection_name from collections as t1 join documents_in_collections as t2 on t1.collection_id = t2.collection_id join document_objects as t3 on t2.document_object_id  =  t3.document_object_id where t3.owner  =  'ransom'
1	select collections.collection_name from collections join documents_in_collections on collections.collection_id = documents_in_collections.collection_id join document_objects on documents_in_collections.document_object_id = document_objects.document_object_id where document_objects.owner = 'Ransom'	SELECT T1.Collection_Name FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID JOIN Document_Objects AS T3 ON T2.Document_object_id  =  T3.Document_object_id WHERE T3.owner  =  'Ransom'
1	select count ( * ) , documents_in_collections.document_object_id from documents_in_collections join collections on documents_in_collections.collection_id = collections.collection_id group by documents_in_collections.document_object_id	SELECT count(*) ,  T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID GROUP BY T2.Document_Object_ID
1	select document_object_id , count ( distinct collections.collection_id ) from documents_in_collections join collections on documents_in_collections.collection_id = collections.collection_id group by document_object_id	SELECT count(*) ,  T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID GROUP BY T2.Document_Object_ID
1	select count ( * ) from collections join documents_in_collections on collections.collection_id = documents_in_collections.collection_id where collections.collection_name = 'Best'	SELECT count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = "Best";
1	select count ( * ) from collections join documents_in_collections on collections.collection_id = documents_in_collections.collection_id where collections.collection_name = 'Best'	SELECT count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = "Best";
1	select document_object_id from documents_in_collections join collections on documents_in_collections.collection_id = collections.collection_id where collections.collection_name = 'Best'	SELECT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = "Best";
0	select count ( distinct d.document_object_id ) from documents_in_collections d inner join collections c on d.collection_id = c.collection_id where c.collection_name = 'Best'	SELECT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = "Best";
0	select collections.collection_name , collections.collection_id , count ( * ) from collections join documents_in_collections on collections.collection_id = documents_in_collections.collection_id group by collections.collection_id order by count ( * ) desc limit 1	SELECT T1.Collection_Name ,  T1.Collection_ID ,  count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = "Best" GROUP BY T1.Collection_ID ORDER BY count(*) DESC LIMIT 1;
1	select collections.collection_name , collections.collection_id , count ( * ) from collections join documents_in_collections on collections.collection_id = documents_in_collections.collection_id where collections.collection_name = 'Best' group by collections.collection_id order by count ( * ) desc limit 1	SELECT T1.Collection_Name ,  T1.Collection_ID ,  count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = "Best" GROUP BY T1.Collection_ID ORDER BY count(*) DESC LIMIT 1;
0	sql placeholder	SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = "Best for 2000" AND T4.Collection_Name = "Best";
0	sql placeholder	SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = "Best for 2000" AND T4.Collection_Name = "Best";
0	sql placeholder	SELECT DISTINCT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = "Best" EXCEPT SELECT DISTINCT T3.Document_Object_ID FROM Document_Subset_Members AS T3 JOIN Document_Subsets AS T4 ON T3.Document_Subset_ID =  T4.Document_Subset_ID WHERE T4.Document_Subset_Name = "Best for 2000"
0	select distinct documents_in_collections.document_object_id from documents_in_collections join collections on documents_in_collections.collection_id = collections.collection_id where collections.collection_name = 'Best' except select distinct documents_in_collections.document_object_id from documents_in_collections join collections on documents_in_collections.collection_id = collections.collection_id where collections.collection_name = 'Best'	SELECT DISTINCT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = "Best" EXCEPT SELECT DISTINCT T3.Document_Object_ID FROM Document_Subset_Members AS T3 JOIN Document_Subsets AS T4 ON T3.Document_Subset_ID =  T4.Document_Subset_ID WHERE T4.Document_Subset_Name = "Best for 2000"
0	sql placeholder	SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = "Best for 2000" OR T4.Collection_Name = "Best";
0	sql placeholder	SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = "Best for 2000" OR T4.Collection_Name = "Best";
0	select collection_name from collections where collection_name in ( select collection_id from collections where collection_name = 'Best' )	SELECT DISTINCT T4.Collection_Name FROM Collection_Subset_Members AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Related_Collection_ID = T2.Collection_ID JOIN Collections AS T3 ON T1.Collection_ID = T3.Collection_ID JOIN Collections AS T4 ON T2.Collection_ID = T4.Collection_ID WHERE T3.Collection_Name = "Best";
0	select c.collection_name from collections c where exists ( select 1 from collection_subset_members csm join collections c on csm.collection_id = c.collection_id where csm.collection_id = c.collection_id and c.collection_name = 'Best' )	SELECT DISTINCT T4.Collection_Name FROM Collection_Subset_Members AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Related_Collection_ID = T2.Collection_ID JOIN Collections AS T3 ON T1.Collection_ID = T3.Collection_ID JOIN Collections AS T4 ON T2.Collection_ID = T4.Collection_ID WHERE T3.Collection_Name = "Best";
0	select count ( * ) from collections join collection_subset_members on collections.collection_id = collection_subset_members.related_collection_id where collections.collection_name = 'Best'	SELECT count(DISTINCT T1.Related_Collection_ID) FROM Collection_Subset_Members AS T1 JOIN Collections AS T2 ON T1.Collection_ID  =  T2.Collection_ID WHERE T2.Collection_Name = "Best";
1	select count ( distinct collection_subset_members.related_collection_id ) from collections join collection_subset_members on collections.collection_id = collection_subset_members.collection_id where collections.collection_name = 'Best'	SELECT count(DISTINCT T1.Related_Collection_ID) FROM Collection_Subset_Members AS T1 JOIN Collections AS T2 ON T1.Collection_ID  =  T2.Collection_ID WHERE T2.Collection_Name = "Best";
0	select collection_subset_name from collections join collection_subsets on collections.collection_id = collection_subsets.collection_subset_id where collections.collection_name = 'Best'	SELECT DISTINCT T1.Collection_Subset_Name FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID JOIN Collections AS T3 ON T2.Collection_ID =  T3.Collection_ID WHERE T3.Collection_Name = "Best";
0	sql placeholder	SELECT DISTINCT T1.Collection_Subset_Name FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID JOIN Collections AS T3 ON T2.Collection_ID =  T3.Collection_ID WHERE T3.Collection_Name = "Best";
1	select count ( * ) from songs where name like '%Love%'	SELECT count(*) FROM songs WHERE name LIKE "%Love%"
1	select name from songs order by name asc	SELECT name FROM songs ORDER BY name
1	select name , language from songs	select name , language from songs
1	select max ( voice_sound_quality ) , min ( voice_sound_quality ) from performance_score	SELECT max(voice_sound_quality) ,  min(voice_sound_quality) FROM performance_score
1	select performance_score.voice_sound_quality , performance_score.rhythm_tempo , performance_score.stage_presence from performance_score join participants on performance_score.participant_id = participants.id where participants.name = 'Freeway'	SELECT T1.voice_sound_quality ,  T1.rhythm_tempo ,  T1.stage_presence FROM performance_score AS T1 JOIN participants AS T2 ON T1.participant_id  =  T2.id WHERE T2.name  =  'Freeway'
1	select id , language , original_artist from songs where name != 'Love'	SELECT id ,  LANGUAGE ,  original_artist FROM songs WHERE name != 'Love'
1	select name , original_artist from songs where english_translation = 'All the streets of love'	SELECT name ,  original_artist FROM songs WHERE english_translation  =  'All the streets of love'
1	select distinct performance_score.stage_presence from performance_score join songs on performance_score.songs_id = songs.id where songs.language = 'English'	SELECT DISTINCT T2.stage_presence FROM songs AS T1 JOIN performance_score AS T2 ON T1.id  =  T2.songs_id WHERE T1.language  =  'English'
1	select participants.id , participants.name from performance_score join participants on performance_score.participant_id = participants.id group by participants.id having count ( * ) >= 2	SELECT T1.id ,  T1.Name FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2
1	select p.id , p.name , p.popularity from participants p join performance_score ps on p.id = ps.participant_id group by p.id order by count ( ps.songs_id ) asc	SELECT T1.id ,  T1.Name ,  T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id GROUP BY T1.id ORDER BY count(*)
1	select participants.id , participants.name from performance_score join participants on performance_score.participant_id = participants.id where performance_score.voice_sound_quality = 5 or performance_score.rhythm_tempo = 5	SELECT T1.id ,  T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id WHERE T2.voice_sound_quality  =  5 OR T2.rhythm_tempo  =  5
0	select performance_score.voice_sound_quality from performance_score join songs on performance_score.songs_id = songs.id where songs.name = 'The Balkan Girls' and songs.language = 'english'	SELECT T1.voice_sound_quality FROM performance_score AS T1 JOIN songs AS T2 ON T1.songs_id  =  T2.id WHERE T2.name  =  ' The Balkan Girls ' AND T2.language  =  'English'
1	select songs.id , songs.name from performance_score join songs on performance_score.songs_id = songs.id group by songs.id order by count ( * ) desc limit 1	SELECT T1.id ,  T1.name FROM songs AS T1 JOIN performance_score AS T2 ON T1.id  =  T2.songs_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
0	select count ( distinct performance_score.stage_presence ) from performance_score where stage_presence < 7 or stage_presence > 9	SELECT count(*) FROM performance_score WHERE stage_presence  <  7 OR stage_presence  >  9
1	select count ( * ) from songs where id not in ( select songs_id from performance_score )	SELECT count(*) FROM songs WHERE id NOT IN ( SELECT songs_id FROM performance_score );
1	select avg ( performance_score.rhythm_tempo ) , songs.language from performance_score join songs on performance_score.songs_id = songs.id group by songs.language	SELECT avg(T2.rhythm_tempo) ,  T1.language FROM songs AS T1 JOIN performance_score AS T2 ON T2.songs_id  =  T1.id GROUP BY T1.language
0	select distinct participants.name from performance_score join participants on performance_score.participant_id = participants.id join songs on songs.id = performance_score.songs_id where songs.language = 'english'	SELECT DISTINCT T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id JOIN songs AS T3 ON T3.id  =  T2.songs_id WHERE T3.language  =  'English'
1	select participants.name , participants.popularity from performance_score join participants on performance_score.participant_id = participants.id join songs on songs.id = performance_score.songs_id where songs.language = 'Croatian' intersect select participants.name , participants.popularity from performance_score join participants on performance_score.participant_id = participants.id join songs on performance_score.songs_id = songs.id where songs.language = 'English'	SELECT T1.name ,  T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id JOIN songs AS T3 ON T3.id  =  T2.songs_id WHERE T3.language  =  'Croatian' INTERSECT SELECT T1.name ,  T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id JOIN songs AS T3 ON T3.id  =  T2.songs_id WHERE T3.language  =  'English'
1	select name from songs where name like '%Is%'	SELECT name FROM songs WHERE name LIKE "%Is%"
0	sql placeholder	select t2.original_artist from performance_score as t1 join songs as t2 on t2.id  =  t1.songs_id where t1.rhythm_tempo  >  5 order by t1.voice_sound_quality desc
1	select count ( * ) from city	SELECT count(*) FROM City
1	select count ( * ) from city	SELECT count(*) FROM City
1	select distinct state from city	select distinct state from city
1	select distinct state from city	SELECT DISTINCT state FROM City
1	select count ( distinct country ) from city	SELECT count(DISTINCT country) FROM City
0	select count ( * ) from city	SELECT count(DISTINCT country) FROM City
1	select city_name , city_code , state , country from city	SELECT city_name ,  city_code ,  state ,  country FROM City
1	select city_name , city_code , state , country from city	SELECT city_name ,  city_code ,  state ,  country FROM City
1	select latitude , longitude from city where city_name = 'Baltimore'	SELECT latitude ,  longitude FROM City WHERE city_name  =  "Baltimore"
1	select latitude , longitude from city where city_name = 'Baltimore'	SELECT latitude ,  longitude FROM City WHERE city_name  =  "Baltimore"
1	select city_name from city where state = 'PA'	SELECT city_name FROM City WHERE state  =  "PA"
1	select city_name from city where state = 'PA'	SELECT city_name FROM City WHERE state  =  "PA"
0	select count ( * ) from city where country = 'Canada'	SELECT count(*) FROM City WHERE country  =  "CANADA"
0	select count ( * ) from city where country = 'Canada'	SELECT count(*) FROM City WHERE country  =  "CANADA"
1	select city_name from city where country = 'USA' order by latitude asc	SELECT city_name FROM City WHERE country  =  "USA" ORDER BY latitude
1	select city_name from city where country = 'USA' order by latitude asc	SELECT city_name FROM City WHERE country  =  "USA" ORDER BY latitude
1	select state , count ( * ) from city group by state	SELECT state ,  count(*) FROM City GROUP BY state
1	select state , count ( * ) from city group by state	SELECT state ,  count(*) FROM City GROUP BY state
1	select country , count ( * ) from city group by country	select country ,  count(*) from city group by country
1	select count ( * ) , country from city group by country	SELECT country ,  count(*) FROM City GROUP BY country
1	select state from city group by state having count ( * ) >= 2	SELECT state FROM City GROUP BY state HAVING count(*)  >=  2
1	select state from city group by state having count ( * ) >= 2	SELECT state FROM City GROUP BY state HAVING count(*)  >=  2
0	select c.state from city c group by c.state having count ( c.city_code ) = ( select max ( cnt ) from ( select count ( * ) as cnt from city group by state ) )	SELECT state FROM City GROUP BY state ORDER BY count(*) DESC LIMIT 1
0	with citycounts as ( select state , count ( city_code ) as num_cities from city group by state ) select state from citycounts where num_cities = ( select max ( num_cities ) from citycounts )	SELECT state FROM City GROUP BY state ORDER BY count(*) DESC LIMIT 1
0	with citycounts as ( select country , count ( city_code ) as num_cities from city group by country ) select country from citycounts where num_cities = ( select min ( num_cities ) from citycounts )	SELECT country FROM City GROUP BY country ORDER BY count(*) ASC LIMIT 1
0	select country from city group by country having count ( city_code ) = ( select min ( cnt ) from ( select count ( city_code ) as cnt from city group by country ) )	SELECT country FROM City GROUP BY country ORDER BY count(*) ASC LIMIT 1
1	select student.fname , student.lname from city join student on city.city_code = student.city_code where city.state = 'MD'	SELECT T2.Fname ,  T2.Lname FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  "MD"
0	sql placeholder	SELECT T2.Fname ,  T2.Lname FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  "MD"
0	select count ( * ) from city join student on city.city_code = student.city_code where city.country = 'China'	SELECT count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.country  =  "CHINA"
0	select count ( * ) from city join student on city.city_code = student.city_code where city.country = 'China'	SELECT count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.country  =  "CHINA"
1	select student.fname , student.major from city join student on city.city_code = student.city_code where city.city_name = 'Baltimore'	SELECT T2.Fname ,  T2.Major FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.city_name  =  "Baltimore"
1	select student.fname , student.major from city join student on city.city_code = student.city_code where city.city_name = 'Baltimore'	SELECT T2.Fname ,  T2.Major FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.city_name  =  "Baltimore"
1	select city.country , count ( * ) from city join student on city.city_code = student.city_code group by city.country	SELECT T1.country ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country
1	select country , count ( * ) from city join student on city.city_code = student.city_code group by country	SELECT T1.country ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country
0	select city.city_name , count ( * ) from city join student on city.city_code = student.city_code group by city.city_name	SELECT T1.city_name ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code
0	select city.city_name , count ( * ) from city join student on city.city_code = student.city_code group by city.city_name	SELECT T1.city_name ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code
0	select c.state from city c join student s on c.city_code = s.city_code group by c.state having count ( s.sex ) = ( select max ( student_count ) from ( select count ( * ) as student_count from student group by city_code ) )	SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state ORDER BY count(*) DESC LIMIT 1
0	select c.state from city c join student s on c.city_code = s.city_code group by c.state having count ( s.city_code ) = ( select max ( count ) from ( select count ( city_code ) as count from student group by city_code ) )	SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state ORDER BY count(*) DESC LIMIT 1
0	with studentcounts as ( select country , count ( city_code ) as num_students from city group by country ) select country from studentcounts where num_students = ( select min ( num_students ) from studentcounts )	SELECT T1.country FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country ORDER BY count(*) LIMIT 1
0	select country from city group by country order by count ( * ) asc limit 1	SELECT T1.country FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country ORDER BY count(*) LIMIT 1
1	select city.city_name from city join student on city.city_code = student.city_code group by student.city_code having count ( * ) >= 3	SELECT T1.city_name FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code HAVING count(*)  >=  3
1	select city.city_name from city join student on city.city_code = student.city_code group by student.city_code having count ( * ) >= 3	SELECT T1.city_name FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code HAVING count(*)  >=  3
1	select city.state from city join student on city.city_code = student.city_code group by city.state having count ( * ) > 5	SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state HAVING count(*)  >  5
0	select state from city group by state having count ( * ) > 5	SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state HAVING count(*)  >  5
1	select stuid from student where city_code not in ( select city_code from city where country = 'USA' )	SELECT StuID FROM Student EXCEPT SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE country  =  "USA"
1	select stuid from student where city_code not in ( select city.city_code from city join student on city.city_code = student.city_code where city.country = 'USA' )	SELECT StuID FROM Student EXCEPT SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE country  =  "USA"
1	select student.stuid from city join student on city.city_code = student.city_code where student.sex = 'F' and city.state = 'PA'	SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  "PA"  AND T2.sex  =  'F'
1	select student.stuid from city join student on city.city_code = student.city_code where city.state = 'PA' and student.sex = 'F'	SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  "PA"  AND T2.sex  =  'F'
0	select stuid from student where sex = 'M' and city_code != 'USA'	SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T2.sex  =  'M' AND T1.country != "USA"
0	select stuid from student where sex = 'M' and city_code != 'USA'	SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T2.sex  =  'M' AND T1.country != "USA"
0	select distance from city join direct_distance on city.city_code = direct_distance.city2_code where city.city_name = 'BAL' or city.city_name = 'CHI'	SELECT distance FROM Direct_distance WHERE city1_code  =  "BAL" AND city2_code  =  "CHI"
0	select distance from city join direct_distance on city.city_code = direct_distance.city2_code where city.city_name = 'BAL' or city.city_name = 'CHI'	SELECT distance FROM Direct_distance WHERE city1_code  =  "BAL" AND city2_code  =  "CHI"
0	select distance from city join direct_distance on city.city_code = direct_distance.city2_code where city.city_name = 'Boston' and city.city_name = 'Newark'	SELECT distance FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  "Boston" AND T3.city_name  =  "Newark"
0	select distance from city join direct_distance on city.city_code = direct_distance.city2_code where city.city_name = 'Boston' and city.city_name = 'Newark'	SELECT distance FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  "Boston" AND T3.city_name  =  "Newark"
1	select avg ( distance ) , min ( distance ) , max ( distance ) from direct_distance	SELECT avg(distance) ,  min(distance) ,  max(distance) FROM Direct_distance
1	select avg ( distance ) , min ( distance ) , max ( distance ) from direct_distance	SELECT avg(distance) ,  min(distance) ,  max(distance) FROM Direct_distance
0	select city_code from city where city_code in ( select city2_code from direct_distance group by city2_code having max ( distance ) )	SELECT city1_code ,  city2_code FROM Direct_distance ORDER BY distance DESC LIMIT 1
0	select c.city_code from city c inner join direct_distance d on c.city_code = d.city1_code where d.distance = ( select max ( distance ) from direct_distance )	SELECT city1_code ,  city2_code FROM Direct_distance ORDER BY distance DESC LIMIT 1
0	select city.city_code from city join direct_distance on city.city_code = direct_distance.city2_code where direct_distance.distance > ( select avg ( distance ) from direct_distance ) group by city.city_code having count ( * ) > 0	SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  >  (SELECT avg(distance) FROM Direct_distance)
0	select c.city_code from city c join direct_distance d on c.city_code = d.city1_code where d.distance > ( select avg ( distance ) from direct_distance )	SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  >  (SELECT avg(distance) FROM Direct_distance)
0	select city_code from city where city_code in ( select city2_code from direct_distance where distance < 1000 )	SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  <  1000
0	select city.city_code from city join direct_distance on city.city_code = direct_distance.city1_code where direct_distance.distance < 1000	SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  <  1000
0	select sum ( distance ) from city join direct_distance on city.city_code = direct_distance.city1_code where city.city_name = 'BAL'	SELECT sum(distance) FROM Direct_distance WHERE city1_code  =  "BAL"
0	select sum ( distance ) from city join direct_distance on city.city_code = direct_distance.city1_code where city.city_name = 'BAL'	SELECT sum(distance) FROM Direct_distance WHERE city1_code  =  "BAL"
1	select avg ( distance ) from city join direct_distance on city.city_code = direct_distance.city1_code where city.city_name = 'Boston'	SELECT avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code WHERE T2.city_name  =  "Boston"
1	select avg ( distance ) from city join direct_distance on city.city_code = direct_distance.city1_code where city.city_name = 'Boston'	SELECT avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code WHERE T2.city_name  =  "Boston"
0	sql placeholder	SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  "Chicago" ORDER BY distance LIMIT 1
0	select city_name from city where city_code = ( select min ( direct_distance.city2_code ) from direct_distance join city on direct_distance.city1_code = city.city_code where city.city_name = 'Chicago' )	SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  "Chicago" ORDER BY distance LIMIT 1
0	sql placeholder	SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  "Boston" ORDER BY distance DESC LIMIT 1
0	sql placeholder	SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  "Boston" ORDER BY distance DESC LIMIT 1
1	select c.city_code , sum ( d.distance ) from city c join direct_distance d on c.city_code = d.city1_code group by c.city_code	SELECT city1_code ,  sum(distance) FROM Direct_distance GROUP BY city1_code
1	select city.city_code , sum ( direct_distance.distance ) from city join direct_distance on city.city_code = direct_distance.city1_code group by city.city_code	SELECT city1_code ,  sum(distance) FROM Direct_distance GROUP BY city1_code
0	select city.city_name , avg ( direct_distance.distance ) from city join direct_distance on city.city_code = direct_distance.city2_code group by city.city_name	SELECT T2.city_name ,  avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code GROUP BY T1.city1_code
1	select city.city_name , avg ( direct_distance.distance ) from city join direct_distance on city.city_code = direct_distance.city1_code group by city.city_code	SELECT T2.city_name ,  avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code GROUP BY T1.city1_code
0	select distance from student join direct_distance on student.city_code = direct_distance.city1_code join city on direct_distance.city2_code = city.city_code where student.fname = 'Linda' and student.lname = 'Smith'	SELECT distance FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  "Linda" AND T2.Lname  =  "Smith" AND T3.Fname  =  "Tracy" AND T3.Lname  =  "Kim"
1	select distance from direct_distance join city on direct_distance.city1_code = city.city_code join student on city.city_code = student.city_code where student.fname = 'Linda' and student.lname = 'Smith' intersect select distance from direct_distance join city on direct_distance.city2_code = city.city_code join student on direct_distance.city1_code = city.city_code where student.fname = 'Tracy' and student.lname = 'Kim'	SELECT distance FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  "Linda" AND T2.Lname  =  "Smith" AND T3.Fname  =  "Tracy" AND T3.Lname  =  "Kim"
0	select s.fname , s.lname from student s where exists ( select 1 from direct_distance d where d.city1_code = s.city_code and s.fname = 'Linda' ) and exists ( select 1 from direct_distance d where d.city1_code = s.city_code and s.fname = 'Smith' )	SELECT T3.Fname ,  T3.Lname FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  "Linda" AND T2.Lname  =  "Smith" ORDER BY distance DESC LIMIT 1
0	sql placeholder	SELECT T3.Fname ,  T3.Lname FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  "Linda" AND T2.Lname  =  "Smith" ORDER BY distance DESC LIMIT 1
0	select city.state from city join student on city.city_code = student.city_code where student.fname = 'LINDA'	SELECT state FROM Student AS T1 JOIN City AS T2 ON T1.city_code  =  T2.city_code WHERE T1.Fname  =  "Linda"
0	select city.state from city join student on city.city_code = student.city_code where student.fname = 'LINDA'	SELECT state FROM Student AS T1 JOIN City AS T2 ON T1.city_code  =  T2.city_code WHERE T1.Fname  =  "Linda"
1	select * from sailors where age > 30	SELECT * FROM Sailors WHERE age  >  30
1	select * from sailors where age > 30	SELECT * FROM Sailors WHERE age  >  30
1	select name , age from sailors where age < 30	SELECT name ,  age FROM Sailors WHERE age  <  30
1	select name , age from sailors where age < 30	SELECT name ,  age FROM Sailors WHERE age  <  30
0	select boats.name from boats join reserves on boats.bid = reserves.bid join sailors on reserves.sid = sailors.sid where sailors.name = '1'	SELECT DISTINCT bid FROM Reserves WHERE sid = 1
1	select distinct bid from reserves join sailors on reserves.sid = sailors.sid where sailors.sid = 1	SELECT DISTINCT bid FROM Reserves WHERE sid = 1
0	select name from boats join reserves on boats.bid = reserves.bid where boats.name = '102'	SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102
0	select name from sailors where sid in ( select sid from reserves where bid = 102 )	SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102
1	select distinct bid from reserves	SELECT DISTINCT bid FROM Reserves
0	select r.sid from reserves r left join boats b on r.bid = b.bid group by r.sid	SELECT DISTINCT bid FROM Reserves
1	select name from sailors where name like '%e%'	SELECT name FROM Sailors WHERE name LIKE '%e%'
1	select name from sailors where name like '%e%'	SELECT name FROM Sailors WHERE name LIKE '%e%'
0	select distinct s.sid from sailors s where s.age > ( select max ( age ) from sailors )	SELECT DISTINCT sid FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors);
1	select distinct sid from sailors where age != ( select min ( age ) from sailors )	SELECT DISTINCT sid FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors);
0	select distinct name from sailors where age > ( select max ( age ) from sailors where rating > 7 )	SELECT DISTINCT name FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors WHERE rating  >  7);
0	select distinct name from sailors where age > ( select max ( age ) from sailors where rating > 7 )	SELECT DISTINCT name FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors WHERE rating  >  7);
1	select sailors.name , reserves.sid from sailors join reserves on sailors.sid = reserves.sid group by reserves.sid having count ( * ) >= 1	SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid
1	select sailors.name , reserves.sid from sailors join reserves on sailors.sid = reserves.sid group by reserves.sid having count ( * ) >= 1	SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid
1	select sailors.sid , sailors.name from sailors join reserves on sailors.sid = reserves.sid group by sailors.sid having count ( * ) > 1	SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid GROUP BY T2.sid HAVING COUNT(*)  >  1
0	select distinct sailors.name from sailors join reserves on sailors.sid = reserves.sid group by sailors.sid having count ( * ) >= 2	select distinct t1.name ,  t1.sid from sailors as t1 join reserves as t2 on t1.sid  =  t2.sid group by t2.sid having count(*)  >=  2
0	select reserves.sid from reserves join boats on reserves.bid = boats.bid where boats.color = 'Red' or boats.color = 'Blue'	SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' OR T1.color  =  "blue"
0	select distinct s.sid from sailors s join reserves r on s.sid = r.sid join boats b on r.bid = b.bid where b.color = 'Red' or b.color = 'Blue'	SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' OR T1.color  =  "blue"
0	select name , sid from sailors where sid in ( select sid from reserves where bid in ('red' , 'blue' ) )	SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' OR T1.color  =  "blue"
1	select name , sid from sailors where sid in ( select sid from reserves where bid in ( select bid from boats where color = 'red' or color = 'blue' ) )	SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' OR T1.color  =  "blue"
1	select reserves.sid from reserves join boats on reserves.bid = boats.bid where boats.color = 'red' intersect select reserves.sid from reserves join boats on reserves.bid = boats.bid where boats.color = 'blue'	SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  "blue"
0	select distinct s.sid from sailors s join reserves r on s.sid = r.sid join boats b on r.bid = b.bid where b.color = 'red' and b.color = 'blue'	SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  "blue"
1	select sailors.name , reserves.sid from sailors join reserves on sailors.sid = reserves.sid join boats on reserves.bid = boats.bid where boats.color = 'red' intersect select sailors.name , reserves.sid from sailors join reserves on sailors.sid = reserves.sid join boats on reserves.bid = boats.bid where boats.color = 'blue'	SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  "blue"
0	select name , sid from sailors where sid in ( select reserves.sid from reserves join boats on reserves.bid = boats.bid where boats.color = 'red' or boats.color = 'blue' )	SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  "blue"
1	select sid from sailors except select sid from reserves	SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves
1	select sid from sailors except select sid from reserves	SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves
1	select name , sid from sailors where sid not in ( select sid from reserves )	SELECT sid ,  name FROM Sailors EXCEPT SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid
1	select name , sid from sailors where sid not in ( select sid from reserves )	SELECT sid ,  name FROM Sailors EXCEPT SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid
1	select sid from sailors except select sid from reserves	SELECT sid FROM Sailors EXCEPT SELECT T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid
1	select sid from sailors except select sid from reserves	SELECT sid FROM Sailors EXCEPT SELECT T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid
0	select name from sailors where sid in ( select sid from reserves where bid = 103 )	SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T2.bid  =  103
0	select name from sailors where sid in ( select sid from reserves where bid = 103 )	SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T2.bid  =  103
0	select name from sailors where rating > ( select max ( rating ) from sailors where name = 'Luis' )	SELECT name FROM Sailors WHERE rating  >  (SELECT min(rating) FROM Sailors WHERE name  =  'Luis')
0	select name from sailors where rating > ( select max ( rating ) from sailors where name = 'Luis' )	SELECT name FROM Sailors WHERE rating  >  (SELECT min(rating) FROM Sailors WHERE name  =  'Luis')
1	select name from sailors where rating > ( select max ( rating ) from sailors where name = 'Luis' )	SELECT name FROM Sailors WHERE rating  >  (SELECT max(rating) FROM Sailors WHERE name  =  'Luis')
1	select name from sailors where rating > ( select max ( rating ) from sailors where name = 'Luis' )	SELECT name FROM Sailors WHERE rating  >  (SELECT max(rating) FROM Sailors WHERE name  =  'Luis')
0	sql placeholder	SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T1.rating  >  2
1	select name , sid from sailors where rating >= 3 and sid in ( select sid from reserves where rating >= 3 )	SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T1.rating  >  2
1	select name , age from sailors where age = ( select max ( age ) from sailors )	SELECT name ,  age FROM Sailors WHERE age  =  ( SELECT max(age) FROM Sailors )
1	select s.name , s.age from sailors s where s.age = ( select max ( age ) from sailors )	SELECT name ,  age FROM Sailors WHERE age  =  ( SELECT max(age) FROM Sailors )
1	select count ( * ) from sailors	SELECT COUNT(*) FROM Sailors
1	select count ( * ) from sailors	SELECT COUNT(*) FROM Sailors
1	select avg ( age ) from sailors where rating = 7	SELECT AVG(age) FROM Sailors WHERE rating  =  7
1	select avg ( age ) from sailors where rating = 7	SELECT AVG(age) FROM Sailors WHERE rating  =  7
1	select count ( * ) from sailors where name like 'D%'	select count(*) from sailors where name like 'd%'
1	select count ( * ) from sailors where name like 'D%'	select count(*) from sailors where name like 'd%'
1	select avg ( rating ) , max ( age ) from sailors	SELECT AVG(rating) ,  MAX(age) FROM Sailors
1	select avg ( rating ) , max ( age ) from sailors	SELECT AVG(rating) ,  MAX(age) FROM Sailors
0	select count ( * ) , boats.name from boats join reserves on boats.bid = reserves.bid group by boats.name	SELECT bid ,  count(*) FROM Reserves GROUP BY bid
0	select count ( * ) , boats.name from boats join reserves on boats.bid = reserves.bid group by boats.name	SELECT bid ,  count(*) FROM Reserves GROUP BY bid
1	select bid , count ( * ) from reserves where bid > 50 group by bid	SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING bid  >  50
0	select boats.name , count ( * ) from boats join reserves on boats.bid = reserves.bid where reserves.sid > 50 group by boats.bid	SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING bid  >  50
0	select count ( * ) , boats.name from boats join reserves on boats.bid = reserves.bid group by boats.bid having count ( * ) > 1	SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING count(*)  >  1
0	select count ( * ) , boats.name from boats join reserves on boats.bid = reserves.bid group by boats.bid having count ( * ) > 1	SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING count(*)  >  1
0	select count ( * ) , boats.name from boats join reserves on boats.bid = reserves.bid join sailors on reserves.sid = sailors.sid where reserves.bid > 1 group by boats.name	SELECT bid ,  count(*) FROM Reserves WHERE sid  >  1 GROUP BY bid
0	select boats.name , count ( * ) from boats join reserves on boats.bid = reserves.bid join sailors on reserves.sid = sailors.sid where sailors.sid > 1 group by boats.name	SELECT bid ,  count(*) FROM Reserves WHERE sid  >  1 GROUP BY bid
0	select avg ( age ) , rating from sailors where sid in ( select reserves.sid from reserves join boats on reserves.bid = boats.bid where boats.color = 'Red' ) group by rating	SELECT T1.rating ,  avg(T1.age) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red' GROUP BY T1.rating
0	select rating , avg ( age ) from sailors where sid in ( select reserves.sid from reserves join boats on reserves.bid = boats.bid where boats.color = 'red' ) group by rating	SELECT T1.rating ,  avg(T1.age) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red' GROUP BY T1.rating
1	select name , rating , age from sailors order by rating asc , age	SELECT name ,  rating ,  age FROM Sailors ORDER BY rating ,  age
1	select name , rating , age from sailors order by rating asc , age	SELECT name ,  rating ,  age FROM Sailors ORDER BY rating ,  age
1	select count ( * ) from boats	SELECT count(*) FROM Boats
1	select count ( * ) from boats	SELECT count(*) FROM Boats
1	select count ( * ) from boats where color = 'red'	SELECT count(*) FROM Boats WHERE color  =  'red'
0	select count ( * ) from boats where color = 'Red'	SELECT count(*) FROM Boats WHERE color  =  'red'
1	select boats.name from boats join reserves on boats.bid = reserves.bid join sailors on reserves.sid = sailors.sid where sailors.age between 20 and 30	SELECT T3.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T1.age BETWEEN 20 AND 30
1	select boats.name from boats join reserves on boats.bid = reserves.bid join sailors on reserves.sid = sailors.sid where sailors.age between 20 and 30	SELECT T3.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T1.age BETWEEN 20 AND 30
0	select sailors.name from sailors join reserves on sailors.sid = reserves.sid join boats on reserves.bid = boats.bid where sailors.rating > ( select max ( rating ) from sailors where sid = boats.bid and boats.color = 'Red' )	SELECT name FROM Sailors WHERE rating  >  (SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red')
0	select sailors.name from sailors join reserves on sailors.sid = reserves.sid join boats on reserves.bid = boats.bid where sailors.rating > ( select max ( rating ) from sailors where sid = boats.bid and boats.color = 'Red' )	SELECT name FROM Sailors WHERE rating  >  (SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red')
1	select max ( rating ) from sailors	SELECT max(rating) FROM Sailors
1	select max ( rating ) from sailors	SELECT max(rating) FROM Sailors
0	select name from sailors where sid in ( select sid from reserves where bid in ( select bid from boats where name = 'Melon' ) )	SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.name  =  'Melon'
0	select name from sailors where sid in ( select reserves.sid from reserves join boats on reserves.bid = boats.bid where boats.name = 'Melon' )	SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.name  =  'Melon'
1	select name , age from sailors order by rating desc	SELECT name ,  age FROM Sailors ORDER BY rating DESC
1	select name , age from sailors order by rating desc	SELECT name ,  age FROM Sailors ORDER BY rating DESC
0	select model from headphone where price = ( select max ( price ) from headphone )	SELECT model FROM headphone ORDER BY price DESC LIMIT 1
0	select model from headphone where price = ( select max ( price ) from headphone )	SELECT model FROM headphone ORDER BY price DESC LIMIT 1
1	select distinct model from headphone order by model asc	SELECT DISTINCT model FROM headphone ORDER BY model
1	select distinct model from headphone order by model asc	SELECT DISTINCT model FROM headphone ORDER BY model
0	select class from headphone group by class having count ( * ) = ( select max ( cnt ) from ( select count ( * ) as cnt from headphone group by class ) )	SELECT CLASS FROM headphone GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1
0	select class from headphone group by class having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from headphone group by class ) )	SELECT CLASS FROM headphone GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1
1	select class from headphone group by class having count ( * ) > 2	SELECT CLASS FROM headphone GROUP BY CLASS HAVING count(*)  >  2
0	select class from headphone group by class having count ( * ) <= 2	SELECT CLASS FROM headphone GROUP BY CLASS HAVING count(*)  >  2
1	select class , count ( * ) from headphone where price > 200 group by class	SELECT count(*) ,  CLASS FROM headphone WHERE price  >  200 GROUP BY CLASS
1	select class , count ( * ) from headphone where price > 200 group by class	SELECT count(*) ,  CLASS FROM headphone WHERE price  >  200 GROUP BY CLASS
1	select count ( distinct earpads ) from headphone	SELECT count(DISTINCT earpads) FROM headphone
1	select count ( distinct earpads ) from headphone	SELECT count(DISTINCT earpads) FROM headphone
1	select earpads from headphone group by earpads order by count ( * ) desc limit 2	SELECT earpads FROM headphone GROUP BY earpads ORDER BY count(*) DESC LIMIT 2
1	select earpads from headphone group by earpads order by count ( * ) desc limit 2	SELECT earpads FROM headphone GROUP BY earpads ORDER BY count(*) DESC LIMIT 2
0	select model , class , construction from headphone where price = ( select min ( price ) from headphone )	SELECT model ,  CLASS ,  construction FROM headphone ORDER BY price LIMIT 1
0	select model , class , construction from headphone where price = ( select min ( price ) from headphone )	SELECT model ,  CLASS ,  construction FROM headphone ORDER BY price LIMIT 1
1	select construction , avg ( price ) from headphone group by construction	SELECT construction ,  avg(price) FROM headphone GROUP BY construction
1	select avg ( price ) , construction from headphone group by construction	SELECT construction ,  avg(price) FROM headphone GROUP BY construction
1	select class from headphone where earpads = 'Bowls' intersect select class from headphone where earpads = 'Comfort Pads'	SELECT CLASS FROM headphone WHERE earpads  =  'Bowls' INTERSECT SELECT CLASS FROM headphone WHERE earpads  =  'Comfort Pads'
1	select class from headphone where earpads = 'Bowls' intersect select class from headphone where earpads = 'Comfort Pads'	SELECT CLASS FROM headphone WHERE earpads  =  'Bowls' INTERSECT SELECT CLASS FROM headphone WHERE earpads  =  'Comfort Pads'
0	select earpads from headphone except select earpads from headphone where construction = 'plastic'	SELECT earpads FROM headphone EXCEPT SELECT earpads FROM headphone WHERE construction  =  'Plastic'
0	select distinct earpads from headphone where construction != 'plastic'	SELECT earpads FROM headphone EXCEPT SELECT earpads FROM headphone WHERE construction  =  'Plastic'
1	select model from headphone where price < ( select avg ( price ) from headphone )	SELECT model FROM headphone WHERE price  <  (SELECT avg(price) FROM headphone)
1	select model from headphone where price < ( select avg ( price ) from headphone )	SELECT model FROM headphone WHERE price  <  (SELECT avg(price) FROM headphone)
1	select name from store order by date_opened asc	SELECT name FROM store ORDER BY date_opened
1	select name from store order by date_opened asc	SELECT name FROM store ORDER BY date_opened
1	select name , parking from store where neighborhood = 'Tarzana'	SELECT name ,  parking FROM store WHERE neighborhood  =  'Tarzana'
1	select name , parking from store where neighborhood = 'Tarzana'	SELECT name ,  parking FROM store WHERE neighborhood  =  'Tarzana'
1	select count ( distinct neighborhood ) from store	SELECT count(DISTINCT neighborhood) FROM store
1	select count ( distinct neighborhood ) from store	SELECT count(DISTINCT neighborhood) FROM store
1	select neighborhood , count ( * ) from store group by neighborhood	SELECT count(*) ,  neighborhood FROM store GROUP BY neighborhood
1	select neighborhood , count ( * ) from store group by neighborhood	SELECT count(*) ,  neighborhood FROM store GROUP BY neighborhood
0	select store.name , count ( * ) from stock join store on stock.store_id = store.store_id group by stock.store_id order by count ( * ) desc limit 1	SELECT t1.name ,  sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id GROUP BY t2.store_id ORDER BY sum(t2.quantity) DESC LIMIT 1
0	select store.name , sum ( stock.quantity ) from stock join store on stock.store_id = store.store_id group by store.store_id	SELECT t1.name ,  sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id GROUP BY t2.store_id ORDER BY sum(t2.quantity) DESC LIMIT 1
1	select name from store where store_id not in ( select distinct store_id from stock where headphone_id = stock.headphone_id )	SELECT name FROM store WHERE store_id NOT IN (SELECT store_id FROM stock)
1	select name from store where store_id not in ( select distinct store_id from stock where quantity > 0 )	SELECT name FROM store WHERE store_id NOT IN (SELECT store_id FROM stock)
1	select model from headphone where headphone_id not in ( select headphone_id from stock )	SELECT model FROM headphone WHERE headphone_id NOT IN (SELECT headphone_id FROM stock)
1	select model from headphone where headphone_id not in ( select headphone_id from stock )	SELECT model FROM headphone WHERE headphone_id NOT IN (SELECT headphone_id FROM stock)
1	select headphone.model from stock join headphone on stock.headphone_id = headphone.headphone_id group by headphone.model order by sum ( stock.quantity ) desc limit 1	SELECT t1.model FROM headphone AS t1 JOIN stock AS t2 ON t1.headphone_id  =  t2.headphone_id GROUP BY t1.model ORDER BY sum(t2.quantity) DESC LIMIT 1
1	select headphone.model from stock join headphone on stock.headphone_id = headphone.headphone_id group by headphone.model order by sum ( stock.quantity ) desc limit 1	SELECT t1.model FROM headphone AS t1 JOIN stock AS t2 ON t1.headphone_id  =  t2.headphone_id GROUP BY t1.model ORDER BY sum(t2.quantity) DESC LIMIT 1
0	select count ( * ) from stock join store on stock.store_id = store.store_id where store.name = 'Woodman'	SELECT sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id WHERE t1.name  =  'Woodman'
1	select sum ( stock.quantity ) from stock join store on stock.store_id = store.store_id where store.name = 'Woodman'	SELECT sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id WHERE t1.name  =  'Woodman'
0	select neighborhood from store left join stock on store.store_id = stock.store_id where stock.headphone_id is null	SELECT Neighborhood FROM store EXCEPT SELECT t1.Neighborhood FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id
0	select neighborhood from store where store_id not in ( select distinct store_id from stock where headphone_id = stock.headphone_id )	SELECT Neighborhood FROM store EXCEPT SELECT t1.Neighborhood FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id
1	select count ( * ) from author	SELECT count(*) FROM Author
1	select count ( * ) from author	SELECT count(*) FROM Author
1	select count ( * ) from paper	SELECT count(*) FROM Paper
1	select count ( * ) from paper	SELECT count(*) FROM Paper
1	select count ( * ) from affiliation	SELECT count(*) FROM Affiliation
1	select count ( * ) from affiliation	SELECT count(*) FROM Affiliation
0	select count ( * ) from paper where year = 2000 and year = 'NAACL'	SELECT count(*) FROM Paper WHERE venue  =  "NAACL" AND YEAR  =  2000
0	select count ( * ) from paper where year = 2000 and year = 'NAACL'	SELECT count(*) FROM Paper WHERE venue  =  "NAACL" AND YEAR  =  2000
1	select count ( * ) from affiliation join author_list on affiliation.affiliation_id = author_list.affiliation_id join paper on author_list.paper_id = paper.paper_id where affiliation.name = 'Columbia University' and paper.year = 2009	SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE "Columbia University" AND T1.year  =  2009
1	select count ( * ) from affiliation join author_list on affiliation.affiliation_id = author_list.affiliation_id join paper on author_list.paper_id = paper.paper_id where affiliation.name = 'Columbia University' and paper.year = 2009	SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE "Columbia University" AND T1.year  =  2009
0	select name , address from affiliation	SELECT DISTINCT name ,  address FROM Affiliation
0	select name , address from affiliation	SELECT DISTINCT name ,  address FROM Affiliation
0	select venue , year from paper order by year asc	SELECT DISTINCT venue ,  YEAR FROM paper ORDER BY YEAR
0	select distinct venue from paper order by year asc	SELECT DISTINCT venue ,  YEAR FROM paper ORDER BY YEAR
0	select paper.title , paper.paper_id from affiliation join author_list on affiliation.affiliation_id = author_list.affiliation_id join paper on author_list.paper_id = paper.paper_id where affiliation.name = 'Harvard University'	SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name  =  "Harvard University"
0	select paper.title , author_list.paper_id from affiliation join author_list on affiliation.affiliation_id = author_list.affiliation_id join paper on author_list.paper_id = paper.paper_id where affiliation.name = 'Harvard University'	SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name  =  "Harvard University"
0	select paper.title , paper.paper_id from author_list join paper on author_list.paper_id = paper.paper_id join author on author_list.author_id = author.author_id where author.name = 'Mckeown'	SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T3.name LIKE "%Mckeown%"
0	select paper.title , paper.paper_id from author_list join paper on author_list.paper_id = paper.paper_id join author on author_list.author_id = author.author_id where author.name = 'Mckeown'	SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T3.name LIKE "%Mckeown%"
1	select title , paper_id from paper where paper_id in ( select paper_id from author_list join affiliation on author_list.affiliation_id = affiliation.affiliation_id where affiliation.name = 'Stanford University' intersect select paper_id from author_list join affiliation on author_list.affiliation_id = affiliation.affiliation_id where affiliation.name = 'Columbia University' )	SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE "Stanford University" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE "Columbia University"
1	select title , paper_id from paper where paper_id in ( select paper_id from author_list join affiliation on author_list.affiliation_id = affiliation.affiliation_id where affiliation.name = 'Stanford University' intersect select paper_id from author_list join affiliation on author_list.affiliation_id = affiliation.affiliation_id where affiliation.name = 'Columbia University' )	SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE "Stanford University" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE "Columbia University"
0	sql placeholder	SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE "%Mckeown ,  Kathleen%" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE "%Rambow ,  Owen%"
1	select paper.title , paper.paper_id from author_list join paper on author_list.paper_id = paper.paper_id join author on author_list.author_id = author.author_id where author.name = 'Mckeown' intersect select paper.title , paper.paper_id from author_list join paper on author_list.paper_id = paper.paper_id join author on author_list.author_id = author.author_id where author.name = 'Rambow'	SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE "%Mckeown ,  Kathleen%" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE "%Rambow ,  Owen%"
0	select paper.title , paper.paper_id from author_list join paper on author_list.paper_id = paper.paper_id join author on author_list.author_id = author.author_id where author.name = 'Mckeown' except select paper.title , paper.paper_id from author_list join paper on author_list.paper_id = paper.paper_id join author on author_list.author_id = author.author_id where author.name = 'Rambow'	SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE "%Mckeown%" EXCEPT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE "%Rambow%"
0	select paper.title , paper.paper_id from author_list join paper on author_list.paper_id = paper.paper_id join author on author_list.author_id = author.author_id where author.name = 'Mckeown' except select paper.title , paper.paper_id from author_list join paper on author_list.paper_id = paper.paper_id join author on author_list.author_id = author.author_id where author.name = 'Rambow'	SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE "%Mckeown%" EXCEPT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE "%Rambow%"
1	select title , paper_id from paper where paper_id in ( select paper_id from author_list where author_id in ( select author_id from author where name = 'Mckeown' and name = 'Kathleen' ) )	SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE  T3.name LIKE "%Mckeown ,  Kathleen%" OR T3.name LIKE "%Rambow ,  Owen%"
1	select title , paper_id from paper where paper_id in ( select paper_id from author_list where author_id in ( select author_id from author where name = 'Mckeown' and name = 'Kathleen' ) )	SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE  T3.name LIKE "%Mckeown ,  Kathleen%" OR T3.name LIKE "%Rambow ,  Owen%"
1	select author.name , count ( * ) from author_list join author on author_list.author_id = author.author_id group by author.author_id order by count ( * ) desc	SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id ORDER BY count(*) DESC
0	select author.name , count ( * ) from author join author_list on author.author_id = author_list.author_id group by author.author_id order by count ( * ) asc	SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id ORDER BY count(*) DESC
0	select affiliation.name from affiliation join author_list on affiliation.affiliation_id = author_list.affiliation_id group by affiliation.affiliation_id order by count ( * ) asc	SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id ORDER BY count(*) DESC
0	select affiliation.name from affiliation join author_list on affiliation.affiliation_id = author_list.affiliation_id order by author_list.paper_id asc	SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id ORDER BY count(*) DESC
1	select author.name from author_list join author on author_list.author_id = author.author_id group by author.author_id having count ( * ) > 50	SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  >  50
1	select author.name from author_list join author on author_list.author_id = author.author_id group by author_list.author_id having count ( * ) > 50	SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  >  50
1	select author.name from author_list join author on author_list.author_id = author.author_id group by author.author_id having count ( * ) = 1	SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  =  1
1	select author.name from author_list join author on author_list.author_id = author.author_id group by author.author_id having count ( * ) = 1	SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  =  1
0	select venue , year from paper group by venue , year having count ( * ) = ( select max ( cnt ) from ( select count ( * ) as cnt from paper group by venue ) )	SELECT venue ,  YEAR FROM paper GROUP BY venue ,  YEAR ORDER BY count(*) DESC LIMIT 1
1	select venue , year from paper group by venue , year order by count ( * ) desc limit 1	SELECT venue ,  YEAR FROM paper GROUP BY venue ,  YEAR ORDER BY count(*) DESC LIMIT 1
1	select venue from paper group by venue order by count ( * ) asc limit 1	SELECT venue FROM paper GROUP BY venue ORDER BY count(*) LIMIT 1
1	select venue from paper group by venue order by count ( * ) asc limit 1	SELECT venue FROM paper GROUP BY venue ORDER BY count(*) LIMIT 1
1	select count ( * ) from citation join paper on citation.paper_id = paper.paper_id where paper.paper_id = 'A00-1002'	SELECT count(*) FROM Citation WHERE cited_paper_id  =  "A00-1002"
1	select count ( distinct paper.paper_id ) from citation join paper on citation.cited_paper_id = paper.paper_id where paper.paper_id = 'A00-1002'	SELECT count(*) FROM Citation WHERE cited_paper_id  =  "A00-1002"
1	select count ( * ) from citation join paper on citation.paper_id = paper.paper_id where paper.paper_id = 'D12-1027'	SELECT count(*) FROM Citation WHERE paper_id  =  "D12-1027"
1	select count ( * ) from citation join paper on citation.paper_id = paper.paper_id where paper.paper_id = 'D12-1027'	SELECT count(*) FROM Citation WHERE paper_id  =  "D12-1027"
0	select p.paper_id , count ( * ) as num_citations from paper p join citation c on p.paper_id = c.paper_id group by p.paper_id having num_citations = ( select max ( num_citations ) from ( select count ( * ) as num_citations from citation group by paper_id ) )	SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 1
0	select p.paper_id , count ( * ) as num_citations from paper p join citation c on p.paper_id = c.paper_id group by p.paper_id having num_citations = ( select max ( num_citations ) from ( select count ( * ) as num_citations from citation group by paper_id ) )	SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 1
0	select title from paper where paper_id in ( select paper_id from citation group by paper_id having count ( cited_paper_id ) = ( select max ( cnt ) from ( select count ( paper_id ) as cnt from citation group by paper_id ) ) )	SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T2.paper_id  =  T1.paper_id GROUP BY T1.paper_id ORDER BY count(*) DESC LIMIT 1
0	select title from paper where paper_id in ( select paper_id from citation group by paper_id having count ( cited_paper_id ) = ( select max ( cnt ) from ( select count ( paper_id ) as cnt from citation group by paper_id ) ) )	SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T2.paper_id  =  T1.paper_id GROUP BY T1.paper_id ORDER BY count(*) DESC LIMIT 1
0	select paper.title , count ( * ) from citation join paper on citation.paper_id = paper.paper_id group by citation.paper_id order by count ( * ) desc limit 10	SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 10
0	select p.title , count ( * ) as num_citations from paper p join citation c on p.paper_id = c.paper_id group by p.paper_id order by num_citations desc limit 10	SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 10
1	select count ( * ) from author join author_list on author.author_id = author_list.author_id where author.name = 'Mckeown , Kathleen'	select count(*) from citation as t1 join author_list as t2 on t1.cited_paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = "mckeown ,  kathleen"
1	select count ( * ) from author join author_list on author.author_id = author_list.author_id where author.name = 'Mckeown , Kathleen'	select count(*) from citation as t1 join author_list as t2 on t1.cited_paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = "mckeown ,  kathleen"
1	select count ( * ) from author join author_list on author.author_id = author_list.author_id where author.name = 'Mckeown' and author.name = 'Kathleen'	select count(*) from citation as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = "mckeown ,  kathleen"
1	select count ( * ) from citation where paper_id in ( select paper_id from author_list where author_id in ( select author_id from author where name = 'Mckeown' and name = 'Kathleen' ) )	select count(*) from citation as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = "mckeown ,  kathleen"
0	sql placeholder	SELECT T3.name ,  count(*) FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1
0	sql placeholder	SELECT T3.name ,  count(*) FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1
0	sql placeholder	select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = "mckeown ,  kathleen"
0	sql placeholder	select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = "mckeown ,  kathleen"
1	select distinct paper.venue , paper.year from affiliation join paper on affiliation.affiliation_id = paper.paper_id where affiliation.name = 'Columbia University'	select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t3.name = "columbia university"
1	select venue , year from affiliation join paper on affiliation.affiliation_id = paper.paper_id where affiliation.name = 'Columbia University'	select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t3.name = "columbia university"
1	select author.name from author_list join paper on author_list.paper_id = paper.paper_id join author on author_list.author_id = author.author_id where paper.year = 2009 group by author.author_id order by count ( * ) desc limit 1	SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T1.year  =  2009 GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1
0	select name from author where author_id in ( select author_id from author_list where paper_id = ( select max ( cnt ) from ( select count ( paper_id ) as cnt from author_list where paper_id = 2009 group by author_id ) ) )	SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T1.year  =  2009 GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1
1	select affiliation.name from affiliation join author_list on affiliation.affiliation_id = author_list.affiliation_id join paper on author_list.paper_id = paper.paper_id where paper.year = 2009 group by affiliation.affiliation_id order by count ( * ) desc limit 3	SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  =  2009 GROUP BY T2.affiliation_id ORDER BY count(*) DESC LIMIT 3
0	select affiliation.name from affiliation join author_list on affiliation.affiliation_id = author_list.affiliation_id join paper on author_list.paper_id = paper.paper_id where paper.year = 2009 group by affiliation.name order by count ( * ) desc limit 3	SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  =  2009 GROUP BY T2.affiliation_id ORDER BY count(*) DESC LIMIT 3
0	select count ( * ) from affiliation join author_list on affiliation.affiliation_id = author_list.affiliation_id join paper on author_list.paper_id = paper.paper_id where affiliation.name = 'Columbia University' and paper.year <= 2009	select count(distinct t1.paper_id) from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t1.year  <=  2009 and t3.name = "columbia university"
0	select count ( * ) from affiliation join author_list on affiliation.affiliation_id = author_list.affiliation_id join paper on author_list.paper_id = paper.paper_id where affiliation.name = 'Columbia University' and paper.year <= 2009	select count(distinct t1.paper_id) from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t1.year  <=  2009 and t3.name = "columbia university"
0	select count ( * ) from paper where year between 2000 and 2009	SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  >=  2000 AND T1.year  <=  2009 AND T3.name LIKE "Stanford University"
0	select count ( * ) from paper where year between 2000 and 2009 and venue = 'Stanford University'	SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  >=  2000 AND T1.year  <=  2009 AND T3.name LIKE "Stanford University"
0	select paper.title from paper inner join ( select paper_id , count ( author_id ) as num_authors from author_list group by paper_id ) as temp on paper.paper_id = temp.paper_id where num_authors = ( select max ( num_authors ) from ( select count ( author_id ) as num_authors from author_list group by paper_id ) )	SELECT T2.title FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id GROUP BY T2.paper_id ORDER BY count(*) DESC LIMIT 1
0	select paper.title from paper inner join ( select paper_id , count ( author_id ) as num_authors from author_list group by paper_id ) as temp on paper.paper_id = temp.paper_id where num_authors = ( select max ( num_authors ) from ( select count ( author_id ) as num_authors from author_list group by paper_id ) )	SELECT T2.title FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id GROUP BY T2.paper_id ORDER BY count(*) DESC LIMIT 1
1	select count ( * ) from author where name = 'Mckeown , Kathleen'	select count (distinct t2.author_id) from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id where t3.name = "mckeown ,  kathleen"
1	select count ( * ) from author join author_list on author.author_id = author_list.author_id where author.name = 'Mckeown , Kathleen'	select count (distinct t2.author_id) from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id where t3.name = "mckeown ,  kathleen"
1	select author.name from author join author_list on author.author_id = author_list.author_id where author.name = 'Mckeown , Kathleen' group by author.name order by count ( * ) desc limit 1	select t4.name from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id join author as t4 on t2.author_id  =  t4.author_id where t3.name = "mckeown ,  kathleen" group by t2.author_id order by count(*) desc limit 1
1	select author.name from author_list join author on author_list.author_id = author.author_id join paper on author_list.paper_id = paper.paper_id where author.name = 'Mckeown , Kathleen' group by author.author_id order by count ( * ) desc limit 1	select t4.name from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id join author as t4 on t2.author_id  =  t4.author_id where t3.name = "mckeown ,  kathleen" group by t2.author_id order by count(*) desc limit 1
1	select paper_id from paper where title like '%translation%'	SELECT paper_id FROM Paper WHERE title LIKE "%translation%"
1	select paper_id from paper where title like '%translation%'	SELECT paper_id FROM Paper WHERE title LIKE "%translation%"
0	select paper_id , title from paper where paper_id not in ( select paper_id from citation )	SELECT paper_id ,  title FROM Paper WHERE paper_id NOT IN (SELECT cited_paper_id FROM Citation)
0	select paper_id , title from paper where paper_id not in ( select paper_id from citation )	SELECT paper_id ,  title FROM Paper WHERE paper_id NOT IN (SELECT cited_paper_id FROM Citation)
1	select affiliation.name from affiliation join author_list on affiliation.affiliation_id = author_list.affiliation_id where affiliation.address like '%China%' group by affiliation.affiliation_id order by count ( * ) desc limit 1	SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id WHERE T1.address LIKE "%China%" GROUP BY T1.affiliation_id ORDER BY count(*) DESC LIMIT 1
0	select affiliation.name from affiliation join author_list on affiliation.affiliation_id = author_list.affiliation_id where affiliation.address like '%China%' group by affiliation.name order by count ( * ) desc limit 1	SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id WHERE T1.address LIKE "%China%" GROUP BY T1.affiliation_id ORDER BY count(*) DESC LIMIT 1
0	select count ( * ) , venue from paper group by year	SELECT count(*) ,  venue ,  YEAR FROM Paper GROUP BY venue ,  YEAR
0	select venue , count ( * ) from paper group by venue , year	SELECT count(*) ,  venue ,  YEAR FROM Paper GROUP BY venue ,  YEAR
0	select affiliation.name , count ( * ) from affiliation join author_list on affiliation.affiliation_id = author_list.affiliation_id group by affiliation.affiliation_id	SELECT count(DISTINCT T2.paper_id) ,  T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id
0	select affiliation.name , count ( * ) from affiliation join author_list on affiliation.affiliation_id = author_list.affiliation_id group by affiliation.affiliation_id	SELECT count(DISTINCT T2.paper_id) ,  T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id
1	select title from paper where paper_id in ( select paper_id from citation group by paper_id having count ( cited_paper_id ) > 50 )	SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(*)  >  50
1	select title from paper where paper_id in ( select paper_id from citation group by paper_id having count ( cited_paper_id ) > 50 )	SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(*)  >  50
0	select count ( * ) from author where author_id not in ( select author_id from author_list group by author_id having count ( paper_id ) > 50 )	SELECT count(*) FROM Author WHERE Author_id NOT IN ( SELECT T2.author_id FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(DISTINCT T1.paper_id)  >  50)
0	select count ( distinct author_id ) from author_list where paper_id not in ( select paper_id from citation group by paper_id having count ( cited_paper_id ) > 50 )	SELECT count(*) FROM Author WHERE Author_id NOT IN ( SELECT T2.author_id FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(DISTINCT T1.paper_id)  >  50)
1	select name from author where author_id in ( select author_id from author_list join paper on author_list.paper_id = paper.paper_id where paper.year = 2009 intersect select author_id from author_list join paper on author_list.paper_id = paper.paper_id where paper.year = 2009 and paper.title = 'NAACL' )	SELECT name FROM Author WHERE author_id IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  "ACL" AND T2.year  =  2009 INTERSECT SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  "NAACL" AND T2.year  =  2009)
0	select distinct a.name from author a join author_list al on a.author_id = al.author_id join paper p on al.paper_id = p.paper_id where p.year = 2009 and al.author_id in ( select author_id from author_list where paper_id = p.paper_id )	SELECT name FROM Author WHERE author_id IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  "ACL" AND T2.year  =  2009 INTERSECT SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  "NAACL" AND T2.year  =  2009)
0	select name from author where author_id not in ( select author_id from author_list where paper_id = 'ACL' )	SELECT name FROM Author WHERE author_id NOT IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  "ACL")
0	select name from author where author_id not in ( select author_id from author_list join paper on author_list.paper_id = paper.paper_id where title = 'ACL' )	SELECT name FROM Author WHERE author_id NOT IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  "ACL")
1	select count ( * ) from conference	SELECT count(*) FROM conference
1	select count ( * ) from conference	SELECT count(*) FROM conference
1	select distinct conference_name from conference	SELECT DISTINCT conference_name FROM conference
1	select distinct conference_name from conference	SELECT DISTINCT conference_name FROM conference
1	select conference_name , year , location from conference	SELECT conference_name ,  YEAR ,  LOCATION FROM conference
1	select conference_name , year , location from conference	SELECT conference_name ,  YEAR ,  LOCATION FROM conference
1	select conference_name , count ( * ) from conference group by conference_name	SELECT conference_name ,  count(*) FROM conference GROUP BY conference_name
1	select conference_name , count ( * ) from conference group by conference_name	SELECT conference_name ,  count(*) FROM conference GROUP BY conference_name
1	select year , count ( * ) from conference group by year	SELECT YEAR ,  count(*) FROM conference GROUP BY YEAR
1	select count ( * ) , year from conference group by year	SELECT YEAR ,  count(*) FROM conference GROUP BY YEAR
1	select year from conference group by year order by count ( * ) asc limit 1	SELECT YEAR FROM conference GROUP BY YEAR ORDER BY count(*) LIMIT 1
0	select year from conference group by year having count ( * ) = ( select min ( count ) from ( select count ( * ) as count from conference group by year ) )	SELECT YEAR FROM conference GROUP BY YEAR ORDER BY count(*) LIMIT 1
1	select location from conference group by location having count ( * ) >= 2	SELECT LOCATION FROM conference GROUP BY LOCATION HAVING count(*)  >=  2
1	select location from conference group by location having count ( * ) >= 2	SELECT LOCATION FROM conference GROUP BY LOCATION HAVING count(*)  >=  2
1	select institution_name , location , founded from institution	SELECT institution_name ,  LOCATION ,  founded FROM institution
1	select institution_name , location , founded from institution	SELECT institution_name ,  LOCATION ,  founded FROM institution
1	select count ( * ) from institution where founded between 1850 and 1900	SELECT count(*) FROM institution WHERE founded BETWEEN 1850 AND 1900
1	select count ( * ) from institution where founded between 1850 and 1900	SELECT count(*) FROM institution WHERE founded BETWEEN 1850 AND 1900
0	select institution_name , location from institution where founded = ( select max ( founded ) from institution )	SELECT institution_name ,  LOCATION FROM institution ORDER BY founded DESC LIMIT 1
0	select institution_name , location from institution where founded = ( select max ( founded ) from institution )	SELECT institution_name ,  LOCATION FROM institution ORDER BY founded DESC LIMIT 1
0	select institution_name , ( select count ( * ) from staff where institution_id = institution.institution_id and founded > 1800 ) as staff_count from institution where founded > 1800	SELECT T1.institution_name ,  count(*) FROM institution AS T1 JOIN staff AS T2 ON T1.institution_id  =  T2.institution_id WHERE T1.founded  >  1800 GROUP BY T2.institution_id
0	select institution.institution_id , count ( * ) from staff join institution on staff.institution_id = institution.institution_id where institution.founded > 1800 group by institution.institution_id	select t1.institution_name ,  count(*) from institution as t1 join staff as t2 on t1.institution_id  =  t2.institution_id where t1.founded  >  1800 group by t2.institution_id
1	select institution_name from institution where institution_id not in ( select institution_id from staff )	SELECT institution_name FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM staff)
1	select institution_name from institution where institution_id not in ( select institution_id from staff )	SELECT institution_name FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM staff)
1	select name from staff where age > ( select avg ( age ) from staff )	SELECT name FROM staff WHERE age  >  (SELECT avg(age) FROM staff)
1	select name from staff where age > ( select avg ( age ) from staff )	SELECT name FROM staff WHERE age  >  (SELECT avg(age) FROM staff)
0	select max ( age ) , min ( age ) from staff where nationality = 'United States'	SELECT max(age) ,  min(age) FROM staff
1	select max ( age ) , min ( age ) from staff	SELECT max(age) ,  min(age) FROM staff
1	select conference.conference_name from conference_participation join conference on conference_participation.conference_id = conference.conference_id join staff on staff.staff_id = conference_participation.staff_id where staff.nationality = 'Canada'	SELECT T1.conference_name FROM conference AS T1 JOIN conference_participation AS T2 ON T1.conference_id = T2.conference_id JOIN staff AS T3 ON T2.staff_id  =  T3.staff_id WHERE T3.nationality  =  "Canada"
0	select distinct conference.conference_name from conference_participation join conference on conference_participation.conference_id = conference.conference_id join staff on conference_participation.staff_id = staff.staff_id where staff.nationality = 'Canada'	SELECT T1.conference_name FROM conference AS T1 JOIN conference_participation AS T2 ON T1.conference_id = T2.conference_id JOIN staff AS T3 ON T2.staff_id  =  T3.staff_id WHERE T3.nationality  =  "Canada"
1	select staff.name from conference_participation join staff on conference_participation.staff_id = staff.staff_id where conference_participation.role = 'Speaker' intersect select staff.name from conference_participation join staff on conference_participation.staff_id = staff.staff_id where conference_participation.role = 'Sponsor'	SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Speaker' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Sponsor'
1	select staff.name from conference_participation join staff on conference_participation.staff_id = staff.staff_id where conference_participation.role = 'Speaker' intersect select staff.name from conference_participation join staff on conference_participation.staff_id = staff.staff_id where conference_participation.role = 'Sponsor'	SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Speaker' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Sponsor'
0	sql placeholder	SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'ACL' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'Naccl'
0	select name from staff where staff_id in ( select conference_participation.staff_id from conference_participation join conference on conference_participation.conference_id = conference.conference_id where conference.conference_name = 'ACL' intersect select staff.name from conference_participation join conference on conference_participation.conference_id = conference.conference_id where conference.conference_name = 'NACCL' )	SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'ACL' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'Naccl'
0	select name from staff where staff_id in ( select staff_id from conference_participation where conference_id in ( conference_id ) )	SELECT DISTINCT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.year  =  2003 OR T3.year  =  2004
0	select name from staff where staff_id in ( select staff_id from conference_participation where conference_id in ( conference_id ) )	SELECT DISTINCT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.year  =  2003 OR T3.year  =  2004
0	select conference_name , year , ( select count ( * ) from conference_participation where conference_id = conference.conference_id ) as participant_count from conference	SELECT T1.conference_name ,  T1.year ,  count(*) FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id
1	select conference.conference_name , conference.year , count ( * ) from conference join conference_participation on conference.conference_id = conference_participation.conference_id group by conference.conference_id	SELECT T1.conference_name ,  T1.year ,  count(*) FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id
0	select conference_name from conference where conference_id in ( select conference_id from conference_participation group by conference_id order by count ( * ) desc limit 2 )	SELECT T1.conference_name FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id ORDER BY count(*) DESC LIMIT 2
1	select conference.conference_name from conference_participation join conference on conference_participation.conference_id = conference.conference_id group by conference_participation.conference_id order by count ( * ) desc limit 2	SELECT T1.conference_name FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id ORDER BY count(*) DESC LIMIT 2
0	select name , nationality from staff where staff_id not in ( select staff_id from conference_participation where conference_id = 'ACL' )	SELECT name ,  nationality FROM staff WHERE staff_id NOT IN (SELECT T2.staff_id FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id WHERE T1.Conference_Name  =  "ACL")
0	select name , nationality from staff where staff_id not in ( select staff_id from conference_participation where conference_id = 'ACL' )	SELECT name ,  nationality FROM staff WHERE staff_id NOT IN (SELECT T2.staff_id FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id WHERE T1.Conference_Name  =  "ACL")
0	select institution_name , location from institution where institution_id not in ( select staff.institution_id from staff join conference_participation on staff.staff_id = conference_participation.staff_id join conference on conference_participation.conference_id = conference.conference_id where conference.year = 2004 )	SELECT T1.Institution_Name ,  T1.location FROM institution AS T1 JOIN staff AS T2 ON T1.institution_id  =  T2.institution_id WHERE T2.staff_id NOT IN (SELECT T4.staff_id FROM Conference AS T3 JOIN Conference_participation AS T4 ON T3.conference_id  =  T4.conference_id WHERE T3.year  =  2004)
0	select institution.institution_name , institution.location from institution where institution_id not in ( select staff.institution_id from staff join conference_participation on staff.staff_id = conference_participation.staff_id join conference on conference_participation.conference_id = conference.conference_id where conference.year = 2004 )	SELECT T1.Institution_Name ,  T1.location FROM institution AS T1 JOIN staff AS T2 ON T1.institution_id  =  T2.institution_id WHERE T2.staff_id NOT IN (SELECT T4.staff_id FROM Conference AS T3 JOIN Conference_participation AS T4 ON T3.conference_id  =  T4.conference_id WHERE T3.year  =  2004)
0	select pilot_name from pilotskills where age = ( select max ( age ) from pilotskills )	SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1
0	select pilot_name from pilotskills where age = ( select max ( age ) from pilotskills )	SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1
1	select pilot_name from pilotskills where age < ( select avg ( age ) from pilotskills ) order by age asc	SELECT pilot_name FROM PilotSkills WHERE age  <  (SELECT avg(age) FROM PilotSkills) ORDER BY age
1	select pilot_name from pilotskills where age < ( select avg ( age ) from pilotskills ) order by age asc	SELECT pilot_name FROM PilotSkills WHERE age  <  (SELECT avg(age) FROM PilotSkills) ORDER BY age
1	select * from pilotskills where age < 30	SELECT * FROM PilotSkills WHERE age  <  30
1	select * from pilotskills where age < 30	select * from pilotskills where age  <  30
1	select pilot_name from pilotskills where plane_name = 'Piper Cub' and age < 35	SELECT pilot_name FROM PilotSkills WHERE age  <  35 AND plane_name  =  'Piper Cub'
1	select pilot_name from pilotskills where age < 35 and plane_name = 'Piper Cub'	SELECT pilot_name FROM PilotSkills WHERE age  <  35 AND plane_name  =  'Piper Cub'
1	select location from hangar where plane_name = 'F-14 Fighter'	SELECT LOCATION FROM hangar WHERE plane_name  =  'F-14 Fighter'
1	select location from hangar where plane_name = 'F-14 Fighter'	SELECT LOCATION FROM hangar WHERE plane_name  =  'F-14 Fighter'
1	select count ( distinct location ) from hangar	SELECT count(DISTINCT LOCATION) FROM hangar
1	select count ( distinct location ) from hangar	SELECT count(DISTINCT LOCATION) FROM hangar
1	select plane_name from pilotskills where pilotskills.pilot_name = 'Jones' and pilotskills.age = 32	SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Jones'  AND age  =  32
1	select plane_name from pilotskills where pilot_name = 'Jones' and age = 32	SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Jones'  AND age  =  32
1	select count ( * ) from pilotskills where age > 40	SELECT count(*) FROM pilotskills WHERE age  >  40
1	select count ( * ) from pilotskills where age > 40	SELECT count(*) FROM pilotskills WHERE age  >  40
1	select count ( * ) from pilotskills where plane_name = 'B-52 Bomber' and age < 35	SELECT count(*) FROM pilotskills WHERE age  <  35 AND plane_name  =  'B-52 Bomber'
1	select count ( * ) from pilotskills where plane_name = 'B-52 Bomber' and age < 35	SELECT count(*) FROM pilotskills WHERE age  <  35 AND plane_name  =  'B-52 Bomber'
0	select pilot_name from pilotskills where plane_name = 'Piper Cub' and age = ( select min ( age ) from pilotskills where plane_name = 'Piper Cub' )	SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' ORDER BY age LIMIT 1
0	select p.pilot_name from pilotskills p where p.plane_name = 'Piper Cub' and p.age = ( select min ( age ) from pilotskills where plane_name = 'Piper Cub' )	SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' ORDER BY age LIMIT 1
1	select plane_name from pilotskills group by plane_name order by count ( * ) desc limit 1	SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) DESC LIMIT 1
1	select plane_name from pilotskills group by plane_name order by count ( * ) desc limit 1	SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) DESC LIMIT 1
1	select plane_name from pilotskills group by plane_name order by count ( * ) asc limit 1	SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) LIMIT 1
1	select plane_name from pilotskills group by plane_name order by count ( * ) asc limit 1	SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) LIMIT 1
1	select count ( distinct p.pilot_name ) from pilotskills p join hangar h on p.plane_name = h.plane_name where h.location = 'Chicago'	SELECT count(DISTINCT T1.pilot_name) FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  'Chicago'
1	select count ( distinct p.pilot_name ) from pilotskills p join hangar h on p.plane_name = h.plane_name where h.location = 'Chicago'	SELECT count(DISTINCT T1.pilot_name) FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  'Chicago'
1	select plane_name from pilotskills where pilot_name = 'Smith' and age = 41	SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Smith' AND age  =  41
1	select plane_name from pilotskills where pilot_name = 'Smith' and age = 41	SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Smith' AND age  =  41
1	select count ( distinct plane_name ) from pilotskills	SELECT count(DISTINCT plane_name) FROM pilotskills
1	select count ( distinct plane_name ) from pilotskills	SELECT count(DISTINCT plane_name) FROM pilotskills
1	select count ( distinct plane_name ) from pilotskills where pilot_name = 'Smith'	SELECT count(plane_name) FROM pilotskills WHERE pilot_name  =  'Smith'
1	select count ( distinct plane_name ) from pilotskills where pilotskills.pilot_name = 'Smith'	SELECT count(plane_name) FROM pilotskills WHERE pilot_name  =  'Smith'
1	select count ( * ) from pilotskills where age > 40	SELECT count(plane_name) FROM pilotskills WHERE age  >  40
1	select count ( * ) from pilotskills where age > 40	SELECT count(plane_name) FROM pilotskills WHERE age  >  40
1	select pilot_name from pilotskills where age between 30 and 40 order by age asc	SELECT pilot_name FROM pilotskills WHERE age BETWEEN 30 AND 40 ORDER BY age
1	select pilot_name from pilotskills where age between 30 and 40 order by age asc	SELECT pilot_name FROM pilotskills WHERE age BETWEEN 30 AND 40 ORDER BY age
1	select pilot_name from pilotskills order by age desc	SELECT pilot_name FROM pilotskills ORDER BY age DESC
1	select pilot_name from pilotskills order by age desc	SELECT pilot_name FROM pilotskills ORDER BY age DESC
1	select location from hangar order by plane_name asc	SELECT LOCATION FROM hangar ORDER BY plane_name
0	select distinct location from hangar order by plane_name asc	SELECT LOCATION FROM hangar ORDER BY plane_name
1	select distinct plane_name from pilotskills order by plane_name asc	SELECT DISTINCT plane_name FROM pilotskills ORDER BY plane_name
0	select distinct plane_name from hangar order by plane_name asc	SELECT DISTINCT plane_name FROM pilotskills ORDER BY plane_name
0	select count ( * ) from pilotskills where age > 40 or age < 30	SELECT count(pilot_name) FROM pilotskills ORDER BY age  >  40 OR age  <  30
0	select count ( * ) from pilotskills where age > 40 or age < 30	SELECT count(pilot_name) FROM pilotskills ORDER BY age  >  40 OR age  <  30
1	select pilot_name , age from pilotskills where plane_name = 'Piper Cub' and age > 35 union select pilot_name , age from pilotskills where plane_name = 'F-14 Fighter' and age < 30	SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'Piper Cub' AND age  >  35 UNION SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'F-14 Fighter' AND age  <  30
1	select pilot_name , age from pilotskills where plane_name = 'Piper Cub' and age > 35 union select pilot_name , age from pilotskills where plane_name = 'F-14 Fighter' and age < 30	SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'Piper Cub' AND age  >  35 UNION SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'F-14 Fighter' AND age  <  30
1	select pilot_name from pilotskills where plane_name = 'Piper Cub' except select pilot_name from pilotskills where plane_name = 'B-52 Bomber'	SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' EXCEPT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'
1	select pilot_name from pilotskills where plane_name = 'Piper Cub' except select pilot_name from pilotskills where plane_name = 'B-52 Bomber'	SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' EXCEPT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'
1	select pilot_name from pilotskills where plane_name = 'Piper Cub' intersect select pilot_name from pilotskills where plane_name = 'B-52 Bomber'	SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' INTERSECT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'
1	select pilot_name from pilotskills where plane_name = 'Piper Cub' intersect select pilot_name from pilotskills where plane_name = 'B-52 Bomber'	SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' INTERSECT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'
1	select avg ( age ) , min ( age ) from pilotskills	SELECT avg(age) ,  min(age) FROM pilotskills
1	select avg ( age ) , min ( age ) from pilotskills	SELECT avg(age) ,  min(age) FROM pilotskills
1	select pilotskills.pilot_name from pilotskills join hangar on pilotskills.plane_name = hangar.plane_name where hangar.location = 'Austin' intersect select pilotskills.pilot_name from pilotskills join hangar on pilotskills.plane_name = hangar.plane_name where hangar.location = 'Boston'	SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  "Austin" INTERSECT SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.LOCATION  =  "Boston"
1	select pilotskills.pilot_name from pilotskills join hangar on pilotskills.plane_name = hangar.plane_name where hangar.location = 'Austin' intersect select pilotskills.pilot_name from pilotskills join hangar on pilotskills.plane_name = hangar.plane_name where hangar.location = 'Boston'	SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  "Austin" INTERSECT SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.LOCATION  =  "Boston"
0	select pilot_name from pilotskills where plane_name = 'Piper Cub' union select pilot_name from pilotskills where plane_name = 'F-14 Fighter'	SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' OR plane_name  =  'F-14 Fighter'
1	select pilot_name from pilotskills where plane_name in ( select plane_name from pilotskills where plane_name = 'Piper Cub' or plane_name = 'F-14 Fighter' )	SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' OR plane_name  =  'F-14 Fighter'
1	select avg ( age ) , plane_name from pilotskills group by plane_name	SELECT avg(age) ,  plane_name FROM pilotskills GROUP BY plane_name
1	select plane_name , avg ( age ) from pilotskills group by plane_name	SELECT avg(age) ,  plane_name FROM pilotskills GROUP BY plane_name
0	sql placeholder	SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name
1	select count ( * ) , plane_name from pilotskills group by plane_name	SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name
0	select max ( age ) , plane_name from pilotskills group by plane_name order by plane_name asc	SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name ORDER BY plane_name
0	select plane_name , pilot_name from pilotskills order by plane_name asc	SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name ORDER BY plane_name
0	select pilot_name from pilotskills where ( plane_name , age ) in ( select plane_name , max ( age ) from pilotskills group by plane_name )	SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name
0	select plane_name , pilot_name from pilotskills order by age desc limit 1	SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name
1	select max ( age ) , pilot_name from pilotskills group by pilot_name having pilot_name = pilotskills.pilot_name	SELECT max(age) ,  pilot_name FROM pilotskills GROUP BY pilot_name
1	select pilot_name , max ( age ) from pilotskills group by pilot_name	SELECT max(age) ,  pilot_name FROM pilotskills GROUP BY pilot_name
1	select count ( * ) , avg ( age ) , location from hangar join pilotskills on hangar.plane_name = pilotskills.plane_name group by location	SELECT count(T1.pilot_name) ,  avg(T1.age) ,  T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name GROUP BY T2.location
1	select hangar.location , count ( * ) , avg ( pilotskills.age ) from hangar join pilotskills on hangar.plane_name = pilotskills.plane_name group by hangar.location	SELECT count(T1.pilot_name) ,  avg(T1.age) ,  T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name GROUP BY T2.location
1	select count ( * ) , plane_name from pilotskills group by plane_name having avg ( age ) < 35	SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name HAVING avg(age)  <  35
1	select plane_name , count ( * ) from pilotskills group by plane_name having avg ( age ) < 35	SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name HAVING avg(age)  <  35
1	select hangar.location from hangar inner join pilotskills on hangar.plane_name = pilotskills.plane_name where pilotskills.age = ( select min ( age ) from pilotskills )	SELECT T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T1.age  =  (SELECT min(age) FROM pilotskills)
1	select hangar.location from hangar inner join pilotskills on hangar.plane_name = pilotskills.plane_name where pilotskills.age = ( select min ( age ) from pilotskills )	SELECT T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T1.age  =  (SELECT min(age) FROM pilotskills)
1	select pilotskills.pilot_name , pilotskills.age from pilotskills join hangar on pilotskills.plane_name = hangar.plane_name where hangar.location = 'Austin'	SELECT T1.pilot_name ,  T1.age FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  "Austin"
1	select pilotskills.pilot_name , pilotskills.age from pilotskills join hangar on pilotskills.plane_name = hangar.plane_name where hangar.location = 'Austin'	SELECT T1.pilot_name ,  T1.age FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  "Austin"
1	select pilot_name from pilotskills where age > ( select min ( age ) from pilotskills where plane_name = 'Piper Cub' ) order by pilot_name asc	SELECT pilot_name FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub') ORDER BY pilot_name
0	select p.pilot_name from pilotskills p where p.age > ( select max ( ps.age ) from pilotskills ps where ps.plane_name = 'Piper Cub' ) order by p.pilot_name asc	SELECT pilot_name FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub') ORDER BY pilot_name
1	select count ( * ) from pilotskills where age < ( select min ( age ) from pilotskills where plane_name = 'F-14 Fighter' )	SELECT count(*) FROM pilotskills WHERE age  <  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'F-14 Fighter')
1	select count ( * ) from pilotskills where age < ( select min ( age ) from pilotskills where plane_name = 'F-14 Fighter' )	SELECT count(*) FROM pilotskills WHERE age  <  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'F-14 Fighter')
1	select distinct plane_name from pilotskills where plane_name like '%Bomber%'	SELECT DISTINCT plane_name FROM pilotskills WHERE plane_name LIKE '%Bomber%'
1	select distinct plane_name from pilotskills where plane_name like '%Bomber%'	SELECT DISTINCT plane_name FROM pilotskills WHERE plane_name LIKE '%Bomber%'
0	select count ( * ) from pilotskills where age > ( select max ( age ) from pilotskills where plane_name = 'Piper Cub' )	SELECT count(pilot_name) FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub')
1	select count ( * ) from pilotskills where age > ( select min ( age ) from pilotskills where plane_name = 'Piper Cub' )	SELECT count(pilot_name) FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub')
0	select d.name from district d where d.area_km = ( select max ( area_km ) from district )	SELECT name FROM district ORDER BY Area_km DESC LIMIT 1
0	select area_km , government_website from district where population = ( select min ( population ) from district )	SELECT area_km ,  Government_website FROM district ORDER BY Population LIMIT 1
1	select name , population from district where area_km > ( select avg ( area_km ) from district )	SELECT name ,  population FROM district WHERE area_km  >  (SELECT avg(area_km) FROM district)
1	select max ( area_km ) , avg ( area_km ) from district	SELECT max(area_km) ,  avg(area_km) FROM district
0	select sum ( population ) from district where area_km in ( select area_km from district order by area_km desc limit 3 )	SELECT sum(population) FROM district ORDER BY area_km DESC LIMIT 3
1	select district_id , name , government_website from district order by population asc	SELECT name ,  Government_website ,  district_id FROM district ORDER BY Population
0	select name from district where government_website = 'gov'	SELECT name FROM district WHERE Government_website LIKE "%gov%"
1	select district_id , name from district where population > 4000 or area_km > 3000	SELECT district_id ,  name FROM district WHERE area_km  >  3000 OR population  >  4000
0	sql placeholder	SELECT name ,  speach_title FROM spokesman
1	select avg ( points ) , avg ( age ) from spokesman where rank_position = 1	SELECT avg(points) ,  avg(age) FROM spokesman WHERE rank_position  =  1
1	select name , points from spokesman where age < 40	SELECT name ,  points FROM spokesman WHERE age  <  40
0	select s.name from spokesman s where s.age = ( select max ( age ) from spokesman )	SELECT name FROM spokesman ORDER BY age DESC LIMIT 1
1	select name from spokesman where points < ( select avg ( points ) from spokesman )	SELECT name FROM spokesman WHERE points  <  (SELECT avg(points) FROM spokesman)
1	select district.name from spokesman_district join district on spokesman_district.district_id = district.district_id group by spokesman_district.district_id order by count ( * ) desc limit 1	SELECT t1.name FROM district AS t1 JOIN spokesman_district AS t2 ON t1.District_ID  =  t2.District_ID GROUP BY t2.District_ID ORDER BY count(*) DESC LIMIT 1
1	select name from spokesman where spokesman_id in ( select spokesman_id from spokesman_district where start_year < 2004 )	SELECT t1.name FROM spokesman AS t1 JOIN spokesman_district AS t2 ON t1.Spokesman_ID  =  t2.Spokesman_ID WHERE t2.start_year  <  2004
1	select district.name , count ( spokesman_district.spokesman_id ) from spokesman_district join district on spokesman_district.district_id = district.district_id group by district.district_id	SELECT t1.name ,  count(*) FROM district AS t1 JOIN spokesman_district AS t2 ON t1.District_ID  =  t2.District_ID GROUP BY t2.District_ID
0	select district.name from district where district_id in ( select spokesman_district.district_id from spokesman_district join spokesman on spokesman_district.spokesman_id = spokesman.spokesman_id where spokesman.rank_position = 1 intersect select district.name from spokesman_district join spokesman on spokesman_district.spokesman_id = spokesman.spokesman_id where spokesman.rank_position = 2 )	SELECT t3.name FROM spokesman AS t1 JOIN spokesman_district AS t2 ON t1.Spokesman_ID  =  t2.Spokesman_ID JOIN district AS t3 ON t3.district_id  =  t2.district_id WHERE t1.rank_position  =  1 INTERSECT SELECT t3.name FROM spokesman AS t1 JOIN spokesman_district AS t2 ON t1.Spokesman_ID  =  t2.Spokesman_ID JOIN district AS t3 ON t3.district_id  =  t2.district_id WHERE t1.rank_position  =  2
1	select district.name from spokesman_district join district on spokesman_district.district_id = district.district_id group by spokesman_district.district_id having count ( * ) > 1	SELECT t1.name FROM district AS t1 JOIN spokesman_district AS t2 ON t1.District_ID  =  t2.District_ID GROUP BY t2.District_ID HAVING count(*)  >  1
1	select count ( * ) from district where district_id not in ( select district_id from spokesman_district )	SELECT count(*) FROM district WHERE district_id NOT IN (SELECT district_id FROM spokesman_district)
1	select name from spokesman where spokesman_id not in ( select spokesman_id from spokesman_district )	SELECT name FROM spokesman WHERE Spokesman_ID NOT IN (SELECT Spokesman_ID FROM spokesman_district)
1	select sum ( district.population ) , avg ( district.population ) from district where district_id in ( select district_id from spokesman_district )	SELECT sum(population) ,  avg(population) FROM district WHERE district_id IN (SELECT district_id FROM spokesman_district)
0	select title from sculptures where year = ( select max ( year ) from sculptures )	select title from sculptures order by year desc limit 1
0	select title from sculptures where year = ( select max ( year ) from sculptures )	select title from sculptures order by year desc limit 1
0	select title , location from paintings where year = ( select min ( year ) from paintings )	select title ,  location from paintings order by year limit 1
0	select title , location from paintings where year = ( select min ( year ) from paintings )	SELECT title ,  LOCATION ,  YEAR FROM paintings ORDER BY YEAR LIMIT 1
0	select title from sculptures where location = 226	SELECT title FROM sculptures WHERE LOCATION  =  "Gallery 226"
0	select title from sculptures where location = 226	SELECT title FROM sculptures WHERE LOCATION  =  "Gallery 226"
1	select title , location from paintings	SELECT title ,  LOCATION FROM paintings
1	select title , location from paintings	SELECT title ,  LOCATION FROM paintings
1	select title , location from sculptures	SELECT title ,  LOCATION FROM sculptures
1	select title , location from sculptures	SELECT title ,  LOCATION FROM sculptures
1	select distinct medium from paintings where paintingid = 80	SELECT medium FROM paintings WHERE paintingID  =  80
1	select medium from paintings where paintingid = 80	select medium from paintings where paintingid  =  80
1	select fname , lname from artists where birthyear > 1850	SELECT lname ,  fname FROM artists WHERE birthYear  >  1850
0	sql placeholder	SELECT lname ,  fname FROM artists WHERE birthYear  >  1850
0	select title , year from sculptures where location != 226	SELECT title ,  YEAR FROM sculptures WHERE LOCATION != "Gallery 226"
1	select title , year from sculptures where location != 'Gallery 226'	SELECT title ,  YEAR FROM sculptures WHERE LOCATION != "Gallery 226"
1	select distinct artists.fname , artists.lname from artists join sculptures on artists.artistid = sculptures.sculptorid where sculptures.year < 1900	SELECT DISTINCT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  <  1900
1	select distinct artists.fname , artists.lname from artists join sculptures on artists.artistid = sculptures.sculptorid where sculptures.year < 1900	SELECT DISTINCT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  <  1900
1	select distinct artists.birthyear from artists join sculptures on artists.artistid = sculptures.sculptorid where sculptures.year > 1920	SELECT DISTINCT T1.birthYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  >  1920
1	select distinct artists.birthyear from artists join sculptures on artists.artistid = sculptures.sculptorid where sculptures.year > 1920	SELECT DISTINCT T1.birthYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  >  1920
0	select fname , lname from artists order by deathyear desc limit 1	SELECT lname ,  fname FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1
0	select fname , lname from artists order by deathyear desc limit 1	SELECT lname ,  fname FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1
0	select birthyear from artists order by deathyear asc limit 1	SELECT deathYear - birthYear FROM artists ORDER BY deathYear - birthYear LIMIT 1
0	select a.fname from artists a where a.birthyear = ( select min ( birthyear ) from artists )	SELECT deathYear - birthYear FROM artists ORDER BY deathYear - birthYear LIMIT 1
0	sql placeholder	SELECT fname  ,  deathYear - birthYear FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1
0	select fname , deathyear from artists order by deathyear desc limit 1	SELECT fname  ,  deathYear - birthYear FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1
0	select count ( * ) from paintings where location = 240	SELECT count(*) FROM paintings WHERE LOCATION  =  "Gallery 240"
0	select count ( * ) from paintings where location = 240	SELECT count(*) FROM paintings WHERE LOCATION  =  "Gallery 240"
0	select count ( * ) from artists join paintings on artists.artistid = paintings.painterid order by artists.deathyear desc limit 1	select count(*) from artists as t1 join paintings as t2 on t1.artistid  =  t2.painterid group by t2.painterid order by t1.deathyear - t1.birthyear desc limit 1
0	select count ( * ) from paintings join artists on paintings.painterid = artists.artistid where artists.deathyear = ( select max ( deathyear ) from artists )	select count(*) from artists as t1 join paintings as t2 on t1.artistid  =  t2.painterid group by t2.painterid order by t1.deathyear - t1.birthyear desc limit 1
1	select paintings.title , paintings.year from artists join paintings on artists.artistid = paintings.painterid where artists.fname = 'Mary'	SELECT T2.title ,   T2.year FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  "Mary"
1	select paintings.title , paintings.year from artists join paintings on artists.artistid = paintings.painterid where artists.fname = 'Mary'	SELECT T2.title ,   T2.year FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  "Mary"
1	select width_mm from paintings join artists on paintings.painterid = artists.artistid where artists.birthyear < 1850	SELECT T2.width_mm FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.birthYear  <  1850
1	select width_mm from paintings join artists on paintings.painterid = artists.artistid where artists.birthyear < 1850	SELECT T2.width_mm FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.birthYear  <  1850
1	select paintings.location , paintings.medium from artists join paintings on artists.artistid = paintings.painterid where artists.fname = 'Pablo'	SELECT T2.location ,   T2.medium FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  "Pablo"
1	select location , medium from paintings join artists on paintings.painterid = artists.artistid where artists.fname = 'Pablo'	SELECT T2.location ,   T2.medium FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  "Pablo"
0	select artists.fname , artists.lname from artists join paintings on artists.artistid = paintings.painterid join sculptures on artists.artistid = sculptures.sculptorid where paintings.title = 'Artists.fname' intersect select artists.fname , artists.lname from artists join sculptures on artists.artistid = sculptures.sculptorid where sculptures.title = 'Artists.title'	SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID
0	sql placeholder	SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID
0	select artists.fname , artists.lname from artists join paintings on artists.artistid = paintings.painterid where paintings.medium = 'Oil' intersect select artists.fname , artists.lname from artists join paintings on artists.artistid = paintings.painterid where paintings.medium = 'Lithographic'	SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  "oil" INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID WHERE T4.medium  =  "lithograph"
0	select artists.fname , artists.lname from artists join paintings on artists.artistid = paintings.painterid where paintings.medium = 'Oil' intersect select artists.fname , artists.lname from artists join paintings on artists.artistid = paintings.painterid where paintings.medium = 'Lithographic'	SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  "oil" INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID WHERE T4.medium  =  "lithograph"
0	select a.birthyear from artists a where exists ( select 1 from paintings p where p.year = 1884 and p.medium = 'canvas' )	SELECT T1.birthYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884 AND mediumOn  =  "canvas"
0	select artists.birthyear from artists join paintings on artists.artistid = paintings.painterid where paintings.year = 1884	SELECT T1.birthYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884 AND mediumOn  =  "canvas"
0	sql placeholder	SELECT DISTINCT T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  "oil" AND LOCATION  =  "Gallery 241"
0	select artists.fname from artists join paintings on artists.artistid = paintings.painterid where paintings.medium = 'oil' and paintings.location = 241	SELECT DISTINCT T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  "oil" AND LOCATION  =  "Gallery 241"
1	select medium , count ( * ) from paintings group by medium	SELECT count(*) ,  medium FROM paintings GROUP BY medium
1	select count ( * ) , medium from paintings group by medium	SELECT count(*) ,  medium FROM paintings GROUP BY medium
1	select avg ( height_mm ) , medium from paintings group by medium	SELECT avg(height_mm) ,  medium FROM paintings GROUP BY medium
1	select avg ( height_mm ) , medium from paintings group by medium	SELECT avg(height_mm) ,  medium FROM paintings GROUP BY medium
1	select count ( * ) , location from paintings where year < 1900 group by location	SELECT count(*) ,  LOCATION FROM paintings WHERE YEAR  <  1900 GROUP BY LOCATION
0	select count ( * ) from paintings where year < 1900 and location = 'USA'	SELECT count(*) ,  LOCATION FROM paintings WHERE YEAR  <  1900 GROUP BY LOCATION
1	select title from paintings where year > 1910 and medium = 'oil'	SELECT title FROM paintings WHERE YEAR  >  1910 AND medium  =  "oil"
1	select title from paintings where medium = 'oil' and year > 1910	SELECT title FROM paintings WHERE YEAR  >  1910 AND medium  =  "oil"
0	select distinct painterid from paintings where medium = 'oil' and location = 240	SELECT DISTINCT painterID FROM paintings WHERE medium  =  "oil" AND LOCATION  =  "Gallery 240"
0	select distinct painterid from paintings where medium = 'oil' and location = 240	SELECT DISTINCT painterID FROM paintings WHERE medium  =  "oil" AND LOCATION  =  "Gallery 240"
0	select distinct title from paintings where height_mm > ( select min ( height_mm ) from paintings where medium = 'canvas' )	SELECT DISTINCT title FROM paintings WHERE height_mm  >  (SELECT min(height_mm) FROM paintings WHERE mediumOn  =  "canvas")
0	select distinct title from paintings where height_mm > ( select min ( height_mm ) from paintings where medium = 'canvas' )	SELECT DISTINCT title FROM paintings WHERE height_mm  >  (SELECT min(height_mm) FROM paintings WHERE mediumOn  =  "canvas")
0	select distinct paintingid from paintings where year < ( select min ( year ) from paintings where location = 240 )	SELECT paintingID FROM paintings WHERE YEAR  <  (SELECT max(YEAR) FROM paintings WHERE LOCATION  =  "Gallery 240")
0	select distinct p.paintingid from paintings p where p.year > ( select min ( year ) from paintings p2 where p2.year = 240 )	SELECT paintingID FROM paintings WHERE YEAR  <  (SELECT max(YEAR) FROM paintings WHERE LOCATION  =  "Gallery 240")
0	select paintingid from paintings where year = ( select min ( year ) from paintings )	SELECT paintingID FROM paintings ORDER BY YEAR LIMIT 1
0	select paintingid from paintings where year = ( select min ( year ) from paintings )	SELECT paintingID FROM paintings ORDER BY YEAR LIMIT 1
1	select artists.fname , artists.lname from artists join sculptures on artists.artistid = sculptures.sculptorid where sculptures.title like '%female%'	SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE "%female%"
1	select artists.fname , artists.lname from artists join sculptures on artists.artistid = sculptures.sculptorid where sculptures.title like '%female%'	SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE "%female%"
1	select distinct title from paintings order by title asc	SELECT DISTINCT title FROM paintings ORDER BY title
1	select distinct title from paintings order by title asc	SELECT DISTINCT title FROM paintings ORDER BY title
0	select distinct title from paintings order by width_mm asc	SELECT DISTINCT title FROM paintings ORDER BY height_mm
1	select distinct title from paintings order by height_mm asc	SELECT DISTINCT title FROM paintings ORDER BY height_mm
0	select paintings.title , sculptures.title from paintings join sculptures on paintings.paintingid = sculptures.sculptureid where sculptures.year between 1900 and 1950	SELECT title FROM paintings WHERE YEAR BETWEEN 1900 AND 1950 UNION SELECT title FROM sculptures WHERE YEAR BETWEEN 1900 AND 1950
0	select paintings.title , sculptures.title from paintings join sculptures on paintings.paintingid = sculptures.sculptorid where sculptures.year between 1900 and 1950	SELECT title FROM paintings WHERE YEAR BETWEEN 1900 AND 1950 UNION SELECT title FROM sculptures WHERE YEAR BETWEEN 1900 AND 1950
0	select paintings.title , sculptures.title from artists join paintings on artists.artistid = paintings.painterid join sculptures on artists.artistid = sculptures.sculptorid where artists.artistid = 222	SELECT T2.title FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.artistID  =  222 UNION SELECT T4.title FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID WHERE T3.artistID  =  222
0	select paintings.title , sculptures.title from artists join paintings on artists.artistid = paintings.painterid join sculptures on artists.artistid = sculptures.sculptorid where artists.artistid = 222	SELECT T2.title FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.artistID  =  222 UNION SELECT T4.title FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID WHERE T3.artistID  =  222
1	select artists.artistid from artists join paintings on artists.artistid = paintings.painterid where paintings.year < 1900 group by artists.artistid order by count ( * ) desc limit 1	SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  <  1900 GROUP BY T1.artistID ORDER BY count(*) DESC LIMIT 1
1	select artists.artistid from artists join paintings on artists.artistid = paintings.painterid where paintings.year < 1900 group by artists.artistid order by count ( * ) desc limit 1	SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  <  1900 GROUP BY T1.artistID ORDER BY count(*) DESC LIMIT 1
1	select artists.fname from artists join sculptures on artists.artistid = sculptures.sculptorid group by artists.artistid order by count ( * ) desc limit 1	SELECT T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) DESC LIMIT 1
1	select artists.fname from artists join sculptures on artists.artistid = sculptures.sculptorid group by artists.artistid order by count ( * ) desc limit 1	SELECT T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) DESC LIMIT 1
1	select title from paintings where width_mm < 600 or height_mm > 800	SELECT title FROM paintings WHERE width_mm  <  600 OR height_mm  >  800
1	select title from paintings where width_mm < 600 or height_mm > 800	SELECT title FROM paintings WHERE width_mm  <  600 OR height_mm  >  800
0	select location from paintings where year < 1885 or year > 1930	SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  < 1885 OR YEAR  >  1930
1	select distinct location from paintings where year < 1885 or year > 1930	SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  < 1885 OR YEAR  >  1930
1	select paintingid from paintings where height_mm between 500 and 2000	SELECT paintingID FROM paintings WHERE height_mm  >  500 AND height_mm  <  2000
0	select paintingid from paintings where height_mm > 500 and width_mm < 2000	SELECT paintingID FROM paintings WHERE height_mm  >  500 AND height_mm  <  2000
0	select location from paintings where medium = 'on panel' intersect select location from paintings where medium = 'on canvas'	SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  "panel" INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  "canvas"
0	select location from paintings where medium = 'on panels' intersect select location from paintings where medium = 'on canvas'	SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  "panel" INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  "canvas"
1	select location from paintings where year < 1885 intersect select location from paintings where year > 1930	SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  >  1930
1	select location from paintings where year < 1885 intersect select location from paintings where year > 1930	SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  >  1930
0	select avg ( height_mm ) , avg ( width_mm ) from paintings where medium = 'oil' and location = '241'	SELECT avg(height_mm) ,  avg(width_mm) FROM paintings WHERE medium  =  "oil" AND LOCATION  =  "Gallery 241"
0	select avg ( height_mm ) , avg ( width_mm ) from paintings where medium = 'oil' and location = 241	SELECT avg(height_mm) ,  avg(width_mm) FROM paintings WHERE medium  =  "oil" AND LOCATION  =  "Gallery 241"
0	select max ( height_mm ) , max ( paintingid ) from paintings where year < 1900	SELECT max(height_mm) ,  paintingID FROM paintings WHERE YEAR  <  1900
0	select height_mm , paintingid from paintings where year < 1900	SELECT max(height_mm) ,  paintingID FROM paintings WHERE YEAR  <  1900
1	select max ( height_mm ) , max ( width_mm ) , year from paintings group by year	SELECT max(height_mm) ,  max(width_mm) ,  YEAR FROM paintings GROUP BY YEAR ORDER BY YEAR
1	select max ( height_mm ) , max ( width_mm ) , year from paintings group by year	SELECT max(height_mm) ,  max(width_mm) ,  YEAR FROM paintings GROUP BY YEAR ORDER BY YEAR
0	select avg ( height_mm ) , avg ( width_mm ) , artists.lname from artists join paintings on artists.artistid = paintings.painterid group by artists.artistid order by artists.lname asc	SELECT avg(height_mm) ,  avg(width_mm) ,  painterID FROM paintings GROUP BY painterID ORDER BY title
0	select avg ( height_mm ) , avg ( width_mm ) , artists.fname , artists.lname from paintings join artists on paintings.painterid = artists.artistid group by artists.artistid order by artists.fname asc	SELECT avg(height_mm) ,  avg(width_mm) ,  painterID FROM paintings GROUP BY painterID ORDER BY title
1	select artists.fname , count ( * ) from artists join paintings on artists.artistid = paintings.painterid group by artists.artistid having count ( * ) >= 2	SELECT T1.fname ,  count(*) FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2
1	select artists.fname , count ( * ) from artists join paintings on artists.artistid = paintings.painterid group by artists.artistid having count ( * ) >= 2	SELECT T1.fname ,  count(*) FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2
0	select deathyear from artists group by deathyear having count ( * ) <= 3	SELECT T1.deathYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  <=  3
1	select artists.deathyear from artists join paintings on artists.artistid = paintings.painterid group by artists.artistid having count ( * ) < 4	select t1.deathyear from artists as t1 join paintings as t2 on t1.artistid  =  t2.painterid group by t2.painterid having count(*)  <  4
1	select artists.deathyear from artists join sculptures on artists.artistid = sculptures.sculptorid group by artists.artistid order by count ( * ) asc limit 1	SELECT T1.deathYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) LIMIT 1
1	select artists.deathyear from artists join sculptures on artists.artistid = sculptures.sculptorid group by artists.artistid order by count ( * ) asc limit 1	SELECT T1.deathYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) LIMIT 1
0	sql placeholder	SELECT paintingID ,  height_mm FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY width_mm DESC LIMIT 1
0	sql placeholder	SELECT paintingID ,  height_mm FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY width_mm DESC LIMIT 1
0	sql placeholder	SELECT paintingID FROM paintings WHERE YEAR  <   (SELECT min(YEAR) FROM paintings WHERE LOCATION  =  'Gallery 240')
0	select paintingid from paintings where year < ( select min ( year ) from paintings where year = 240 )	SELECT paintingID FROM paintings WHERE YEAR  <   (SELECT min(YEAR) FROM paintings WHERE LOCATION  =  'Gallery 240')
1	select paintingid from paintings where height_mm > ( select max ( height_mm ) from paintings where year > 1900 )	SELECT paintingID FROM paintings WHERE height_mm  >   (SELECT max(height_mm) FROM paintings WHERE YEAR  >  1900)
1	select paintingid from paintings where height_mm > ( select max ( height_mm ) from paintings where year > 1900 )	SELECT paintingID FROM paintings WHERE height_mm  >   (SELECT max(height_mm) FROM paintings WHERE YEAR  >  1900)
1	select artists.fname , artists.lname from artists join paintings on artists.artistid = paintings.painterid where paintings.medium = 'oil' group by artists.artistid order by count ( * ) desc limit 3	SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  "oil" GROUP BY T2.painterID ORDER BY count(*) DESC LIMIT 3
0	select artists.fname , artists.lname from artists join paintings on artists.artistid = paintings.painterid where paintings.medium = 'oil' group by artists.artistid order by count ( * ) desc limit 1	SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  "oil" GROUP BY T2.painterID ORDER BY count(*) DESC LIMIT 3
1	select paintingid , location , title from paintings where medium = 'oil' order by year asc	SELECT paintingID ,  title ,  LOCATION FROM paintings WHERE medium  =  "oil" ORDER BY YEAR
1	select paintingid , location , title from paintings where medium = 'oil' order by year asc , paintingid , title	SELECT paintingID ,  title ,  LOCATION FROM paintings WHERE medium  =  "oil" ORDER BY YEAR
1	select year , location , title from paintings where height_mm > 1000 order by title asc	SELECT title ,  LOCATION ,  YEAR FROM paintings WHERE height_mm  >  1000 ORDER BY title
1	select year , location , title from paintings where height_mm > 1000 order by title asc	SELECT title ,  LOCATION ,  YEAR FROM paintings WHERE height_mm  >  1000 ORDER BY title
0	select fname , lname from artists except select artists.fname , artists.lname from artists join paintings on artists.artistid = paintings.painterid join sculptures on sculptures.sculptorid = artists.artistid	SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID
0	select fname , lname from artists where artistid not in ( select artistid from sculptures )	SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID
0	select location from paintings where year < 1885 except select location from paintings where medium = 'Canvas'	SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 AND mediumOn != "canvas"
0	select location from paintings where year < 1885 and medium != 'canvas'	SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 AND mediumOn != "canvas"
1	select count ( * ) from race	SELECT count(*) FROM race
1	select count ( * ) from race	SELECT count(*) FROM race
1	select winning_driver , winning_team from race order by winning_team asc	SELECT Winning_driver ,  Winning_team FROM race ORDER BY Winning_team ASC
1	select winning_driver , winning_team from race order by winning_team asc	SELECT Winning_driver ,  Winning_team FROM race ORDER BY Winning_team ASC
1	select winning_driver from race where pole_position != 'Junior Strous'	SELECT Winning_driver FROM race WHERE Pole_Position != 'Junior Strous'
1	select winning_driver from race where pole_position != 'Junior Strous'	SELECT Winning_driver FROM race WHERE Pole_Position != 'Junior Strous'
0	select constructor from driver order by age asc	SELECT DISTINCT CONSTRUCTOR FROM driver ORDER BY Age ASC
1	select distinct constructor from driver order by age asc	SELECT DISTINCT CONSTRUCTOR FROM driver ORDER BY Age ASC
1	select distinct entrant from driver where age >= 20	SELECT DISTINCT Entrant FROM driver WHERE Age  >=  20
1	select distinct entrant from driver where age >= 20	SELECT DISTINCT Entrant FROM driver WHERE Age  >=  20
1	select max ( age ) , min ( age ) from driver	SELECT max(Age) ,  min(Age) FROM driver
1	select max ( age ) , min ( age ) from driver	SELECT max(Age) ,  min(Age) FROM driver
1	select count ( distinct engine ) from driver where age > 30 or age < 20	SELECT count(DISTINCT Engine) FROM driver WHERE Age  >  30 OR Age  <  20
1	select count ( distinct engine ) from driver where age > 30 or age < 20	SELECT count(DISTINCT Engine) FROM driver WHERE Age  >  30 OR Age  <  20
1	select driver_name from driver order by driver_name desc	SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC
1	select driver_name from driver order by driver_name desc	SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC
1	select driver.driver_name , race.race_name from race join driver on race.driver_id = driver.driver_id	SELECT T1.Driver_Name ,  T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID
1	select driver.driver_name , race.race_name from race join driver on race.driver_id = driver.driver_id	SELECT T1.Driver_Name ,  T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID
0	select driver.driver_name , count ( * ) from race join driver on race.driver_id = driver.driver_id group by driver.driver_name	SELECT T1.Driver_Name ,  COUNT(*) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID
1	select driver.driver_name , count ( * ) from driver join race on driver.driver_id = race.driver_id group by driver.driver_id	SELECT T1.Driver_Name ,  COUNT(*) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID
1	select driver.age from race join driver on race.driver_id = driver.driver_id group by race.driver_id order by count ( * ) desc limit 1	SELECT T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID ORDER BY COUNT(*) DESC LIMIT 1
1	select driver.age from race join driver on race.driver_id = driver.driver_id group by race.driver_id order by count ( * ) desc limit 1	SELECT T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID ORDER BY COUNT(*) DESC LIMIT 1
1	select driver.driver_name , driver.age from race join driver on race.driver_id = driver.driver_id group by race.driver_id having count ( * ) >= 2	SELECT T1.Driver_Name ,  T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID HAVING COUNT(*)  >=  2
1	select driver.driver_name , driver.age from race join driver on race.driver_id = driver.driver_id group by race.driver_id having count ( * ) >= 2	SELECT T1.Driver_Name ,  T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID HAVING COUNT(*)  >=  2
1	select race.race_name from race join driver on race.driver_id = driver.driver_id where driver.age >= 26	SELECT T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE T1.Age  >=  26
1	select race.race_name from race join driver on race.driver_id = driver.driver_id where driver.age >= 26	SELECT T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE T1.Age  >=  26
1	select driver_name from driver where constructor != 'Bugatti'	SELECT Driver_Name FROM driver WHERE CONSTRUCTOR != "Bugatti"
1	select driver_name from driver where constructor != 'Bugatti'	SELECT Driver_Name FROM driver WHERE CONSTRUCTOR != "Bugatti"
1	select constructor , count ( * ) from driver group by constructor	SELECT CONSTRUCTOR ,  COUNT(*) FROM driver GROUP BY CONSTRUCTOR
1	select constructor , count ( * ) from driver group by constructor	SELECT CONSTRUCTOR ,  COUNT(*) FROM driver GROUP BY CONSTRUCTOR
1	select engine from driver group by engine order by count ( * ) desc limit 1	SELECT Engine FROM driver GROUP BY Engine ORDER BY COUNT(*) DESC LIMIT 1
0	select engine from driver group by engine having count ( engine ) = ( select max ( cnt ) from ( select count ( engine ) as cnt from driver group by engine ) )	SELECT Engine FROM driver GROUP BY Engine ORDER BY COUNT(*) DESC LIMIT 1
1	select engine from driver group by engine having count ( * ) >= 2	SELECT Engine FROM driver GROUP BY Engine HAVING COUNT(*)  >=  2
1	select engine from driver group by engine having count ( * ) >= 2	SELECT Engine FROM driver GROUP BY Engine HAVING COUNT(*)  >=  2
1	select driver_name from driver where driver_id not in ( select driver_id from race )	SELECT Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race)
1	select driver_name from driver where driver_id not in ( select driver_id from race )	SELECT Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race)
1	select constructor from driver where age < 20 intersect select constructor from driver where age > 30	SELECT CONSTRUCTOR FROM driver WHERE Age  <  20 INTERSECT SELECT CONSTRUCTOR FROM driver WHERE Age  >  30
1	select constructor from driver where age < 20 intersect select constructor from driver where age > 30	SELECT CONSTRUCTOR FROM driver WHERE Age  <  20 INTERSECT SELECT CONSTRUCTOR FROM driver WHERE Age  >  30
1	select winning_team from race group by winning_team having count ( * ) > 1	SELECT Winning_team FROM race GROUP BY Winning_team HAVING count(*)  >  1
1	select winning_team from race group by winning_team having count ( * ) > 1	SELECT Winning_team FROM race GROUP BY Winning_team HAVING count(*)  >  1
0	select d.driver_name from driver d inner join race r on d.driver_id = r.driver_id where r.pole_position in ( 'James Hinchcliffe' , 'Carl Skerlong' ) group by d.driver_id having count ( distinct r.pole_position ) = 2	SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  "Carl Skerlong" INTERSECT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  "James Hinchcliffe"
1	select driver.driver_name from race join driver on race.driver_id = driver.driver_id where race.pole_position = 'James Hinchcliffe' intersect select driver.driver_name from race join driver on race.driver_id = driver.driver_id where race.pole_position = 'Carl Skerlong'	SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  "Carl Skerlong" INTERSECT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  "James Hinchcliffe"
0	select distinct driver_name from driver where driver_id not in ( select driver_id from race where pole_position = 'James Hinchcliffe' )	SELECT Driver_Name FROM driver EXCEPT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  "James Hinchcliffe"
0	select driver_name from driver where driver_id not in ( select driver_id from race where pole_position = 'James Hinchcliffe' )	SELECT Driver_Name FROM driver EXCEPT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  "James Hinchcliffe"
1	select count ( * ) from languages	SELECT count(*) FROM languages
1	select count ( * ) from languages	SELECT count(*) FROM languages
1	select name from languages order by name asc	SELECT name FROM languages ORDER BY name ASC
1	select name from languages order by name asc	SELECT name FROM languages ORDER BY name ASC
1	select name from languages where name like '%ish%'	SELECT name FROM languages WHERE name LIKE "%ish%"
1	select name from languages where name like '%ish%'	SELECT name FROM languages WHERE name LIKE "%ish%"
1	select name from countries order by overall_score desc	SELECT name FROM countries ORDER BY overall_score DESC
1	select name from countries order by overall_score desc	SELECT name FROM countries ORDER BY overall_score DESC
1	select avg ( justice_score ) from countries	SELECT avg(justice_score) FROM countries
1	select avg ( justice_score ) from countries	SELECT avg(justice_score) FROM countries
1	select max ( health_score ) , min ( health_score ) from countries where name != 'Norway'	SELECT max(health_score) ,  min(health_score) FROM countries WHERE name != "Norway"
1	select max ( health_score ) , min ( health_score ) from countries where name != 'Norway'	SELECT max(health_score) ,  min(health_score) FROM countries WHERE name != "Norway"
1	select count ( distinct language_id ) from official_languages	SELECT count(DISTINCT language_id) FROM official_languages
1	select count ( distinct language_id ) from official_languages	SELECT count(DISTINCT language_id) FROM official_languages
1	select name from countries order by education_score desc	SELECT name FROM countries ORDER BY education_score DESC
1	select name from countries order by education_score desc	SELECT name FROM countries ORDER BY education_score DESC
0	select name from countries where politics_score = ( select max ( politics_score ) from countries )	SELECT name FROM countries ORDER BY politics_score DESC LIMIT 1
0	select name from countries where politics_score = ( select max ( politics_score ) from countries )	SELECT name FROM countries ORDER BY politics_score DESC LIMIT 1
1	select countries.name , languages.name from countries join official_languages on countries.id = official_languages.country_id join languages on official_languages.language_id = languages.id	SELECT T1.name ,  T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id
1	select countries.name , languages.name from countries join official_languages on countries.id = official_languages.country_id join languages on official_languages.language_id = languages.id	SELECT T1.name ,  T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id
0	select languages.name , count ( distinct countries.id ) from countries join official_languages on countries.id = official_languages.country_id join languages on official_languages.language_id = languages.id group by languages.name	SELECT T2.name ,  COUNT(*) FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.name
0	select languages.name , count ( distinct countries.id ) from countries join official_languages on countries.id = official_languages.country_id join languages on official_languages.language_id = languages.id group by languages.name	SELECT T2.name ,  COUNT(*) FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.name
0	select l.name from languages l where l.id in ( select ol.language_id from official_languages ol group by ol.language_id having count ( distinct ol.country_id ) = ( select max ( cnt ) from ( select count ( distinct ol.country_id ) as cnt from official_languages ol group by ol.language_id ) ) )	SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 1
1	select languages.name from languages join official_languages on languages.id = official_languages.language_id group by official_languages.language_id order by count ( * ) desc limit 1	SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 1
1	select languages.name from countries join official_languages on countries.id = official_languages.country_id join languages on official_languages.language_id = languages.id group by languages.id having count ( distinct official_languages.country_id ) >= 2	SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id HAVING COUNT(*)  >=  2
1	select languages.name from countries join official_languages on countries.id = official_languages.country_id join languages on official_languages.language_id = languages.id group by languages.id having count ( distinct country_id ) >= 2	SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id HAVING COUNT(*)  >=  2
0	select avg ( overall_score ) from countries where id in ( select country_id from official_languages where language_id = 'English' )	SELECT avg(T1.overall_score) FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T3.name  =  "English"
0	select avg ( overall_score ) from countries join official_languages on countries.id = official_languages.country_id join languages on official_languages.language_id = languages.id where languages.name = 'english'	SELECT avg(T1.overall_score) FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T3.name  =  "English"
0	select official_languages.language_id from countries join official_languages on countries.id = official_languages.country_id join languages on official_languages.language_id = languages.id group by official_languages.language_id order by count ( * ) desc limit 3	SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 3
1	select languages.name from countries join official_languages on countries.id = official_languages.country_id join languages on official_languages.language_id = languages.id group by official_languages.language_id order by count ( * ) desc limit 3	SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 3
1	select languages.name from countries join official_languages on countries.id = official_languages.country_id join languages on official_languages.language_id = languages.id group by languages.id order by avg ( countries.overall_score ) desc	SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id GROUP BY T3.id ORDER BY avg(T1.overall_score) DESC
0	select languages.name from countries join official_languages on countries.id = official_languages.country_id join languages on official_languages.language_id = languages.id order by countries.overall_score desc	SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id GROUP BY T3.id ORDER BY avg(T1.overall_score) DESC
1	select countries.name from countries join official_languages on countries.id = official_languages.country_id group by countries.id order by count ( * ) desc limit 1	SELECT T1.Name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1
1	select countries.name from countries join official_languages on countries.id = official_languages.country_id group by countries.id order by count ( * ) desc limit 1	SELECT T1.Name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1
1	select name from languages where id not in ( select language_id from official_languages )	SELECT name FROM languages WHERE id NOT IN (SELECT language_id FROM official_languages)
1	select name from languages where id not in ( select language_id from official_languages )	SELECT name FROM languages WHERE id NOT IN (SELECT language_id FROM official_languages)
1	select name from countries where id not in ( select country_id from official_languages )	SELECT name FROM countries WHERE id NOT IN (SELECT country_id FROM official_languages)
1	select name from countries where id not in ( select country_id from official_languages )	SELECT name FROM countries WHERE id NOT IN (SELECT country_id FROM official_languages)
0	select name from languages where id in ( select language_id from official_languages where country_id in ( select id from countries where overall_score > 95 ) intersect select language_id from official_languages where country_id in ( select id from countries where overall_score < 90 ) )	SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  >  95 INTERSECT SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  <  90
0	select name from languages where id in ( select language_id from official_languages where country_id in ( select id from countries where overall_score > 95 ) ) and id in ( select language_id from official_languages where country_id in ( select id from countries where overall_score < 90 ) )	SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  >  95 INTERSECT SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  <  90
1	select country , town_city from addresses	SELECT country ,  town_city FROM Addresses;
1	select country , town_city from addresses	SELECT country ,  town_city FROM Addresses;
1	select distinct addresses.county_state_province from addresses join properties on addresses.address_id = properties.property_address_id	SELECT DISTINCT T1.county_state_province FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id;
0	select distinct county_state_province from addresses	SELECT DISTINCT T1.county_state_province FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id;
1	select feature_description from features where feature_name = 'rooftop'	SELECT feature_description FROM Features WHERE feature_name  =  'rooftop';
1	select feature_description from features where feature_name = 'rooftop'	SELECT feature_description FROM Features WHERE feature_name  =  'rooftop';
0	select features.feature_name , features.feature_description from features join property_features on features.feature_id = property_features.feature_id group by property_features.feature_id order by count ( * ) desc limit 1	SELECT T1.feature_name ,  T1.feature_description FROM Features AS T1 JOIN Property_Features AS T2 ON T1.feature_id  =  T2.feature_id GROUP BY T1.feature_name ORDER BY count(*) DESC LIMIT 1;
0	select features.feature_name , features.feature_description from features join property_features on features.feature_id = property_features.feature_id group by property_features.feature_id order by count ( * ) desc limit 1	SELECT T1.feature_name ,  T1.feature_description FROM Features AS T1 JOIN Property_Features AS T2 ON T1.feature_id  =  T2.feature_id GROUP BY T1.feature_name ORDER BY count(*) DESC LIMIT 1;
1	select min ( room_count ) from properties	SELECT min(room_count) FROM Properties;
1	select min ( room_count ) from properties	SELECT min(room_count) FROM Properties;
0	select count ( * ) from properties where parking_lots = 1 union select count ( * ) from properties	SELECT count(*) FROM Properties WHERE parking_lots  =  1 OR garage_yn  =  1;
0	select count ( * ) from properties where parking_lots = 1 union select count ( * ) from properties where garage_yn = 1	SELECT count(*) FROM Properties WHERE parking_lots  =  1 OR garage_yn  =  1;
0	select distinct u.age_category_code from users u join ref_user_categories rc on u.user_category_code = rc.user_category_code where rc.user_category_description like '%Mother%'	SELECT T2.age_category_code FROM Ref_User_Categories AS T1 JOIN Users AS T2 ON T1.user_category_code  =  T2.user_category_code WHERE T1.User_category_description LIKE "%Mother";
0	sql placeholder	SELECT T2.age_category_code FROM Ref_User_Categories AS T1 JOIN Users AS T2 ON T1.user_category_code  =  T2.user_category_code WHERE T1.User_category_description LIKE "%Mother";
1	select users.first_name from properties join users on properties.owner_user_id = users.user_id group by properties.owner_user_id order by count ( * ) desc limit 1	SELECT T1.first_name FROM Users AS T1 JOIN Properties AS T2 ON T2.owner_user_id  =  T1.User_id GROUP BY T1.User_id ORDER BY count(*) DESC LIMIT 1;
1	select users.first_name from properties join users on properties.owner_user_id = users.user_id group by properties.owner_user_id order by count ( * ) desc limit 1	SELECT T1.first_name FROM Users AS T1 JOIN Properties AS T2 ON T2.owner_user_id  =  T1.User_id GROUP BY T1.User_id ORDER BY count(*) DESC LIMIT 1;
0	sql placeholder	SELECT avg(T3.room_count) FROM Property_Features AS T1 JOIN Features AS T2 ON T1.feature_id  =  T2.feature_id JOIN Properties AS T3 ON T1.property_id  =  T3.property_id WHERE T2.feature_name  =  'garden';
0	select avg ( properties.room_count ) from properties join property_features on properties.property_id = property_features.property_id join features on property_features.feature_id = features.feature_id where property_features.property_feature_description = 'garden'	SELECT avg(T3.room_count) FROM Property_Features AS T1 JOIN Features AS T2 ON T1.feature_id  =  T2.feature_id JOIN Properties AS T3 ON T1.property_id  =  T3.property_id WHERE T2.feature_name  =  'garden';
0	select distinct addresses.town_city from addresses join properties on addresses.address_id = properties.property_address_id join property_features on properties.property_id = property_features.property_id join features on property_features.feature_id = features.feature_id where features.feature_name = 'swimming pool'	SELECT T2.town_city FROM Properties AS T1 JOIN Addresses AS T2 ON T1.property_address_id  =  T2.address_id JOIN Property_Features AS T3 ON T1.property_id  =  T3.property_id JOIN Features AS T4 ON T4.feature_id  =  T3.feature_id WHERE T4.feature_name  =  'swimming pool';
0	select distinct addresses.town_city from addresses inner join properties on addresses.address_id = properties.property_address_id where properties.property_name = 'swimming_pool'	SELECT T2.town_city FROM Properties AS T1 JOIN Addresses AS T2 ON T1.property_address_id  =  T2.address_id JOIN Property_Features AS T3 ON T1.property_id  =  T3.property_id JOIN Features AS T4 ON T4.feature_id  =  T3.feature_id WHERE T4.feature_name  =  'swimming pool';
0	select property_id , price_min from properties where vendor_requested_price = ( select min ( vendor_requested_price ) from properties )	SELECT property_id ,  vendor_requested_price FROM Properties ORDER BY vendor_requested_price LIMIT 1;
0	select property_id , vendor_requested_price from properties where vendor_requested_price = ( select min ( vendor_requested_price ) from properties )	SELECT property_id ,  vendor_requested_price FROM Properties ORDER BY vendor_requested_price LIMIT 1;
1	select avg ( room_count ) from properties	SELECT avg(room_count) FROM Properties;
1	select avg ( room_count ) from properties	SELECT avg(room_count) FROM Properties;
1	select count ( distinct room_size ) from rooms	SELECT count(DISTINCT room_size) FROM Rooms;
1	select count ( distinct room_size ) from rooms	SELECT count(DISTINCT room_size) FROM Rooms;
0	select user_id , search_string from user_searches group by user_id having count ( * ) >= 2	SELECT search_seq ,  user_id FROM User_Searches GROUP BY user_id HAVING count(*) >= 2;
1	select user_id , search_seq from user_searches group by user_id having count ( * ) >= 2	SELECT search_seq ,  user_id FROM User_Searches GROUP BY user_id HAVING count(*) >= 2;
1	select max ( search_datetime ) from user_searches	SELECT max(search_datetime) FROM User_Searches;
1	select max ( search_datetime ) from user_searches	SELECT max(search_datetime) FROM User_Searches;
1	select search_datetime , search_string from user_searches order by search_string desc	SELECT search_datetime ,  search_string FROM User_Searches ORDER BY search_string DESC;
1	select search_string , search_datetime from user_searches order by search_string desc	SELECT search_datetime ,  search_string FROM User_Searches ORDER BY search_string DESC;
0	select distinct zip_postcode from addresses where address_id not in ( select properties.property_address_id from properties join users on properties.owner_user_id = users.user_id group by properties.owner_user_id having count ( * ) <= 2 )	SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id WHERE T2.owner_user_id NOT IN ( SELECT owner_user_id FROM Properties GROUP BY owner_user_id HAVING count(*)  <=  2 );
0	select distinct zip_postcode from addresses where address_id not in ( select property_address_id from properties group by property_address_id having count ( property_id ) <= 2 )	SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id WHERE T2.owner_user_id NOT IN ( SELECT owner_user_id FROM Properties GROUP BY owner_user_id HAVING count(*)  <=  2 );
1	select users.user_id , users.user_category_code from users join user_searches on users.user_id = user_searches.user_id group by users.user_id having count ( * ) = 1	SELECT T1.user_category_code ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  =  1;
1	select users.user_id , users.user_category_code from users join user_searches on users.user_id = user_searches.user_id group by users.user_id having count ( * ) = 1	SELECT T1.user_category_code ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  =  1;
0	select age_category_code from users where user_id = ( select user_id from user_searches order by search_datetime asc limit 1 )	SELECT T1.age_category_code FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id ORDER BY T2.search_datetime LIMIT 1;
1	select users.age_category_code from user_searches join users on user_searches.user_id = users.user_id order by user_searches.search_datetime asc limit 1	SELECT T1.age_category_code FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id ORDER BY T2.search_datetime LIMIT 1;
0	select login_name from users where age_category_code = 'Senior' order by first_name asc	SELECT login_name FROM Users WHERE user_category_code  =  'Senior Citizen' ORDER BY first_name
0	select login_name from users where age_category_code = 'Senior' order by first_name asc	SELECT login_name FROM Users WHERE user_category_code  =  'Senior Citizen' ORDER BY first_name
0	select count ( * ) from users join user_searches on users.user_id = user_searches.user_id where users.is_buyer = 'Y'	SELECT count(*) FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id WHERE T1.is_buyer  =  1;
0	select count ( * ) from users join user_searches on users.user_id = user_searches.user_id where users.is_buyer = 'Y'	SELECT count(*) FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id WHERE T1.is_buyer  =  1;
1	select date_registered from users where login_name = 'ratione'	SELECT date_registered FROM Users WHERE login_name  =  'ratione';
1	select date_registered from users where login_name = 'ratione'	SELECT date_registered FROM Users WHERE login_name  =  'ratione';
1	select first_name , middle_name , last_name , login_name from users where is_seller = 1	SELECT first_name ,  middle_name ,  last_name ,  login_name FROM Users WHERE is_seller  =  1;
0	select first_name , middle_name , last_name , login_name from users where is_seller = 'Y'	SELECT first_name ,  middle_name ,  last_name ,  login_name FROM Users WHERE is_seller  =  1;
0	sql placeholder	SELECT T1.line_1_number_building ,  T1.line_2_number_street ,  T1.town_city FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.user_category_code  =  'Senior Citizen';
0	select addresses.line_1_number_building , addresses.line_2_number_street , addresses.town_city from addresses join users on addresses.address_id = users.user_address_id where users.age_category_code = 'Senior'	SELECT T1.line_1_number_building ,  T1.line_2_number_street ,  T1.town_city FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.user_category_code  =  'Senior Citizen';
0	select count ( distinct properties.property_id ) from properties join property_features on properties.property_id = property_features.property_id group by properties.property_id having count ( distinct property_features.feature_id ) >= 2	SELECT count(*) FROM Properties GROUP BY property_id HAVING count(*)  >= 2;
0	select count ( distinct properties.property_id ) from properties join property_features on properties.property_id = property_features.property_id group by properties.property_id having count ( distinct property_features.feature_id ) >= 2	SELECT count(*) FROM Properties GROUP BY property_id HAVING count(*)  >= 2;
1	select properties.property_id , count ( * ) from properties join property_photos on properties.property_id = property_photos.property_id group by properties.property_id	SELECT count(*) ,  property_id FROM Property_Photos GROUP BY property_id;
1	select count ( * ) , properties.property_id from properties join property_photos on properties.property_id = property_photos.property_id group by properties.property_id	SELECT count(*) ,  property_id FROM Property_Photos GROUP BY property_id;
1	select properties.owner_user_id , count ( * ) from properties join property_photos on properties.property_id = property_photos.property_id group by properties.owner_user_id	SELECT T1.owner_user_id ,  count(*) FROM Properties AS T1 JOIN Property_Photos AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.owner_user_id;
1	select properties.owner_user_id , count ( * ) from properties join property_photos on properties.property_id = property_photos.property_id group by properties.owner_user_id	SELECT T1.owner_user_id ,  count(*) FROM Properties AS T1 JOIN Property_Photos AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.owner_user_id;
0	select sum ( price_max ) from properties join users on properties.owner_user_id = users.user_id where users.age_category_code = 'Single Mother' or users.age_category_code = 'Student'	SELECT sum(T1.price_max) FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T2.user_category_code  =  'Single Mother' OR T2.user_category_code  =  'Student';
0	select sum ( price_max ) from properties join users on properties.owner_user_id = users.user_id where users.age_category_code = 'Single Mother' or users.age_category_code = 'Student'	SELECT sum(T1.price_max) FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T2.user_category_code  =  'Single Mother' OR T2.user_category_code  =  'Student';
1	select user_property_history.datestamp , properties.property_name from user_property_history join properties on user_property_history.property_id = properties.property_id order by user_property_history.datestamp asc	SELECT T1.datestamp ,  T2.property_name FROM User_Property_History AS T1 JOIN Properties AS T2 ON T1.property_id  =  T2.property_id ORDER BY datestamp;
1	select user_property_history.datestamp , properties.property_name from user_property_history join properties on user_property_history.property_id = properties.property_id order by user_property_history.datestamp asc	SELECT T1.datestamp ,  T2.property_name FROM User_Property_History AS T1 JOIN Properties AS T2 ON T1.property_id  =  T2.property_id ORDER BY datestamp;
1	select ref_property_types.property_type_description , properties.property_type_code from ref_property_types join properties on ref_property_types.property_type_code = properties.property_type_code group by properties.property_type_code order by count ( * ) desc limit 1	SELECT T1.property_type_description ,  T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code ORDER BY count(*) DESC LIMIT 1;
0	select property_type_description , property_type_code from ref_property_types where exists ( select 1 from properties where properties.property_type_code = ref_property_types.property_type_code group by property_type_code order by count ( * ) desc limit 1 )	SELECT T1.property_type_description ,  T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code ORDER BY count(*) DESC LIMIT 1;
1	select age_category_description from ref_age_categories where age_category_code = 'Over 60'	SELECT age_category_description FROM Ref_Age_Categories WHERE age_category_code  =  'Over 60';
1	select age_category_description from ref_age_categories where age_category_code = 'Over 60'	SELECT age_category_description FROM Ref_Age_Categories WHERE age_category_code  =  'Over 60';
1	select room_size , count ( * ) from rooms group by room_size	SELECT room_size ,  count(*) FROM Rooms GROUP BY room_size
1	select room_size , count ( * ) from rooms group by room_size	SELECT room_size ,  count(*) FROM Rooms GROUP BY room_size
1	select addresses.country from users join addresses on users.user_address_id = addresses.address_id where users.first_name = 'Robbie'	SELECT T1.country FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.first_name  =  'Robbie';
1	select addresses.country from users join addresses on users.user_address_id = addresses.address_id where users.first_name = 'Robbie'	SELECT T1.country FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.first_name  =  'Robbie';
0	select first_name , middle_name , last_name from users where user_id in ( select owner_user_id from properties )	SELECT first_name ,  middle_name ,  last_name FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T1.property_address_id  =  T2.user_address_id;
0	sql placeholder	SELECT first_name ,  middle_name ,  last_name FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T1.property_address_id  =  T2.user_address_id;
0	select search_string from user_searches where user_id not in ( select user_id from properties )	SELECT search_string FROM User_Searches EXCEPT SELECT T1.search_string FROM User_Searches AS T1 JOIN Properties AS T2 ON T1.user_id  =  T2.owner_user_id;
0	select search_string from user_searches where user_id not in ( select owner_user_id from properties )	SELECT search_string FROM User_Searches EXCEPT SELECT T1.search_string FROM User_Searches AS T1 JOIN Properties AS T2 ON T1.user_id  =  T2.owner_user_id;
0	select users.last_name , users.user_id from users join user_property_history on users.user_id = user_property_history.user_id group by users.user_id having count ( * ) >= 2 and count ( * ) <= 2	SELECT T1.last_name ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  <=  2 INTERSECT SELECT T3.last_name ,  T3.user_id FROM Users AS T3 JOIN Properties AS T4 ON T3.user_id  =  T4.owner_user_id GROUP BY T3.user_id HAVING count(*)  >=  2;
0	select users.last_name , users.user_id from users join user_searches on users.user_id = user_searches.user_id group by users.user_id having count ( * ) <= 2 intersect select users.last_name , users.user_id from users join user_searches on users.user_id = user_searches.user_id group by users.user_id having count ( * ) >= 2	SELECT T1.last_name ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  <=  2 INTERSECT SELECT T3.last_name ,  T3.user_id FROM Users AS T3 JOIN Properties AS T4 ON T3.user_id  =  T4.owner_user_id GROUP BY T3.user_id HAVING count(*)  >=  2;
1	select count ( * ) from bike where weight > 780	SELECT count(*) FROM bike WHERE weight  >  780
1	select product_name , weight from bike order by price asc	SELECT product_name ,  weight FROM bike ORDER BY price ASC
1	select heat , name , nation from cyclist	SELECT heat ,  name ,  nation FROM cyclist
1	select max ( weight ) , min ( weight ) from bike	SELECT max(weight) ,  min(weight) FROM bike
1	select avg ( price ) from bike where material = 'Carbon CC'	SELECT avg(price) FROM bike WHERE material  =  'Carbon CC'
1	select name , result from cyclist where nation != 'Russia'	SELECT name ,  RESULT FROM cyclist WHERE nation != 'Russia'
1	select distinct bike.id , bike.product_name from cyclists_own_bikes join bike on cyclists_own_bikes.bike_id = bike.id where cyclists_own_bikes.purchase_year > 2015	SELECT DISTINCT T1.id ,  T1.product_name FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.bike_id WHERE T2.purchase_year  >  2015
1	select bike.id , bike.product_name from cyclists_own_bikes join bike on cyclists_own_bikes.bike_id = bike.id group by bike.id having count ( * ) >= 4	SELECT T1.id ,  T1.product_name FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.bike_id GROUP BY T1.id HAVING count(*)  >=  4
1	select cyclist.id , cyclist.name from cyclists_own_bikes join cyclist on cyclists_own_bikes.cyclist_id = cyclist.id group by cyclists_own_bikes.cyclist_id order by count ( * ) desc limit 1	SELECT T1.id ,  T1.name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
1	select distinct bike.product_name from cyclists_own_bikes join bike on cyclists_own_bikes.bike_id = bike.id join cyclist on cyclists_own_bikes.cyclist_id = cyclist.id where cyclist.nation = 'Russia' or cyclist.nation = 'Great Britain'	SELECT DISTINCT T3.product_name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.nation  =  'Russia' OR T1.nation  =  'Great Britain'
1	select count ( distinct heat ) from cyclist	SELECT count(DISTINCT heat) FROM cyclist
1	select count ( * ) from cyclist where id not in ( select cyclist_id from cyclists_own_bikes where purchase_year > 2015 )	SELECT count(*) FROM cyclist WHERE id NOT IN ( SELECT cyclist_id FROM cyclists_own_bikes WHERE purchase_year  >  2015 )
0	select distinct bike.product_name from cyclists_own_bikes join bike on cyclists_own_bikes.bike_id = bike.id join cyclist on cyclists_own_bikes.cyclist_id = cyclist.id where cyclist.result > '4:21.558'	SELECT DISTINCT T3.product_name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.result  <  '4:21.558'
1	select bike.product_name , bike.price from cyclists_own_bikes join bike on cyclists_own_bikes.bike_id = bike.id join cyclist on cyclists_own_bikes.cyclist_id = cyclist.id where cyclist.name = 'Bradley Wiggins' intersect select bike.product_name , bike.price from cyclists_own_bikes join bike on cyclists_own_bikes.bike_id = bike.id join cyclist on cyclists_own_bikes.cyclist_id = cyclist.id where cyclist.name = 'Antonio Tauler'	SELECT T3.product_name ,  T3.price FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.name  =  'Bradley Wiggins' INTERSECT SELECT T3.product_name ,  T3.price FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.name  =  'Antonio Tauler'
0	select name , nation , result from cyclist where id not in ( select cyclist_id from cyclists_own_bikes )	SELECT name ,  nation ,  RESULT FROM cyclist EXCEPT SELECT T1.name ,  T1.nation ,  T1.result FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id
1	select product_name from bike where material like '%fiber%'	SELECT product_name FROM bike WHERE material LIKE "%fiber%"
1	select cyclist.id , count ( * ) from cyclists_own_bikes join cyclist on cyclists_own_bikes.cyclist_id = cyclist.id group by cyclist.id order by cyclist.id asc	SELECT cyclist_id ,  count(*) FROM cyclists_own_bikes GROUP BY cyclist_id ORDER BY cyclist_id
0	select g.flavor , g.price from goods g where g.price = ( select max ( price ) from goods )	SELECT id ,  flavor FROM goods WHERE food  =  "Cake" ORDER BY price DESC LIMIT 1
0	select id , flavor from goods where price = ( select max ( price ) from goods )	SELECT id ,  flavor FROM goods WHERE food  =  "Cake" ORDER BY price DESC LIMIT 1
0	select flavor , price from goods where price = ( select min ( price ) from goods where flavor = 'cookie' )	SELECT id ,  flavor FROM goods WHERE food  =  "Cookie" ORDER BY price LIMIT 1
0	select id , flavor from goods where price = ( select min ( price ) from goods where food = 'cookie' )	SELECT id ,  flavor FROM goods WHERE food  =  "Cookie" ORDER BY price LIMIT 1
1	select id from goods where flavor = 'Apple'	SELECT id FROM goods WHERE flavor  =  "Apple"
1	select id from goods where flavor = 'Apple'	SELECT id FROM goods WHERE flavor  =  "Apple"
1	select id from goods where price < 3	SELECT id FROM goods WHERE price  <  3
1	select id from goods where price < 3	SELECT id FROM goods WHERE price  <  3
0	sql placeholder	SELECT DISTINCT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber WHERE T1.Flavor  =  "Lemon" AND T1.Food  =  "Cake"
0	sql placeholder	SELECT DISTINCT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber WHERE T1.Flavor  =  "Lemon" AND T1.Food  =  "Cake"
0	sql placeholder	SELECT T1.food ,  count(DISTINCT T3.CustomerId) FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber GROUP BY T1.food
0	sql placeholder	SELECT T1.food ,  count(DISTINCT T3.CustomerId) FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber GROUP BY T1.food
1	select customers.id from customers join receipts on customers.id = receipts.customerid group by customers.id having count ( * ) >= 15	SELECT CustomerId FROM receipts GROUP BY CustomerId HAVING count(*)  >=  15
1	select customers.id from customers join receipts on customers.id = receipts.customerid group by customers.id having count ( * ) >= 15	SELECT CustomerId FROM receipts GROUP BY CustomerId HAVING count(*)  >=  15
0	sql placeholder	SELECT T2.LastName FROM receipts AS T1 JOIN customers AS T2 ON T1.CustomerId  =  T2.id GROUP BY T2.id HAVING count(*)  >  10
0	sql placeholder	SELECT T2.LastName FROM receipts AS T1 JOIN customers AS T2 ON T1.CustomerId  =  T2.id GROUP BY T2.id HAVING count(*)  >  10
0	select count ( distinct flavor ) from goods where food = 'Cake'	SELECT count(*) FROM goods WHERE food  =  "Cake"
0	select count ( distinct g.flavor ) from goods g where g.id in ( select item from items g where g.id = g.id )	SELECT count(*) FROM goods WHERE food  =  "Cake"
0	select distinct flavor from goods where food = 'Croissant'	SELECT flavor FROM goods WHERE food  =  "Croissant"
0	select distinct flavor from goods where food = 'croissant'	SELECT flavor FROM goods WHERE food  =  "Croissant"
0	select distinct items.item from items join receipts on items.receipt = receipts.receiptnumber join customers on receipts.customerid = customers.id where customers.firstname = 'James' and customers.lastname = 'Smith'	SELECT DISTINCT T1.item FROM items AS T1 JOIN receipts AS T2 ON T1.receipt  =  T2.ReceiptNumber WHERE T2.CustomerId  =  15
0	select distinct items.item from items join receipts on items.receipt = receipts.receiptnumber join customers on customers.id = receipts.customerid where customers.firstname = '15' and customers.lastname = ''	SELECT DISTINCT T1.item FROM items AS T1 JOIN receipts AS T2 ON T1.receipt  =  T2.ReceiptNumber WHERE T2.CustomerId  =  15
1	select food , avg ( price ) , max ( price ) , min ( price ) from goods group by food	SELECT food ,  avg(price) ,  max(price) ,  min(price) FROM goods GROUP BY food
1	select avg ( price ) , min ( price ) , max ( price ) , food from goods group by food	SELECT food ,  avg(price) ,  max(price) ,  min(price) FROM goods GROUP BY food
0	select receipts.receiptnumber from receipts join items on receipts.receiptnumber = items.receipt where items.item = 'Cake' intersect select receipts.receiptnumber from receipts join items on receipts.receiptnumber = items.receipt where items.item = 'Cookie'	SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  "Cake" INTERSECT SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  "Cookie"
0	sql placeholder	SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  "Cake" INTERSECT SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  "Cookie"
0	sql placeholder	SELECT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id JOIN customers AS T4 ON T4.Id  =  T1.CustomerId WHERE T3.food  =  "Croissant" AND T4.LastName  =  'LOGAN'
0	select receipts.receiptnumber from customers join receipts on customers.id = receipts.customerid join items on receipts.receiptnumber = items.receipt where customers.lastname = 'Logan' and items.item = 'croissant'	SELECT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id JOIN customers AS T4 ON T4.Id  =  T1.CustomerId WHERE T3.food  =  "Croissant" AND T4.LastName  =  'LOGAN'
0	select receipts.receiptnumber , receipts.date from receipts join items on receipts.receiptnumber = items.receipt where items.item = ( select max ( price ) from goods )	SELECT T1.ReceiptNumber ,  T1.Date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id ORDER BY T3.price DESC LIMIT 1
0	select receipts.receiptnumber , receipts.date from receipts join items on receipts.receiptnumber = items.receipt where items.item = ( select max ( price ) from goods )	SELECT T1.ReceiptNumber ,  T1.Date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id ORDER BY T3.price DESC LIMIT 1
0	select item from ( select item , count ( receipt ) as cnt from items group by item ) where cnt = ( select min ( cnt ) from ( select count ( receipt ) as cnt from items group by item ) )	SELECT item FROM items GROUP BY item ORDER BY count(*) LIMIT 1
1	select item from items group by item order by count ( * ) asc limit 1	SELECT item FROM items GROUP BY item ORDER BY count(*) LIMIT 1
1	select food , count ( * ) from goods group by food	SELECT count(*) ,  food FROM goods GROUP BY food
1	select food , count ( * ) from goods group by food	SELECT count(*) ,  food FROM goods GROUP BY food
1	select food , avg ( price ) from goods group by food	SELECT avg(price) ,  food FROM goods GROUP BY food
1	select food , avg ( price ) from goods group by food	SELECT avg(price) ,  food FROM goods GROUP BY food
1	select id from goods where flavor = 'Apricot' and price < 5	SELECT id FROM goods WHERE flavor  =  "Apricot" AND price  <  5
1	select id from goods where flavor = 'Apricot' and price < 5	SELECT id FROM goods WHERE flavor  =  "Apricot" AND price  <  5
0	select flavor from goods where price > 10	SELECT flavor FROM goods WHERE food  =  "Cake" AND price  >  10
0	select flavor from goods where price > 10	SELECT flavor FROM goods WHERE food  =  "Cake" AND price  >  10
1	select distinct id , price from goods where price < ( select avg ( price ) from goods )	SELECT DISTINCT id ,  price FROM goods WHERE price  <  (SELECT avg(price) FROM goods)
1	select distinct id , price from goods where price < ( select avg ( price ) from goods )	SELECT DISTINCT id ,  price FROM goods WHERE price  <  (SELECT avg(price) FROM goods)
0	select distinct id from goods where price < ( select max ( price ) from goods where flavor = 'Tart' )	SELECT DISTINCT id FROM goods WHERE price  <  (SELECT max(price) FROM goods WHERE food  =  "Tart")
0	select distinct id from goods where price < ( select min ( price ) from goods where flavor = 'Tart' )	SELECT DISTINCT id FROM goods WHERE price  <  (SELECT max(price) FROM goods WHERE food  =  "Tart")
0	select distinct receipts.receiptnumber from receipts join goods on receipts.receiptnumber = goods.id where goods.price > 13	SELECT DISTINCT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  13
1	select distinct receipts.receiptnumber from receipts join items on receipts.receiptnumber = items.receipt join goods on items.item = goods.id where goods.price > 13	SELECT DISTINCT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  13
0	sql placeholder	SELECT DISTINCT T1.date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  15
0	select receipts.date from receipts join items on receipts.receiptnumber = items.receipt join customers on customers.id = receipts.customerid join goods on items.item = goods.id where goods.price > 15	SELECT DISTINCT T1.date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  15
1	select id from goods where id like '%APP%'	SELECT id FROM goods WHERE id LIKE "%APP%"
1	select id from goods where id like '%APP%'	SELECT id FROM goods WHERE id LIKE "%APP%"
1	select id , price from goods where id like '%70%'	SELECT id ,  price FROM goods WHERE id LIKE "%70%"
1	select id , price from goods where id like '%70%'	SELECT id ,  price FROM goods WHERE id LIKE "%70%"
0	select lastname from customers order by lastname asc	SELECT DISTINCT LastName FROM customers ORDER BY LastName
0	select lastname from customers order by lastname asc	SELECT DISTINCT LastName FROM customers ORDER BY LastName
1	select id from goods order by id asc	SELECT DISTINCT id FROM goods ORDER BY id
1	select distinct id from goods order by id asc	SELECT DISTINCT id FROM goods ORDER BY id
0	sql placeholder	SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  "Apple" AND T2.food  =  "Pie" UNION SELECT ReceiptNumber FROM receipts WHERE CustomerId  =  12
0	sql placeholder	SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  "Apple" AND T2.food  =  "Pie" UNION SELECT ReceiptNumber FROM receipts WHERE CustomerId  =  12
0	select receipts.date from receipts where receipts.date = ( select max ( date ) from receipts )	SELECT ReceiptNumber ,  date FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date DESC LIMIT 1)
1	select receiptnumber , date from receipts where date = ( select max ( date ) from receipts )	SELECT ReceiptNumber ,  date FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date DESC LIMIT 1)
0	sql placeholder	SELECT T1.Receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.price  >  10 UNION SELECT ReceiptNumber FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date LIMIT 1)
0	sql placeholder	SELECT T1.Receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.price  >  10 UNION SELECT ReceiptNumber FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date LIMIT 1)
0	select id from goods where price between 3 and 7 and food = 'Cookie' or flavor = 'Cake'	SELECT id FROM goods WHERE food  =  "Cookie" OR food  =  "Cake" AND price BETWEEN 3 AND 7
0	select id from goods where price between 3 and 7 and food = 'Cookies' or flavor = 'Cake'	SELECT id FROM goods WHERE food  =  "Cookie" OR food  =  "Cake" AND price BETWEEN 3 AND 7
1	select customers.firstname , customers.lastname from customers join receipts on customers.id = receipts.customerid order by receipts.date asc limit 1	SELECT T1.FirstName ,  T1.LastName FROM customers AS T1 JOIN receipts AS T2 ON T1.id  =  T2.CustomerId ORDER BY T2.date LIMIT 1
0	sql placeholder	SELECT T1.FirstName ,  T1.LastName FROM customers AS T1 JOIN receipts AS T2 ON T1.id  =  T2.CustomerId ORDER BY T2.date LIMIT 1
1	select avg ( price ) from goods where flavor = 'Blackberry' or flavor = 'Blueberry'	SELECT avg(price) FROM goods WHERE flavor  =  "Blackberry" OR flavor  =  "Blueberry"
1	select avg ( price ) from goods where flavor = 'Blackberry' or flavor = 'Blueberry'	SELECT avg(price) FROM goods WHERE flavor  =  "Blackberry" OR flavor  =  "Blueberry"
1	select min ( price ) from goods where flavor = 'Cheese'	SELECT min(price) FROM goods WHERE flavor  =  "Cheese"
0	select price from goods where flavor = 'Cheese' and price = ( select min ( price ) from goods where flavor = 'Cheese' )	SELECT min(price) FROM goods WHERE flavor  =  "Cheese"
1	select max ( price ) , avg ( price ) , min ( price ) , flavor from goods group by flavor order by flavor asc	SELECT max(price) ,  min(price) ,  avg(price) ,  flavor FROM goods GROUP BY flavor ORDER BY flavor
1	select max ( price ) , min ( price ) , avg ( price ) , flavor from goods group by flavor order by flavor asc	SELECT max(price) ,  min(price) ,  avg(price) ,  flavor FROM goods GROUP BY flavor ORDER BY flavor
1	select min ( price ) , max ( price ) , food from goods group by food order by food asc	SELECT min(price) ,  max(price) ,  food FROM goods GROUP BY food ORDER BY food
0	select min ( price ) , max ( price ) from goods where food = 'food' order by food asc	SELECT min(price) ,  max(price) ,  food FROM goods GROUP BY food ORDER BY food
1	select date from receipts group by date order by count ( * ) desc limit 3	SELECT date FROM receipts GROUP BY date ORDER BY count(*) DESC LIMIT 3
1	select date from receipts group by date order by count ( * ) desc limit 3	SELECT date FROM receipts GROUP BY date ORDER BY count(*) DESC LIMIT 3
0	select customers.firstname , customers.lastname , count ( * ) from customers join receipts on customers.id = receipts.customerid group by customers.id order by count ( * ) desc limit 1	SELECT CustomerId ,  count(*) FROM receipts GROUP BY CustomerId ORDER BY count(*) DESC LIMIT 1
1	select customers.id , count ( * ) from receipts join customers on receipts.customerid = customers.id group by customers.id order by count ( * ) desc limit 1	SELECT CustomerId ,  count(*) FROM receipts GROUP BY CustomerId ORDER BY count(*) DESC LIMIT 1
1	select date , count ( distinct customers.id ) from receipts join customers on receipts.customerid = customers.id group by date	SELECT date ,  COUNT (DISTINCT CustomerId) FROM receipts GROUP BY date
0	select receipts.date , count ( * ) from receipts join customers on receipts.customerid = customers.id group by receipts.date	SELECT date ,  COUNT (DISTINCT CustomerId) FROM receipts GROUP BY date
0	sql placeholder	SELECT DISTINCT T4.FirstName ,  T4.LastName FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber JOIN customers AS T4 ON T3.CustomerId  =  T4.id WHERE T1.flavor  =  "Apple" AND T1.food  =  "Tart"
0	sql placeholder	SELECT DISTINCT T4.FirstName ,  T4.LastName FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber JOIN customers AS T4 ON T3.CustomerId  =  T4.id WHERE T1.flavor  =  "Apple" AND T1.food  =  "Tart"
0	select id from goods where price < ( select min ( price ) from goods where food = 'Cookie' )	SELECT id FROM goods WHERE food  =  "Cookie" AND price  <  (SELECT min(price) FROM goods WHERE food  =  'Croissant')
0	select id from goods where price < ( select min ( price ) from goods where food = 'croissant' )	SELECT id FROM goods WHERE food  =  "Cookie" AND price  <  (SELECT min(price) FROM goods WHERE food  =  'Croissant')
0	sql placeholder	SELECT id FROM goods WHERE food  =  "Cake" AND price  >=  (SELECT avg(price) FROM goods WHERE food  =  "Tart")
0	select id from goods where price >= ( select avg ( price ) from goods )	SELECT id FROM goods WHERE food  =  "Cake" AND price  >=  (SELECT avg(price) FROM goods WHERE food  =  "Tart")
1	select id from goods where price > ( select avg ( price ) from goods )	SELECT id FROM goods WHERE price  >  (SELECT avg(price) FROM goods)
1	select id from goods where price > ( select avg ( price ) from goods )	SELECT id FROM goods WHERE price  >  (SELECT avg(price) FROM goods)
1	select id , flavor , food from goods order by price asc	SELECT id ,  flavor ,  food FROM goods ORDER BY price
1	select id , flavor , food from goods order by price asc	SELECT id ,  flavor ,  food FROM goods ORDER BY price
0	select id , flavor from goods where flavor = 'Cake' order by flavor asc	SELECT id ,  flavor FROM goods WHERE food  =  "Cake" ORDER BY flavor
0	select id , flavor from goods where flavor = 'Cake' order by flavor asc	SELECT id ,  flavor FROM goods WHERE food  =  "Cake" ORDER BY flavor
0	select items.item from items join goods on items.item = goods.id where goods.flavor like 'chocolate' except select items.item from items join goods on items.item = goods.id group by items.item having count ( items.receipt ) > 10	SELECT DISTINCT T1.item FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  "Chocolate" GROUP BY item HAVING count(*)  <=  10
1	select items.item from items join goods on items.item = goods.id where goods.flavor = 'Chocolate' group by items.item having count ( items.receipt ) <= 10	SELECT DISTINCT T1.item FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  "Chocolate" GROUP BY item HAVING count(*)  <=  10
1	select flavor from goods where food = 'Cake' except select flavor from goods where food = 'Tart'	SELECT DISTINCT flavor FROM goods WHERE food  =  "Cake" EXCEPT SELECT DISTINCT flavor FROM goods WHERE food  =  "Tart"
1	select flavor from goods where food = 'Cake' except select flavor from goods where food = 'Tart'	SELECT DISTINCT flavor FROM goods WHERE food  =  "Cake" EXCEPT SELECT DISTINCT flavor FROM goods WHERE food  =  "Tart"
0	select food from goods group by flavor order by count ( * ) desc limit 3	SELECT item FROM items GROUP BY item ORDER BY COUNT (*) DESC LIMIT 3
1	select items.item from items join goods on items.item = goods.id group by items.item order by count ( * ) desc limit 3	SELECT item FROM items GROUP BY item ORDER BY COUNT (*) DESC LIMIT 3
0	select customers.id from customers join receipts on customers.id = receipts.customerid group by customers.id having sum ( receipts.receiptnumber ) > 150	SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING sum(T1.price)  >  150
0	select customers.id from customers join receipts on customers.id = receipts.customerid group by customers.id having sum ( receipts.receiptnumber ) > 150	SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING sum(T1.price)  >  150
0	sql placeholder	SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING avg(T1.price)  >  5
0	sql placeholder	SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING avg(T1.price)  >  5
0	sql placeholder	SELECT T3.date FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.date HAVING sum(T1.price)  >  100
0	select receipts.date from goods join receipts on goods.id = receipts.receiptnumber group by receipts.date having sum ( goods.price ) > 100	SELECT T3.date FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.date HAVING sum(T1.price)  >  100
1	select count ( * ) from driver	SELECT count(*) FROM driver
1	select count ( * ) from driver	SELECT count(*) FROM driver
1	select count ( * ) , make from driver where points > 150 group by make	SELECT make ,  count(*) FROM driver WHERE points  >  150 GROUP BY make
1	select make , count ( * ) from driver where points > 150 group by make	SELECT make ,  count(*) FROM driver WHERE points  >  150 GROUP BY make
1	select avg ( age ) , make from driver group by make	SELECT avg(age) ,  Make FROM driver GROUP BY make
1	select avg ( age ) , make from driver group by make	SELECT avg(age) ,  Make FROM driver GROUP BY make
1	select avg ( laps ) from driver where age < 20	SELECT avg(Laps) FROM driver WHERE age  <  20
1	select avg ( laps ) from driver where age < 20	SELECT avg(Laps) FROM driver WHERE age  <  20
1	select manager , sponsor from team order by car_owner asc	SELECT Manager ,  Sponsor FROM team ORDER BY Car_Owner
1	select manager , sponsor from team order by car_owner asc	SELECT Manager ,  Sponsor FROM team ORDER BY Car_Owner
0	select make from team group by make having count ( * ) > 1	SELECT make FROM team GROUP BY team HAVING count(*)  >  1
0	select make from team group by make having count ( * ) > 1	SELECT make FROM team GROUP BY team HAVING count(*)  >  1
1	select make from team where car_owner = 'Buddy Arrington'	SELECT Make FROM team WHERE Car_Owner  =  "Buddy Arrington"
1	select make from team where car_owner = 'Buddy Arrington'	SELECT Make FROM team WHERE Car_Owner  =  "Buddy Arrington"
1	select max ( points ) , min ( points ) from driver	SELECT max(Points) ,  min(Points) FROM driver
1	select max ( points ) , min ( points ) from driver	SELECT max(Points) ,  min(Points) FROM driver
1	select count ( * ) from driver where points < 150	SELECT count(*) FROM driver WHERE Points  <  150
1	select count ( * ) from driver where points < 150	SELECT count(*) FROM driver WHERE Points  <  150
1	select driver from driver order by age asc	SELECT Driver FROM driver ORDER BY Age ASC
1	select driver from driver order by age asc	SELECT Driver FROM driver ORDER BY Age ASC
1	select driver from driver order by points desc	SELECT Driver FROM driver ORDER BY Points DESC
1	select driver from driver order by points desc	SELECT Driver FROM driver ORDER BY Points DESC
0	select driver , country from driver	SELECT T2.Driver ,  T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country
0	select driver , country from driver	SELECT T2.Driver ,  T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country
0	select max ( points ) from driver join country on driver.country = country.country where country.capital = 'Dublin'	SELECT max(T2.Points) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Capital  =  "Dublin"
1	select max ( driver.points ) from country join driver on country.country_id = driver.country where country.capital = 'Dublin'	SELECT max(T2.Points) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Capital  =  "Dublin"
1	select avg ( age ) from country join driver on country.country_id = driver.country where country.official_native_language = 'English'	SELECT avg(T2.age) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Official_native_language  =  "English"
1	select avg ( age ) from country join driver on country.country_id = driver.country where country.official_native_language = 'English'	SELECT avg(T2.age) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Official_native_language  =  "English"
0	select distinct country.country from country join driver on country.country_id = driver.country where driver.points > 150	SELECT T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T2.Points  >  150
0	select distinct country.country from driver join country on driver.driver_id = country.country_id where driver.points > 150	SELECT T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T2.Points  >  150
1	select country.capital from country join driver on country.country_id = driver.country where driver.points = ( select max ( points ) from driver ) order by driver.points desc limit 1	SELECT T1.Capital FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country ORDER BY T2.Points DESC LIMIT 1
1	select country.capital from country join driver on country.country_id = driver.country order by driver.points desc limit 1	SELECT T1.Capital FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country ORDER BY T2.Points DESC LIMIT 1
1	select make , count ( * ) from driver group by make	SELECT Make ,  COUNT(*) FROM driver GROUP BY Make
1	select make , count ( * ) from driver group by make	SELECT Make ,  COUNT(*) FROM driver GROUP BY Make
0	select make from driver group by make having count ( make ) = ( select max ( count ) from ( select count ( make ) as count from driver group by make ) )	SELECT Make FROM driver GROUP BY Make ORDER BY COUNT(*) DESC LIMIT 1
1	select make from driver group by make order by count ( * ) desc limit 1	SELECT Make FROM driver GROUP BY Make ORDER BY COUNT(*) DESC LIMIT 1
1	select make from driver group by make having count ( * ) >= 3	SELECT Make FROM driver GROUP BY Make HAVING COUNT(*)  >=  3
1	select make from driver group by make having count ( * ) >= 3	SELECT Make FROM driver GROUP BY Make HAVING COUNT(*)  >=  3
1	select team from team where team_id not in ( select team_id from team_driver )	SELECT Team FROM team WHERE Team_ID NOT IN (SELECT Team_ID FROM team_driver)
1	select team from team where team_id not in ( select team_id from team_driver )	SELECT Team FROM team WHERE Team_ID NOT IN (SELECT Team_ID FROM team_driver)
0	select country from driver where make = 'Dodge' intersect select country from driver where make = 'Chevrolet'	SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  "Dodge" INTERSECT SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  "Chevrolet"
0	select country.country from driver join country on driver.driver_id = country.country_id where driver.make = 'Dodge' intersect select country.country from driver join country on driver.driver_id = country.country_id where driver.make = 'Chevrolet'	SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  "Dodge" INTERSECT SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  "Chevrolet"
1	select sum ( points ) , avg ( points ) from driver	SELECT sum(Points) ,  avg(Points) FROM driver
1	select sum ( points ) , avg ( points ) from driver	SELECT sum(Points) ,  avg(Points) FROM driver
0	select country from country except select country from driver	SELECT country FROM country WHERE country_id NOT IN (SELECT country FROM driver)
0	select country from country except select country from driver	SELECT country FROM country WHERE country_id NOT IN (SELECT country FROM driver)
0	select team.manager , team.sponsor from team join ( select team_id from team_driver group by team_id having count ( driver_id ) = ( select max ( driver_count ) from ( select count ( driver_id ) as driver_count from team_driver group by team_id ) ) ) as maxdrivers on team.team_id = maxdrivers.team_id	SELECT t1.manager ,  t1.sponsor FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id ORDER BY count(*) DESC LIMIT 1
0	select team.manager , team.sponsor from team join ( select team_id from team_driver group by team_id having count ( driver_id ) = ( select max ( driver_count ) from ( select count ( driver_id ) as driver_count from team_driver group by team_id ) ) ) as maxdrivers on team.team_id = maxdrivers.team_id	SELECT t1.manager ,  t1.sponsor FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id ORDER BY count(*) DESC LIMIT 1
1	select team.manager , team.car_owner from team join team_driver on team.team_id = team_driver.team_id group by team_driver.team_id having count ( * ) >= 2	SELECT t1.manager ,  t1.car_owner FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id HAVING count(*)  >=  2
1	select team.manager , team.car_owner from team join team_driver on team.team_id = team_driver.team_id group by team.team_id having count ( * ) >= 2	SELECT t1.manager ,  t1.car_owner FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id HAVING count(*)  >=  2
1	select count ( * ) from institution	SELECT count(*) FROM institution
1	select count ( * ) from institution	SELECT count(*) FROM institution
1	select name from institution order by name asc	SELECT Name FROM institution ORDER BY Name ASC
1	select name from institution order by name asc	SELECT Name FROM institution ORDER BY Name ASC
1	select name from institution order by founded asc	SELECT Name FROM institution ORDER BY Founded ASC
1	select name from institution order by founded asc	SELECT Name FROM institution ORDER BY Founded ASC
1	select city , province from institution	SELECT City ,  Province FROM institution
1	select city , province from institution	SELECT City ,  Province FROM institution
1	select max ( enrollment ) , min ( enrollment ) from institution	SELECT max(Enrollment) ,  min(Enrollment) FROM institution
1	select max ( enrollment ) , min ( enrollment ) from institution	SELECT max(Enrollment) ,  min(Enrollment) FROM institution
1	select affiliation from institution where city != 'Vancouver'	SELECT Affiliation FROM institution WHERE City != "Vancouver"
1	select affiliation from institution where city != 'Vancouver'	SELECT Affiliation FROM institution WHERE City != "Vancouver"
1	select stadium from institution order by capacity desc	SELECT Stadium FROM institution ORDER BY Capacity DESC
1	select stadium from institution order by capacity desc	SELECT Stadium FROM institution ORDER BY Capacity DESC
0	select stadium from institution where enrollment = ( select max ( enrollment ) from institution )	SELECT Stadium FROM institution ORDER BY Enrollment DESC LIMIT 1
0	select stadium from institution where enrollment = ( select max ( enrollment ) from institution )	SELECT Stadium FROM institution ORDER BY Enrollment DESC LIMIT 1
0	sql placeholder	SELECT T2.Name ,  T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID
1	select institution.name , championship.nickname from institution join championship on institution.institution_id = championship.institution_id	SELECT T2.Name ,  T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID
0	select name from institution where enrollment = ( select min ( enrollment ) from institution )	SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Enrollment ASC LIMIT 1
0	select championship.nickname from championship join institution on championship.institution_id = institution.institution_id where institution.enrollment = ( select min ( enrollment ) from institution )	SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Enrollment ASC LIMIT 1
0	select institution.name from institution join championship on institution.institution_id = championship.institution_id order by number_of_championships desc	SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T1.Number_of_Championships DESC
0	select institution.name from institution join championship on institution.institution_id = championship.institution_id order by number_of_championships desc	SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T1.Number_of_Championships DESC
0	select institution.name from institution join championship on institution.institution_id = championship.institution_id group by championship.institution_id having count ( * ) >= 1	SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T1.Number_of_Championships  >=  1
0	select institution.name from institution join championship on institution.institution_id = championship.institution_id group by championship.institution_id having count ( * ) >= 1	SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T1.Number_of_Championships  >=  1
1	select total ( championship.number_of_championships ) from championship join institution on championship.institution_id = institution.institution_id where institution.affiliation = 'Public'	SELECT sum(T1.Number_of_Championships) FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T2.Affiliation  =  "Public"
1	select total ( championship.number_of_championships ) from institution join championship on institution.institution_id = championship.institution_id where institution.affiliation = 'Public'	SELECT sum(T1.Number_of_Championships) FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T2.Affiliation  =  "Public"
1	select affiliation , count ( * ) from institution group by affiliation	SELECT Affiliation ,  COUNT(*) FROM institution GROUP BY Affiliation
1	select affiliation , count ( * ) from institution group by affiliation	SELECT Affiliation ,  COUNT(*) FROM institution GROUP BY Affiliation
1	select affiliation from institution group by affiliation having count ( affiliation ) = ( select max ( cnt ) from ( select count ( affiliation ) as cnt from institution group by affiliation ) )	SELECT Affiliation FROM institution GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1
1	select affiliation from institution group by affiliation order by count ( * ) desc limit 1	SELECT Affiliation FROM institution GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1
0	select founded from institution group by founded having count ( * ) > 1	SELECT Founded ,  COUNT(*) FROM institution GROUP BY Founded HAVING COUNT(*)  >  1
1	select founded , count ( * ) from institution group by founded having count ( * ) > 1	SELECT Founded ,  COUNT(*) FROM institution GROUP BY Founded HAVING COUNT(*)  >  1
1	select c.nickname from championship c join institution i on c.institution_id = i.institution_id order by i.capacity desc	SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Capacity DESC
1	select c.nickname from championship c join institution i on c.institution_id = i.institution_id order by i.capacity desc	SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Capacity DESC
0	select sum ( enrollment ) from institution where city = 'Vancouver' or city = 'Calgary'	select sum(enrollment) from institution where city  =  "vancouver" or city  =  "calgary"
0	select enrollment from institution where city = 'Vancouver' or city = 'Calgary'	select sum(enrollment) from institution where city  =  "vancouver" or city  =  "calgary"
1	select province from institution where founded < 1920 intersect select province from institution where founded > 1950	SELECT Province FROM institution WHERE Founded  <  1920 INTERSECT SELECT Province FROM institution WHERE Founded  >  1950
1	select province from institution where founded < 1920 intersect select province from institution where founded > 1950	SELECT Province FROM institution WHERE Founded  <  1920 INTERSECT SELECT Province FROM institution WHERE Founded  >  1950
1	select count ( distinct province ) from institution	SELECT count(DISTINCT Province) FROM institution
1	select count ( distinct province ) from institution	SELECT count(DISTINCT Province) FROM institution
1	select * from warehouses	SELECT * FROM warehouses
1	select * from warehouses	SELECT * FROM warehouses
1	select distinct boxes.contents from warehouses join boxes on warehouses.code = boxes.warehouse where warehouses.location = 'New York'	SELECT DISTINCT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE LOCATION  =  'New York'
1	select distinct contents from boxes join warehouses on boxes.warehouse = warehouses.code where warehouses.location = 'New York'	SELECT DISTINCT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE LOCATION  =  'New York'
0	select contents from boxes where 1 > 150	SELECT CONTENTS FROM boxes WHERE Value  >  150
0	select contents from boxes where 1 > 150	SELECT CONTENTS FROM boxes WHERE Value  >  150
0	select warehouse , avg ( 1 ) from boxes group by warehouse	SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse
0	select avg ( 1 ) , warehouse from boxes group by warehouse	SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse
0	select avg ( 1 ) , sum ( 1 ) from boxes	SELECT avg(value) ,  sum(value) FROM boxes
0	select avg ( 1 ) , sum ( 1 ) from boxes	SELECT avg(value) ,  sum(value) FROM boxes
1	select avg ( capacity ) , sum ( capacity ) from warehouses	SELECT avg(capacity) ,  sum(capacity) FROM warehouses
1	select avg ( capacity ) , sum ( capacity ) from warehouses	SELECT avg(capacity) ,  sum(capacity) FROM warehouses
0	select contents , avg ( 1 ) , max ( 1 ) from boxes group by contents	SELECT avg(value) ,  max(value) ,  CONTENTS FROM boxes GROUP BY CONTENTS
0	select contents , avg ( 1 ) , max ( 1 ) from boxes group by contents	SELECT avg(value) ,  max(value) ,  CONTENTS FROM boxes GROUP BY CONTENTS
0	select contents from boxes group by contents order by sum ( 1 ) desc limit 1	SELECT CONTENTS FROM boxes ORDER BY value DESC LIMIT 1
0	select contents from boxes group by contents order by sum ( 1 ) desc limit 1	SELECT CONTENTS FROM boxes ORDER BY value DESC LIMIT 1
0	select avg ( 1 ) from boxes	SELECT avg(value) FROM boxes
0	select avg ( 1 ) from boxes	SELECT avg(value) FROM boxes
1	select distinct contents from boxes	SELECT DISTINCT CONTENTS FROM boxes
1	select distinct contents from boxes	SELECT DISTINCT CONTENTS FROM boxes
1	select count ( distinct contents ) from boxes	SELECT count(DISTINCT CONTENTS) FROM boxes
1	select count ( distinct contents ) from boxes	SELECT count(DISTINCT CONTENTS) FROM boxes
0	select distinct location from warehouses	SELECT count(DISTINCT LOCATION) FROM warehouses
0	select distinct location from warehouses	SELECT count(DISTINCT LOCATION) FROM warehouses
1	select code from boxes where warehouse in ( select code from warehouses where location in ( 'Chicago' , 'New York' ) )	SELECT T1.code FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'
1	select boxes.code from warehouses join boxes on warehouses.code = boxes.warehouse where warehouses.location = 'Chicago' or warehouses.location = 'New York'	SELECT T1.code FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'
0	select sum ( boxes.1 ) from warehouses join boxes on warehouses.code = boxes.warehouse where warehouses.location = 'Chicago' or warehouses.location = 'New York'	SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'
0	select sum ( boxes.1 ) from boxes join warehouses on boxes.warehouse = warehouses.code where warehouses.location = 'Chicago' or warehouses.location = 'New York'	SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'
1	select boxes.contents from boxes join warehouses on boxes.warehouse = warehouses.code where warehouses.location = 'Chicago' intersect select boxes.contents from boxes join warehouses on boxes.warehouse = warehouses.code where warehouses.location = 'New York'	SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' INTERSECT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'
1	select boxes.contents from boxes join warehouses on boxes.warehouse = warehouses.code where warehouses.location = 'Chicago' intersect select boxes.contents from boxes join warehouses on boxes.warehouse = warehouses.code where warehouses.location = 'New York'	SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' INTERSECT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'
0	select distinct contents from boxes where warehouse not in ( select code from warehouses where location = 'New York' )	SELECT CONTENTS FROM boxes EXCEPT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'
0	select contents from boxes where warehouse not in ( select code from warehouses where location = 'New York' )	SELECT CONTENTS FROM boxes EXCEPT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'
1	select distinct warehouses.location from warehouses join boxes on warehouses.code = boxes.warehouse where boxes.contents = 'Rocks' except select distinct warehouses.location from warehouses join boxes on warehouses.code = boxes.warehouse where boxes.contents = 'Scissors'	SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' EXCEPT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'
1	select distinct warehouses.location from warehouses join boxes on warehouses.code = boxes.warehouse where boxes.contents = 'Rocks' except select distinct warehouses.location from warehouses join boxes on warehouses.code = boxes.warehouse where boxes.contents = 'Scissors'	SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' EXCEPT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'
1	select distinct warehouses.code from boxes join warehouses on boxes.warehouse = warehouses.code where boxes.contents = 'Rocks' or boxes.contents = 'Scissors'	SELECT DISTINCT warehouse FROM boxes WHERE CONTENTS  =  'Rocks' OR CONTENTS  =  'Scissors'
1	select distinct warehouse from boxes where contents = 'Rocks' or contents = 'Scissors'	SELECT DISTINCT warehouse FROM boxes WHERE CONTENTS  =  'Rocks' OR CONTENTS  =  'Scissors'
0	select warehouses.location from warehouses join boxes on warehouses.code = boxes.warehouse where boxes.contents = 'Rocks and Scissors'	SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' INTERSECT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'
0	select warehouses.location from warehouses join boxes on warehouses.code = boxes.warehouse where boxes.contents = 'Rocks' and boxes.contents = 'Scissors'	SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' INTERSECT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'
0	select code , contents from boxes order by 1 asc	SELECT code ,  CONTENTS FROM boxes ORDER BY value
0	select code , contents from boxes order by 1 asc	SELECT code ,  CONTENTS FROM boxes ORDER BY value
0	select code , contents from boxes where 1 = ( select min ( 1 ) from boxes )	SELECT code ,  CONTENTS FROM boxes ORDER BY value LIMIT 1
0	select code , contents from boxes where 1 = ( select min ( 1 ) from boxes )	SELECT code ,  CONTENTS FROM boxes ORDER BY value LIMIT 1
0	select distinct contents from boxes where 1 > ( select avg ( 1 ) from boxes )	SELECT DISTINCT CONTENTS FROM boxes WHERE value  >  (SELECT avg(value) FROM boxes)
0	select distinct contents from boxes where 1 > ( select avg ( 1 ) from boxes )	SELECT DISTINCT CONTENTS FROM boxes WHERE value  >  (SELECT avg(value) FROM boxes)
1	select distinct contents from boxes order by contents asc	SELECT DISTINCT CONTENTS FROM boxes ORDER BY CONTENTS
1	select distinct contents from boxes order by contents asc	SELECT DISTINCT CONTENTS FROM boxes ORDER BY CONTENTS
0	select code from boxes where 1 > ( select max ( 1 ) from boxes where contents = 'Rocks' )	SELECT code FROM boxes WHERE value  >  (SELECT min(value) FROM boxes WHERE CONTENTS  =  'Rocks')
0	select code from boxes where 1 > ( select max ( 1 ) from boxes where contents = 'Rocks' )	SELECT code FROM boxes WHERE value  >  (SELECT min(value) FROM boxes WHERE CONTENTS  =  'Rocks')
0	select code , contents from boxes where 1 > ( select max ( 1 ) from boxes where contents = 'Scissors' )	SELECT code ,  CONTENTS FROM boxes WHERE value  >  (SELECT max(value) FROM boxes WHERE CONTENTS  =  'Scissors')
0	select b.code , b.contents from boxes b where b.1 > ( select max ( 1 ) from boxes where contents = 'Scissors' )	SELECT code ,  CONTENTS FROM boxes WHERE value  >  (SELECT max(value) FROM boxes WHERE CONTENTS  =  'Scissors')
0	select sum ( boxes.1 ) from boxes join warehouses on boxes.warehouse = warehouses.code where warehouses.capacity = ( select max ( capacity ) from warehouses )	SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code ORDER BY T2.capacity DESC LIMIT 1
0	select sum ( boxes.1 ) from boxes join warehouses on boxes.warehouse = warehouses.code where warehouses.capacity = ( select max ( capacity ) from warehouses )	SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code ORDER BY T2.capacity DESC LIMIT 1
0	select warehouse , avg ( 1 ) from boxes group by warehouse having avg ( 1 ) > 150	SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse HAVING avg(value)  >  150
0	select avg ( 1 ) , warehouse from boxes group by warehouse having avg ( 1 ) > 150	SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse HAVING avg(value)  >  150
0	select contents , sum ( 1 ) , count ( * ) from boxes group by contents	SELECT sum(value) ,  count(*) ,  CONTENTS FROM boxes GROUP BY CONTENTS
0	select contents , sum ( 1 ) , count ( * ) from boxes group by contents	SELECT sum(value) ,  count(*) ,  CONTENTS FROM boxes GROUP BY CONTENTS
1	select sum ( capacity ) , avg ( capacity ) , max ( capacity ) , location from warehouses group by location	SELECT sum(capacity) ,  avg(capacity) ,  max(capacity) ,  LOCATION FROM warehouses GROUP BY LOCATION
1	select sum ( capacity ) , avg ( capacity ) , max ( capacity ) , location from warehouses group by location	SELECT sum(capacity) ,  avg(capacity) ,  max(capacity) ,  LOCATION FROM warehouses GROUP BY LOCATION
1	select sum ( capacity ) from warehouses	SELECT sum(capacity) FROM warehouses
1	select sum ( capacity ) from warehouses	SELECT sum(capacity) FROM warehouses
0	select warehouses.location , max ( boxes.1 ) from warehouses join boxes on warehouses.code = boxes.warehouse group by warehouses.location	SELECT max(T1.value) ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.location
0	select warehouses.location , max ( boxes.1 ) from warehouses join boxes on warehouses.code = boxes.warehouse group by warehouses.location	SELECT max(T1.value) ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.location
1	select warehouses.code , count ( * ) from boxes join warehouses on boxes.warehouse = warehouses.code group by warehouses.code	SELECT Warehouse ,  count(*) FROM boxes GROUP BY warehouse
1	select warehouse , count ( * ) from boxes group by warehouse	select warehouse ,  count(*) from boxes group by warehouse
1	select count ( distinct warehouses.location ) from warehouses join boxes on warehouses.code = boxes.warehouse where boxes.contents = 'Rocks'	SELECT count(DISTINCT LOCATION) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks'
0	select count ( distinct warehouse ) from boxes where contents = 'Rocks'	SELECT count(DISTINCT LOCATION) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks'
1	select boxes.code , warehouses.location from warehouses join boxes on warehouses.code = boxes.warehouse	SELECT T1.code ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.Warehouse  =  T2.Code
1	select boxes.code , warehouses.location from warehouses join boxes on warehouses.code = boxes.warehouse	SELECT T1.code ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.Warehouse  =  T2.Code
0	select boxes.warehouse from warehouses join boxes on warehouses.code = boxes.warehouse where warehouses.location = 'Chicago'	SELECT T1.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago'
1	select boxes.code from warehouses join boxes on warehouses.code = boxes.warehouse where warehouses.location = 'Chicago'	SELECT T1.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago'
1	select warehouse , count ( * ) from boxes group by warehouse	SELECT count(*) ,  warehouse FROM boxes GROUP BY warehouse
1	select warehouse , count ( * ) from boxes group by warehouse	SELECT count(*) ,  warehouse FROM boxes GROUP BY warehouse
1	select count ( distinct contents ) , warehouse from boxes group by warehouse	SELECT count(DISTINCT CONTENTS) ,  warehouse FROM boxes GROUP BY warehouse
1	select count ( distinct contents ) , warehouse from boxes group by warehouse	SELECT count(DISTINCT CONTENTS) ,  warehouse FROM boxes GROUP BY warehouse
0	select code from warehouses where capacity > 0	SELECT T2.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.code HAVING count(*)  >  T2.capacity
0	sql placeholder	SELECT T2.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.code HAVING count(*)  >  T2.capacity
0	select sum ( 1 ) from boxes where warehouse not in ( select code from warehouses where location = 'Chicago' )	SELECT sum(T1.value) FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location != 'Chicago'
0	select sum ( boxes.1 ) from warehouses join boxes on warehouses.code = boxes.warehouse where warehouses.location != 'Chicago'	SELECT sum(T1.value) FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location != 'Chicago'
1	select university_name , city , state from university order by university_name asc	SELECT university_name ,  city ,  state FROM University ORDER BY university_name
1	select university_name , city , state from university order by university_name asc	SELECT university_name ,  city ,  state FROM University ORDER BY university_name
0	select count ( * ) from university where state = 'IL' or state = 'OH'	SELECT count(*) FROM University WHERE state  =  'Illinois' OR state  =  'Ohio'
0	select count ( * ) from university where state = 'IL' or state = 'OH'	SELECT count(*) FROM University WHERE state  =  'Illinois' OR state  =  'Ohio'
1	select max ( enrollment ) , avg ( enrollment ) , min ( enrollment ) from university	SELECT max(enrollment) ,  avg(enrollment) ,  min(enrollment) FROM University
1	select max ( enrollment ) , avg ( enrollment ) , min ( enrollment ) from university	SELECT max(enrollment) ,  avg(enrollment) ,  min(enrollment) FROM University
1	select team_name from university where enrollment > ( select avg ( enrollment ) from university )	SELECT team_name FROM University WHERE enrollment  >  (SELECT avg(enrollment) FROM University)
1	select team_name from university where enrollment > ( select avg ( enrollment ) from university )	select team_name from university where enrollment  >  (select avg(enrollment) from university)
0	select home_conference from university	SELECT DISTINCT home_conference FROM University
1	select distinct home_conference from university	SELECT DISTINCT home_conference FROM University
1	select home_conference , count ( * ) from university group by home_conference	SELECT home_conference ,  count(*) FROM University GROUP BY home_conference
1	select home_conference , count ( * ) from university group by home_conference	SELECT home_conference ,  count(*) FROM University GROUP BY home_conference
0	select state from university group by state having count ( * ) = ( select max ( cnt ) from ( select count ( * ) as cnt from university group by state ) )	SELECT state FROM University GROUP BY state ORDER BY count(*) DESC LIMIT 1
0	select state from university group by state having count ( * ) = ( select max ( cnt ) from ( select count ( * ) as cnt from university group by state ) )	SELECT state FROM University GROUP BY state ORDER BY count(*) DESC LIMIT 1
1	select home_conference from university group by home_conference having avg ( enrollment ) > 2000	SELECT home_conference FROM University GROUP BY home_conference HAVING avg(enrollment)  >  2000
1	select home_conference from university group by home_conference having avg ( enrollment ) > 2000	SELECT home_conference FROM University GROUP BY home_conference HAVING avg(enrollment)  >  2000
1	select home_conference from university group by home_conference order by sum ( enrollment ) asc limit 1	SELECT home_conference FROM University GROUP BY home_conference ORDER BY sum(enrollment) LIMIT 1
0	select home_conference from university where enrollment = ( select min ( enrollment ) from university )	SELECT home_conference FROM University GROUP BY home_conference ORDER BY sum(enrollment) LIMIT 1
1	select major_name , major_code from major order by major_code asc	SELECT major_name ,  major_code FROM Major ORDER BY major_code
1	select major_name , major_code from major order by major_code asc	SELECT major_name ,  major_code FROM Major ORDER BY major_code
1	select major.major_name , major_ranking.rank from university join major_ranking on university.university_id = major_ranking.university_id join major on major_ranking.major_id = major.major_id where university.university_name = 'Augustana College'	SELECT T1.rank ,  T3.major_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T2.university_name  =  'Augustana College'
1	select major_ranking.rank , major.major_name from major_ranking join major on major_ranking.major_id = major.major_id join university on major_ranking.university_id = university.university_id where university.university_name = 'Augustana College'	SELECT T1.rank ,  T3.major_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T2.university_name  =  'Augustana College'
0	sql placeholder	SELECT T2.university_name ,  T2.city ,  T2.state FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  =  1 AND T3.major_name  =  'Accounting'
0	select university_name , city , state from university where university_id in ( select university_id from major_ranking where major_id = ( select max ( rank ) from major_ranking where major_id = 'Accounting' ) )	SELECT T2.university_name ,  T2.city ,  T2.state FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  =  1 AND T3.major_name  =  'Accounting'
0	select university.university_name from university join major_ranking on university.university_id = major_ranking.university_id where major_ranking.rank = 1 group by university.university_id order by count ( * ) desc limit 1	SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1 GROUP BY T2.university_name ORDER BY count(*) DESC LIMIT 1
0	select university_name from university where university_id in ( select university_id from major_ranking where rank = 1 group by university_id order by count ( major_id ) desc limit 1 )	SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1 GROUP BY T2.university_name ORDER BY count(*) DESC LIMIT 1
0	select university_name from university where university_id not in ( select university_id from major_ranking where rank = 1 )	SELECT university_name FROM University EXCEPT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1
0	select university_name from university where university_id not in ( select university_id from major_ranking where rank = 1 )	SELECT university_name FROM University EXCEPT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1
1	select university.university_name from university join major_ranking on university.university_id = major_ranking.university_id join major on major_ranking.major_id = major.major_id where major.major_name = 'Accounting' intersect select university.university_name from university join major_ranking on university.university_id = major_ranking.university_id join major on major_ranking.major_id = major.major_id where major.major_name = 'Urban Education'	SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Accounting' INTERSECT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Urban Education'
1	select university.university_name from university join major_ranking on university.university_id = major_ranking.university_id join major on major_ranking.major_id = major.major_id where major.major_name = 'Accounting' intersect select university.university_name from university join major_ranking on university.university_id = major_ranking.university_id join major on major_ranking.major_id = major.major_id where major.major_name = 'Urban Education'	SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Accounting' INTERSECT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Urban Education'
1	select university.university_name , overall_ranking.rank from university join overall_ranking on university.university_id = overall_ranking.university_id where university.state = 'Wisconsin'	SELECT T1.university_name ,  T2.rank FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T1.state  =  'Wisconsin'
1	select university.university_name , overall_ranking.rank from university join overall_ranking on university.university_id = overall_ranking.university_id where state = 'Wisconsin'	SELECT T1.university_name ,  T2.rank FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T1.state  =  'Wisconsin'
0	select university_name from university where university_id in ( select university_id from overall_ranking order by research_point desc limit 1 )	SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.research_point DESC LIMIT 1
0	select university_name from university where university_id in ( select university_id from overall_ranking group by university_id having sum ( research_point ) = ( select max ( total ) from ( select sum ( research_point ) as total from overall_ranking group by university_id ) ) )	SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.research_point DESC LIMIT 1
1	select university.university_name from university join overall_ranking on university.university_id = overall_ranking.university_id order by overall_ranking.reputation_point asc	SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.reputation_point
0	select university_name from university where university_id in ( select university_id from overall_ranking order by reputation_point asc )	SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.reputation_point
0	select university_name from university where university_id in ( select university_id from major_ranking where major_id in ( select major_id from major where rank >= 3 ) )	SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  <=  3 AND T3.major_name  =  "Accounting"
0	select university_name from university where university_id in ( select university_id from major_ranking where major_id in ( select major_id from major where rank >= 3 ) )	SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  <=  3 AND T3.major_name  =  "Accounting"
0	select sum ( enrollment ) from university where university_id in ( select university_id from overall_ranking where rank <= 5 )	SELECT sum(enrollment) FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T2.rank  >=  5
0	select total ( enrollment ) from university where university_id in ( select university_id from overall_ranking where rank <= 5 )	SELECT sum(enrollment) FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T2.rank  >=  5
0	select university.university_name , overall_ranking.citation_point from university join overall_ranking on university.university_id = overall_ranking.university_id where overall_ranking.reputation_point >= 3	SELECT T1.University_Name ,  T2.Citation_point FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.Reputation_point DESC LIMIT 3
0	select university.university_name , overall_ranking.citation_point from overall_ranking join university on overall_ranking.university_id = university.university_id order by overall_ranking.reputation_point desc limit 3	SELECT T1.University_Name ,  T2.Citation_point FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.Reputation_point DESC LIMIT 3
1	select state from university where enrollment < 3000 group by state having count ( * ) > 2	SELECT state FROM university WHERE enrollment  <  3000 GROUP BY state HAVING count(*)  >  2
1	select state from university where enrollment < 3000 group by state having count ( * ) > 2	SELECT state FROM university WHERE enrollment  <  3000 GROUP BY state HAVING count(*)  >  2
1	select title from movies where rating = 'null'	SELECT title FROM movies WHERE rating  =  'null'
1	select title from movies where rating not in ( select rating from movies )	SELECT title FROM movies WHERE rating  =  'null'
1	select title from movies where rating = 'G'	SELECT title FROM movies WHERE rating  =  'G'
1	select title from movies where rating = 'G'	SELECT title FROM movies WHERE rating  =  'G'
1	select movies.title from movies join movietheaters on movies.code = movietheaters.movie where movietheaters.name = 'Odeon'	SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'
1	select movies.title from movies join movietheaters on movies.code = movietheaters.movie where movietheaters.name = 'Odeon'	SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'
1	select movies.title , movietheaters.name from movies join movietheaters on movies.code = movietheaters.movie	SELECT T1.title ,  T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie
1	select movies.title , movietheaters.name from movies join movietheaters on movies.code = movietheaters.movie	SELECT T1.title ,  T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie
1	select count ( * ) from movies where rating = 'G'	SELECT count(*) FROM movies WHERE rating  =  'G'
1	select count ( * ) from movies where rating = 'G'	SELECT count(*) FROM movies WHERE rating  =  'G'
1	select count ( * ) from movietheaters	SELECT count(*) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie
1	select count ( * ) from movietheaters	SELECT count(*) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie
1	select count ( distinct movie ) from movietheaters	SELECT count(DISTINCT T1.code) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie
1	select count ( distinct movie ) from movietheaters	SELECT count(DISTINCT T1.code) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie
0	select count ( distinct code ) from movietheaters	SELECT count(DISTINCT name) FROM movietheaters
0	select count ( distinct code ) from movietheaters	SELECT count(DISTINCT name) FROM movietheaters
1	select rating from movies where title like '%Citizen%'	SELECT rating FROM movies WHERE title LIKE '%Citizen%'
1	select rating from movies where title like '%Citizen%'	SELECT rating FROM movies WHERE title LIKE '%Citizen%'
0	select distinct movietheaters.name from movies join movietheaters on movies.code = movietheaters.movie where movies.rating = 'G' or movies.rating = 'PG'	SELECT title FROM movies WHERE rating  =  'G' OR rating  =  'PG'
0	select movietheaters.name from movies join movietheaters on movies.code = movietheaters.movie where movies.rating = 'G' or movies.rating = 'PG'	SELECT title FROM movies WHERE rating  =  'G' OR rating  =  'PG'
0	select distinct movies.title from movies join movietheaters on movies.code = movietheaters.movie where movietheaters.name = 'Odeon' or movietheaters.name = 'Imperial'	SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' OR T2.name  =  'Imperial'
1	select movies.title from movies join movietheaters on movies.code = movietheaters.movie where movietheaters.name = 'Odeon' or movietheaters.name = 'Imperial'	SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' OR T2.name  =  'Imperial'
1	select movies.title from movies join movietheaters on movies.code = movietheaters.movie where movietheaters.name = 'Odeon' intersect select movies.title from movies join movietheaters on movies.code = movietheaters.movie where movietheaters.name = 'Imperial'	SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' INTERSECT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Imperial'
0	select movie from movietheaters where name = 'Odeon' intersect select movie from movietheaters where name = 'Imperial'	SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' INTERSECT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Imperial'
0	select title from movies where code not in ( select movie from movietheaters where name = 'Odeon' )	SELECT title FROM movies EXCEPT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'
0	select title from movies where code not in ( select movie from movietheaters where name = 'Odeon' )	SELECT title FROM movies EXCEPT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'
1	select title from movies order by title asc	SELECT title FROM movies ORDER BY title
1	select title from movies order by title asc	SELECT title FROM movies ORDER BY title
1	select title from movies order by rating asc	SELECT title FROM movies ORDER BY rating
1	select title from movies order by rating asc	SELECT title FROM movies ORDER BY rating
1	select movietheaters.name from movies join movietheaters on movies.code = movietheaters.movie group by movietheaters.name order by count ( * ) desc limit 1	SELECT name FROM movietheaters GROUP BY name ORDER BY count(*) DESC LIMIT 1
1	select name from movietheaters group by name order by count ( * ) desc limit 1	SELECT name FROM movietheaters GROUP BY name ORDER BY count(*) DESC LIMIT 1
0	select movies.title from movies join movietheaters on movies.code = movietheaters.movie group by movietheaters.movie order by count ( * ) desc limit 1	SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title ORDER BY count(*) DESC LIMIT 1
0	select movies.title from movies join movietheaters on movies.code = movietheaters.movie group by movietheaters.movie order by count ( * ) desc limit 1	SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title ORDER BY count(*) DESC LIMIT 1
1	select rating , count ( * ) from movies group by rating	SELECT count(*) ,  rating FROM movies GROUP BY rating
1	select rating , count ( * ) from movies group by rating	SELECT count(*) ,  rating FROM movies GROUP BY rating
0	select count ( * ) from movies where rating != 'null'	SELECT count(*) ,  rating FROM movies WHERE rating != 'null' GROUP BY rating
0	select count ( * ) from movies where rating != 'null'	SELECT count(*) ,  rating FROM movies WHERE rating != 'null' GROUP BY rating
0	select name from movietheaters where movie = ( select code from movies )	SELECT name FROM movietheaters GROUP BY name HAVING count(*)  >=  1
1	select name from movietheaters group by name having count ( * ) >= 1	SELECT name FROM movietheaters GROUP BY name HAVING count(*)  >=  1
1	select name from movietheaters where code not in ( select code from movietheaters )	SELECT DISTINCT name FROM MovieTheaters WHERE Movie  =  'null'
1	select name from movietheaters where code not in ( select code from movietheaters )	SELECT DISTINCT name FROM MovieTheaters WHERE Movie  =  'null'
1	select movietheaters.name from movies join movietheaters on movies.code = movietheaters.movie where movies.rating = 'G'	SELECT T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T1.rating  =  'G'
1	select movietheaters.name from movies join movietheaters on movies.code = movietheaters.movie where movies.rating = 'G'	SELECT T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T1.rating  =  'G'
1	select title from movies	SELECT title FROM movies
1	select title from movies	SELECT title FROM movies
1	select distinct rating from movies	SELECT DISTINCT rating FROM movies
1	select distinct rating from movies	SELECT DISTINCT rating FROM movies
1	select * from movies where rating = 'null'	SELECT * FROM movies WHERE rating  =  'null'
1	select * from movies where rating = 'null'	SELECT * FROM movies WHERE rating  =  'null'
1	select title from movies where code not in ( select movie from movietheaters )	SELECT Title FROM Movies WHERE Code NOT IN (SELECT Movie FROM MovieTheaters WHERE Movie != 'null')
1	select title from movies where code not in ( select movie from movietheaters )	SELECT Title FROM Movies WHERE Code NOT IN (SELECT Movie FROM MovieTheaters WHERE Movie != 'null')
0	select recipient from package where weight = ( select max ( weight ) from package )	SELECT T2.Name FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber ORDER BY T1.Weight DESC LIMIT 1
1	select client.name from client join package on client.accountnumber = package.recipient order by package.weight desc limit 1	SELECT T2.Name FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber ORDER BY T1.Weight DESC LIMIT 1
1	select sum ( package.weight ) from client join package on client.accountnumber = package.sender where client.name = 'Leo Wong'	SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  "Leo Wong";
0	select sum ( weight ) from employee join package on employee.employeeid = package.sender where employee.name = 'Leo Wong'	SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  "Leo Wong";
1	select position from employee where name = 'Amy Wong'	SELECT POSITION FROM Employee WHERE Name  =  "Amy Wong";
1	select position from employee where name = 'Amy Wong'	SELECT POSITION FROM Employee WHERE Name  =  "Amy Wong";
1	select salary , position from employee where name = 'Turanga Leela'	SELECT Salary ,  POSITION FROM Employee WHERE Name  =  "Turanga Leela";
1	select salary , position from employee where name = 'Turanga Leela'	SELECT Salary ,  POSITION FROM Employee WHERE Name  =  "Turanga Leela";
0	select avg ( salary ) from employee where position = 'intern'	SELECT avg(Salary) FROM Employee WHERE POSITION  =  "Intern";
0	select avg ( salary ) from employee where position = 'intern'	SELECT avg(Salary) FROM Employee WHERE POSITION  =  "Intern";
0	select level from has_clearance where level = 'Physician'	SELECT T1.Level FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID WHERE T2.position  =  "Physician";
0	select level from has_clearance join employee on has_clearance.employee = employee.employeeid where employee.name = 'Physician'	SELECT T1.Level FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID WHERE T2.position  =  "Physician";
0	select packagenumber from package where sender = 'Leo Wong'	SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  "Leo Wong";
0	select count ( * ) from employee join package on employee.employeeid = package.sender where employee.name = 'Leo Wong'	SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  "Leo Wong";
0	select packagenumber from package join client on package.recipient = client.accountnumber where client.name = 'Leo Wong'	select t1.packagenumber from package as t1 join client as t2 on t1.recipient  =  t2.accountnumber where t2.name = "leo wong";
1	select packagenumber from package join client on package.recipient = client.accountnumber where client.name = 'Leo Wong'	SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber WHERE T2.Name = "Leo Wong";
0	select package.contents from client join package on client.accountnumber = package.sender where client.name = 'Leo Wong'	SELECT DISTINCT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber OR T1.Recipient  =  T2.AccountNumber WHERE T2.Name = "Leo Wong"
0	select distinct packagenumber from employee join package on employee.employeeid = package.sender where employee.name = 'Leo Wong' or package.recipient = employee.employeeid	SELECT DISTINCT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber OR T1.Recipient  =  T2.AccountNumber WHERE T2.Name = "Leo Wong"
0	select count ( * ) from package where sender = 'Ogden Wernstrom' and recipient = 'Leo Wong'	SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name = "Ogden Wernstrom" INTERSECT SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber WHERE T2.Name = "Leo Wong"
0	select count ( * ) from package join client on package.sender = client.accountnumber where client.name = 'Ogden Wernstrom' and package.recipient = 'Leo Wong'	SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name = "Ogden Wernstrom" INTERSECT SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber WHERE T2.Name = "Leo Wong"
0	select contents from package where sender = 'John Zoidfarb'	SELECT T1.Contents FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  "John Zoidfarb";
0	select contents from package where sender = 'John Zoidfarb'	SELECT T1.Contents FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  "John Zoidfarb";
0	select p.packagenumber , p.weight from package p join client c on p.recipient = c.accountnumber where c.name like '%John%'	SELECT T1.PackageNumber ,  max(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name LIKE "John";
0	select packagenumber , weight from package join client on package.sender = client.accountnumber where client.name = 'John' or client.name = 'Johnny'	SELECT T1.PackageNumber ,  max(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name LIKE "John";
1	select packagenumber , weight from package order by weight asc limit 3	SELECT PackageNumber ,  Weight FROM PACKAGE ORDER BY Weight ASC LIMIT 3;
1	select packagenumber , weight from package order by weight asc limit 3	SELECT PackageNumber ,  Weight FROM PACKAGE ORDER BY Weight ASC LIMIT 3;
1	select client.name , count ( * ) from package join client on package.sender = client.accountnumber group by client.accountnumber order by count ( * ) desc limit 1	SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender ORDER BY count(*) DESC LIMIT 1;
1	select client.name , count ( * ) from client join package on client.accountnumber = package.sender group by client.accountnumber order by count ( * ) desc limit 1	SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender ORDER BY count(*) DESC LIMIT 1;
1	select client.name , count ( package.shipment ) from package join client on package.recipient = client.accountnumber group by client.accountnumber order by count ( package.shipment ) asc limit 1	select t2.name ,  count(*) from package as t1 join client as t2 on t1.recipient  =  t2.accountnumber group by t1.recipient order by count(*) limit 1;
0	select recipient , count ( * ) from package group by recipient order by count ( * ) asc limit 1	select t2.name ,  count(*) from package as t1 join client as t2 on t1.recipient  =  t2.accountnumber group by t1.recipient order by count(*) limit 1;
0	select client.name from client join package on client.accountnumber = package.sender group by package.sender having count ( * ) > 1	SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender HAVING count(*)  >  1;
0	select client.name from client join package on client.accountnumber = package.sender group by client.accountnumber having count ( * ) > 1	SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender HAVING count(*)  >  1;
1	select coordinates from planet where name = 'Mars'	SELECT Coordinates FROM Planet WHERE Name  =  "Mars";
1	select coordinates from planet where name = 'Mars'	SELECT Coordinates FROM Planet WHERE Name  =  "Mars";
1	select name , coordinates from planet order by name asc	SELECT Name ,  Coordinates FROM Planet ORDER BY Name
1	select name , coordinates from planet order by name asc	SELECT Name ,  Coordinates FROM Planet ORDER BY Name
1	select shipmentid from shipment join employee on shipment.manager = employee.employeeid where employee.name = 'Phillip J. Fry'	SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID WHERE T2.Name = "Phillip J. Fry";
0	select shipmentid from employee join shipment on employee.employeeid = shipment.manager where employee.name = 'Phillip J Fry'	SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID WHERE T2.Name = "Phillip J. Fry";
1	select date from shipment	SELECT Date FROM Shipment;
1	select date from shipment	SELECT Date FROM Shipment;
1	select shipmentid from shipment join planet on shipment.planet = planet.planetid where planet.name = 'Mars'	SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID WHERE T2.Name  =  "Mars";
1	select shipmentid from shipment join planet on shipment.planet = planet.planetid where planet.name = 'Mars'	SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID WHERE T2.Name  =  "Mars";
0	select shipmentid from shipment where planet = 'Mars' and manager = 'Turanga Leela'	SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = "Mars" AND T3.Name = "Turanga Leela";
1	select s.shipmentid from shipment s join employee e on s.manager = e.employeeid join planet p on s.planet = p.planetid where p.name = 'Mars' and e.name = 'Turanga Leela'	SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = "Mars" AND T3.Name = "Turanga Leela";
0	select shipmentid from shipment where planet = 'Mars' union select shipmentid from shipment where manager = 'Turanga Leela'	SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = "Mars" OR T3.Name = "Turanga Leela";
0	select shipmentid from employee join shipment on employee.employeeid = shipment.manager where planet = 'Mars' and employee.name = 'Turanga Leela'	SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = "Mars" OR T3.Name = "Turanga Leela";
0	select planet.name , sum ( shipment.shipmentid ) from shipment join planet on shipment.planet = planet.planetid group by planet.planetid	SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet;
1	select planet.name , count ( * ) from shipment join planet on shipment.planet = planet.planetid group by planet.planetid	SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet;
1	select planet.name from planet join shipment on planet.planetid = shipment.planet group by planet.planetid order by count ( * ) desc limit 1	SELECT T2.Name FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet ORDER BY count(*) DESC LIMIT 1;
1	select planet.name from shipment join planet on shipment.planet = planet.planetid group by shipment.planet order by count ( * ) desc limit 1	SELECT T2.Name FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet ORDER BY count(*) DESC LIMIT 1;
1	select employee.name , count ( * ) from employee join shipment on employee.employeeid = shipment.manager group by shipment.manager	SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID GROUP BY T1.Manager;
1	select employee.name , count ( * ) from shipment join employee on shipment.manager = employee.employeeid group by shipment.manager	SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID GROUP BY T1.Manager;
1	select sum ( package.weight ) from package join shipment on package.shipment = shipment.shipmentid join planet on shipment.planet = planet.planetid where planet.name = 'Mars'	SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Name = "Mars";
1	select sum ( package.weight ) from package join shipment on package.shipment = shipment.shipmentid join planet on shipment.planet = planet.planetid where planet.name = 'Mars'	SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Name = "Mars";
0	select planet.name from package join shipment on package.shipment = shipment.shipmentid join planet on shipment.planet = planet.planetid group by planet.planetid	select t3.name ,  sum(t1.weight) from package as t1 join shipment as t2 on t1.shipment = t2.shipmentid join planet as t3 on t2.planet = t3.planetid group by t2.planet;
0	select sum ( package.weight ) , planet.name from package join shipment on package.shipment = shipment.shipmentid join planet on shipment.planet = planet.planetid group by planet.name	select t3.name ,  sum(t1.weight) from package as t1 join shipment as t2 on t1.shipment = t2.shipmentid join planet as t3 on t2.planet = t3.planetid group by t2.planet;
0	select planet.name from package join planet on package.shipment = planet.planetid group by planet.planetid having sum ( package.weight ) > 30	SELECT T3.Name FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID GROUP BY T2.Planet HAVING sum(T1.Weight)  >  30;
0	sql placeholder	SELECT T3.Name FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID GROUP BY T2.Planet HAVING sum(T1.Weight)  >  30;
0	select packagenumber from package join shipment on package.shipment = shipment.shipmentid join planet on shipment.planet = planet.planetid where planet.name = 'Omicron Persei 8' and package.sender = 'Zapp Brannigan'	SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name = "Zapp Brannigan" AND T4.Name = "Omicron Persei 8";
0	select count ( * ) from package join shipment on package.shipment = shipment.shipmentid join planet on shipment.planet = planet.planetid where package.sender = 'Zapp Brannigan' and shipment.planet = 'Omicron Persei 8'	SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name = "Zapp Brannigan" AND T4.Name = "Omicron Persei 8";
0	select count ( * ) from package join shipment on package.shipment = shipment.shipmentid join planet on shipment.planet = planet.planetid where planet.name = 'Omicron Persei 8' or package.sender = 'Zapp Brannigan'	SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name  =  "Zapp Brannigan" OR T4.Name  =  "Omicron Persei 8";
0	select count ( * ) from package join shipment on package.shipment = shipment.shipmentid join planet on shipment.planet = planet.planetid where planet.name = 'Omicron Persei 8' or package.sender = 'Zapp Brannigan'	SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name  =  "Zapp Brannigan" OR T4.Name  =  "Omicron Persei 8";
1	select packagenumber , weight from package where weight between 10 and 30	SELECT PackageNumber ,  Weight FROM PACKAGE WHERE Weight BETWEEN 10 AND 30;
1	select packagenumber , weight from package where weight between 10 and 30	SELECT PackageNumber ,  Weight FROM PACKAGE WHERE Weight BETWEEN 10 AND 30;
0	select name from employee where employeeid not in ( select employee from has_clearance where planet = 'Mars' )	SELECT Name FROM Employee EXCEPT SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name = "Mars";
0	select name from employee where employeeid not in ( select employee from has_clearance where planet = 'Mars' )	SELECT Name FROM Employee EXCEPT SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name = "Mars";
0	select name from employee where employeeid in ( select employee from has_clearance where planet = 'Omega III' )	SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name  =  "Omega III";
1	select employee.name from employee join has_clearance on employee.employeeid = has_clearance.employee join planet on has_clearance.planet = planet.planetid where planet.name = 'Omega III'	SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name  =  "Omega III";
1	select planet.name from planet join has_clearance on planet.planetid = has_clearance.planet group by has_clearance.planet having count ( * ) = 1	SELECT T3.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID GROUP BY T1.Planet HAVING count(*)  =  1;
1	select name from planet where planetid in ( select planet from has_clearance group by planet having count ( distinct employee ) = 1 )	SELECT T3.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID GROUP BY T1.Planet HAVING count(*)  =  1;
1	select name from employee where salary between 5000 and 10000	SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000
1	select name from employee where salary between 5000 and 10000	SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000
1	select name from employee where salary > ( select avg ( salary ) from employee ) or salary > 5000	SELECT Name FROM Employee WHERE Salary  >  5000 OR Salary  >  (SELECT avg(salary) FROM employee)
1	select name from employee where salary > ( select avg ( salary ) from employee ) or salary > 5000	SELECT Name FROM Employee WHERE Salary  >  5000 OR Salary  >  (SELECT avg(salary) FROM employee)
1	select count ( * ) from employee where employeeid not in ( select employee from has_clearance where planet = 'Mars' )	select count(*) from employee where employeeid not in ( select t2.employeeid from has_clearance as t1 join employee as t2 on t1.employee = t2.employeeid join planet as t3 on t1.planet = t3.planetid where t3.name = "mars" );
1	select count ( * ) from employee where employeeid not in ( select employee from has_clearance where planet = 'Mars' )	select count(*) from employee where employeeid not in ( select t2.employeeid from has_clearance as t1 join employee as t2 on t1.employee = t2.employeeid join planet as t3 on t1.planet = t3.planetid where t3.name = "mars" );
1	select count ( * ) from game	SELECT count(*) FROM game
1	select count ( * ) from game	SELECT count(*) FROM game
1	select title , developers from game order by units_sold_millions desc	SELECT Title ,  Developers FROM game ORDER BY Units_sold_Millions DESC
1	select title , developers from game order by units_sold_millions desc	SELECT Title ,  Developers FROM game ORDER BY Units_sold_Millions DESC
1	select avg ( units_sold_millions ) from game where developers != 'Nintendo'	SELECT avg(Units_sold_Millions) FROM game WHERE developers != 'Nintendo'
1	select avg ( units_sold_millions ) from game where developers != 'Nintendo'	SELECT avg(Units_sold_Millions) FROM game WHERE developers != 'Nintendo'
1	select platform_name , market_district from platform	SELECT Platform_name ,  Market_district FROM platform
1	select platform_name , market_district from platform	SELECT Platform_name ,  Market_district FROM platform
1	select platform_name , platform_id from platform where download_rank = 1	SELECT Platform_name ,  Platform_ID FROM platform WHERE Download_rank  =  1
1	select platform_name , platform_id from platform where download_rank = 1	SELECT Platform_name ,  Platform_ID FROM platform WHERE Download_rank  =  1
1	select max ( rank_of_the_year ) , min ( rank_of_the_year ) from player	SELECT max(Rank_of_the_year) ,  min(Rank_of_the_year) FROM player
1	select max ( rank_of_the_year ) , min ( rank_of_the_year ) from player	SELECT max(Rank_of_the_year) ,  min(Rank_of_the_year) FROM player
1	select count ( * ) from player where rank_of_the_year < 3	SELECT count(*) FROM player WHERE Rank_of_the_year  <=  3
1	select count ( * ) from player where rank_of_the_year <= 3	SELECT count(*) FROM player WHERE Rank_of_the_year  <=  3
1	select player_name from player order by player_name asc	SELECT Player_name FROM player ORDER BY Player_name ASC
1	select player_name from player order by player_name asc	SELECT Player_name FROM player ORDER BY Player_name ASC
1	select player_name , college from player order by rank_of_the_year desc	SELECT Player_name ,  College FROM player ORDER BY Rank_of_the_year DESC
1	select player_name , college from player order by rank_of_the_year desc	SELECT Player_name ,  College FROM player ORDER BY Rank_of_the_year DESC
1	select player.player_name , player.rank_of_the_year from game_player join player on game_player.player_id = player.player_id join game on game_player.game_id = game.game_id where game.title = 'Super Mario World'	SELECT T3.Player_name ,  T3.rank_of_the_year FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T1.Title  =  "Super Mario World"
1	select player.player_name , player.rank_of_the_year from game_player join player on game_player.player_id = player.player_id join game on game_player.game_id = game.game_id where game.title = 'Super Mario World'	SELECT T3.Player_name ,  T3.rank_of_the_year FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T1.Title  =  "Super Mario World"
1	select distinct game.developers from game_player join game on game_player.game_id = game.game_id join player on game_player.player_id = player.player_id where player.college = 'Auburn'	SELECT DISTINCT T1.Developers FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  "Auburn"
1	select distinct game.developers from game_player join player on game_player.player_id = player.player_id join game on game.game_id = game_player.game_id where player.college = 'Auburn'	SELECT DISTINCT T1.Developers FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  "Auburn"
1	select avg ( units_sold_millions ) from game join game_player on game.game_id = game_player.game_id join player on game_player.player_id = player.player_id where player.position = 'Guard'	SELECT avg(Units_sold_Millions) FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  "Guard"
1	select avg ( units_sold_millions ) from game join game_player on game.game_id = game_player.game_id join player on game_player.player_id = player.player_id where player.position = 'Guard'	SELECT avg(Units_sold_Millions) FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  "Guard"
1	select game.title , platform.platform_name from game join platform on game.platform_id = platform.platform_id	SELECT T1.Title ,  T2.Platform_name FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID
1	select game.title , platform.platform_name from game join platform on game.platform_id = platform.platform_id	SELECT T1.Title ,  T2.Platform_name FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID
1	select game.title from game join platform on game.platform_id = platform.platform_id where platform.market_district = 'Asia' or platform.market_district = 'USA'	SELECT T1.Title FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID WHERE T2.Market_district  =  "Asia" OR T2.Market_district  =  "USA"
1	select title from game where platform_id in ( select platform_id from platform where market_district in ( 'Asia' , 'USA' ) )	SELECT T1.Title FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID WHERE T2.Market_district  =  "Asia" OR T2.Market_district  =  "USA"
1	select franchise , count ( * ) from game group by franchise	SELECT Franchise ,  COUNT(*) FROM game GROUP BY Franchise
1	select franchise , count ( * ) from game group by franchise	SELECT Franchise ,  COUNT(*) FROM game GROUP BY Franchise
0	select franchise from game group by franchise having count ( * ) = ( select max ( cnt ) from ( select count ( * ) as cnt from game group by franchise ) )	SELECT Franchise FROM game GROUP BY Franchise ORDER BY COUNT(*) DESC LIMIT 1
0	select franchise from game group by franchise having count ( * ) = ( select max ( total ) from ( select count ( * ) as total from game group by franchise ) )	SELECT Franchise FROM game GROUP BY Franchise ORDER BY COUNT(*) DESC LIMIT 1
1	select franchise from game group by franchise having count ( * ) >= 2	SELECT Franchise FROM game GROUP BY Franchise HAVING COUNT(*)  >=  2
1	select franchise from game group by franchise having count ( * ) >= 2	SELECT Franchise FROM game GROUP BY Franchise HAVING COUNT(*)  >=  2
1	select player_name from player where player_id not in ( select player_id from game_player )	SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM game_player)
1	select player_name from player where player_id not in ( select player_id from game_player )	SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM game_player)
1	select game.title from game_player join game on game_player.game_id = game.game_id join player on game_player.player_id = player.player_id where player.college = 'Oklahoma' intersect select game.title from game_player join game on game_player.game_id = game.game_id join player on game_player.player_id = player.player_id where player.college = 'Auburn'	SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  "Oklahoma" INTERSECT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  "Auburn"
0	select title from game where game_id in ( select game_id from game_player where player_id in ( select player_id from player where college = 'Oklahoma' or college = 'Auburn' ) )	SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  "Oklahoma" INTERSECT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  "Auburn"
1	select distinct franchise from game	SELECT DISTINCT Franchise FROM game
1	select distinct franchise from game	SELECT DISTINCT Franchise FROM game
0	select title from game where game_id not in ( select game_id from game_player join player on game_player.player_id = player.player_id where position = 'Guard' )	SELECT Title FROM game EXCEPT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  "Guard"
0	select title from game where game_id not in ( select game_id from game_player join player on game_player.player_id = player.player_id where position = 'Guard' )	SELECT Title FROM game EXCEPT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  "Guard"
1	select name from press order by year_profits_billion desc	SELECT name FROM press ORDER BY Year_Profits_billion DESC
1	select name from press order by year_profits_billion desc	SELECT name FROM press ORDER BY Year_Profits_billion DESC
1	select name from press where year_profits_billion > 15 or month_profits_billion > 1	SELECT name FROM press WHERE Year_Profits_billion  >  15 OR Month_Profits_billion  >  1
1	select name from press where year_profits_billion > 15 or month_profits_billion > 1	SELECT name FROM press WHERE Year_Profits_billion  >  15 OR Month_Profits_billion  >  1
1	select avg ( year_profits_billion ) , max ( year_profits_billion ) from press	SELECT avg(Year_Profits_billion) ,  max(Year_Profits_billion) FROM press
0	select avg ( year_profits_billion ) , max ( year_profits_billion ) , name from press group by name	SELECT avg(Year_Profits_billion) ,  max(Year_Profits_billion) FROM press
1	select name from press order by month_profits_billion desc limit 1	SELECT name FROM press ORDER BY Month_Profits_billion DESC LIMIT 1
0	select name from press where month_profits_billion = ( select max ( month_profits_billion ) from press )	SELECT name FROM press ORDER BY Month_Profits_billion DESC LIMIT 1
0	select name from press order by month_profits_billion desc limit 1	SELECT name FROM press WHERE Month_Profits_billion  =  (SELECT min(Month_Profits_billion) FROM press) OR Month_Profits_billion  =  (SELECT max(Month_Profits_billion) FROM press)
0	select name from press order by month_profits_billion desc limit 1	SELECT name FROM press WHERE Month_Profits_billion  =  (SELECT min(Month_Profits_billion) FROM press) OR Month_Profits_billion  =  (SELECT max(Month_Profits_billion) FROM press)
1	select count ( * ) from author where age < 30	SELECT count(*) FROM author WHERE age  <  30
1	select count ( * ) from author where age < 30	SELECT count(*) FROM author WHERE age  <  30
1	select avg ( age ) , gender from author group by gender	SELECT avg(age) ,  gender FROM author GROUP BY gender
1	select gender , avg ( age ) from author group by gender	SELECT avg(age) ,  gender FROM author GROUP BY gender
1	select count ( * ) , gender from author where age > 30 group by gender	SELECT count(*) ,  gender FROM author WHERE age  >  30 GROUP BY gender
1	select count ( * ) , gender from author where age > 30 group by gender	SELECT count(*) ,  gender FROM author WHERE age  >  30 GROUP BY gender
1	select title from book order by release_date desc	SELECT title FROM book ORDER BY release_date DESC
1	select title from book order by release_date desc	SELECT title FROM book ORDER BY release_date DESC
1	select book_series , count ( * ) from book group by book_series	SELECT count(*) ,  book_series FROM book GROUP BY book_series
1	select count ( * ) , book_series from book group by book_series	SELECT count(*) ,  book_series FROM book GROUP BY book_series
1	select title , release_date from book order by sale_amount desc limit 5	SELECT title ,  release_date FROM book ORDER BY sale_amount DESC LIMIT 5
1	select title , release_date from book order by sale_amount desc limit 5	SELECT title ,  release_date FROM book ORDER BY sale_amount DESC LIMIT 5
1	select book_series from book where sale_amount > 1000 intersect select book_series from book where sale_amount < 500	SELECT book_series FROM book WHERE sale_amount  >  1000 INTERSECT SELECT book_series FROM book WHERE sale_amount  <  500
1	select book_series from book where sale_amount > 1000 intersect select book_series from book where sale_amount < 500	SELECT book_series FROM book WHERE sale_amount  >  1000 INTERSECT SELECT book_series FROM book WHERE sale_amount  <  500
1	select author.name from book join author on book.author_id = author.author_id where book.book_series = 'MM' intersect select author.name from book join author on book.author_id = author.author_id where book.book_series = 'LT'	SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'MM' INTERSECT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'LT'
0	select name from author where author_id in ( select author_id from book where book_series = 'MM' intersect select author_id from book where book_series = 'LT' )	SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'MM' INTERSECT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'LT'
1	select name , age from author where author_id not in ( select author_id from book )	SELECT name ,  age FROM author WHERE author_id NOT IN (SELECT author_id FROM book)
1	select name from author where author_id not in ( select author_id from book )	select name from author where author_id not in (select author_id from book)
1	select author.name from book join author on book.author_id = author.author_id group by book.author_id having count ( * ) > 1	SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id HAVING count(*)  >  1
1	select author.name from book join author on book.author_id = author.author_id group by book.author_id having count ( * ) > 1	SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id HAVING count(*)  >  1
1	select title , author.name , press.name from book join author on book.author_id = author.author_id join press on book.press_id = press.press_id order by book.sale_amount desc limit 3	SELECT t1.name ,  t2.title ,  t3.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id ORDER BY t2.sale_amount DESC LIMIT 3
1	select book.title , author.name , press.name from book join author on book.author_id = author.author_id join press on book.press_id = press.press_id order by book.sale_amount desc limit 3	SELECT t1.name ,  t2.title ,  t3.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id ORDER BY t2.sale_amount DESC LIMIT 3
1	select press.name , sum ( book.sale_amount ) from book join press on book.press_id = press.press_id group by press.press_id	SELECT sum(t1.sale_amount) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t1.press_id
1	select press.name , sum ( book.sale_amount ) from book join press on book.press_id = press.press_id group by press.press_id	SELECT sum(t1.sale_amount) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t1.press_id
1	select press.name , count ( * ) from book join press on book.press_id = press.press_id where book.sale_amount > 1000 group by press.name	SELECT count(*) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id WHERE sale_amount  >  1000 GROUP BY t2.name
0	select press.name , count ( * ) from press join book on press.press_id = book.press_id where book.sale_amount > 1000 group by press.press_id	SELECT count(*) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id WHERE sale_amount  >  1000 GROUP BY t2.name
0	select name from author where author_id in ( select author_id from book where sale_amount = ( select max ( sale_amount ) from book ) )	SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id ORDER BY t2.sale_amount DESC LIMIT 1
0	select name from author where author_id in ( select author_id from book where sale_amount = ( select max ( sale_amount ) from book ) )	SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id ORDER BY t2.sale_amount DESC LIMIT 1
1	select author.name , author.gender from book join author on book.author_id = author.author_id group by book.author_id order by count ( * ) desc limit 1	SELECT t1.name ,  t1.gender FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id ORDER BY count(*) DESC LIMIT 1
1	select author.name , author.gender from author join book on author.author_id = book.author_id group by author.author_id order by count ( * ) desc limit 1	SELECT t1.name ,  t1.gender FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id ORDER BY count(*) DESC LIMIT 1
0	select name from author where author_id not in ( select book.author_id from book join press on book.press_id = press.press_id where press.name = 'Accor' )	SELECT name FROM author EXCEPT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id WHERE t3.name  =  'Accor'
0	select name from author where author_id not in ( select book.author_id from book join press on book.press_id = press.press_id where press.name = 'Accor' )	SELECT name FROM author EXCEPT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id WHERE t3.name  =  'Accor'
1	select press.name , press.year_profits_billion from book join press on book.press_id = press.press_id group by press.press_id having count ( * ) > 2	SELECT t2.name ,  t2.Year_Profits_billion FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t2.press_id HAVING count(*)  >  2
1	select press.name , press.year_profits_billion from book join press on book.press_id = press.press_id group by press.press_id having count ( * ) > 2	SELECT t2.name ,  t2.Year_Profits_billion FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t2.press_id HAVING count(*)  >  2
1	select count ( * ) from authors	SELECT count(*) FROM Authors
1	select author_name from authors	SELECT author_name FROM Authors
1	select author_name , other_details from authors	SELECT author_name ,  other_details FROM Authors
1	select other_details from authors where author_name = 'Addison Denesik'	SELECT other_details FROM Authors WHERE author_name  =  "Addison Denesik"
1	select count ( * ) from documents	SELECT count(*) FROM Documents
1	select authors.author_name from authors join documents on authors.author_name = documents.author_name where documents.document_id = 4	SELECT author_name FROM Documents WHERE document_id  =  4
1	select authors.author_name from authors join documents on authors.author_name = documents.author_name where documents.document_name = 'Travel to Brazil'	SELECT author_name FROM Documents WHERE document_name  =  "Travel to Brazil"
1	select count ( * ) from authors join documents on authors.author_name = documents.author_name where authors.author_name = 'Era Kerluke'	SELECT count(*) FROM Documents WHERE author_name  =  "Era Kerluke"
1	select document_name , document_description from documents	SELECT document_name ,  document_description FROM Documents
1	select document_id , document_name from documents join authors on documents.author_name = authors.author_name where authors.author_name = 'Bianka Cummings'	SELECT document_id ,  document_name FROM Documents WHERE author_name  =  "Bianka Cummings"
0	select authors.author_name , documents.other_details from authors join documents on authors.author_name = documents.author_name where documents.document_name = 'Travel to China'	SELECT T2.author_name ,  T2.other_details FROM Documents AS T1 JOIN Authors AS T2 ON T1.author_name  =  T2.author_name WHERE document_name  =  "Travel to China"
1	select authors.author_name , count ( documents.document_id ) from authors join documents on authors.author_name = documents.author_name group by authors.author_name	SELECT author_name ,  count(*) FROM Documents GROUP BY author_name
0	select authors.author_name from authors join documents on authors.author_name = documents.author_name group by authors.author_name having count ( documents.document_id ) = ( select max ( count ) from ( select count ( document_id ) as count from documents group by author_name ) as counts )	SELECT author_name FROM Documents GROUP BY author_name ORDER BY count(*) DESC LIMIT 1
1	select authors.author_name from authors join documents on authors.author_name = documents.author_name group by authors.author_name having count ( * ) >= 2	SELECT author_name FROM Documents GROUP BY author_name HAVING count(*)  >=  2
1	select count ( * ) from business_processes	SELECT count(*) FROM Business_processes
1	select next_process_id , process_name , process_description from business_processes where process_id = 9	SELECT next_process_id ,  process_name ,  process_description FROM Business_processes WHERE process_id  =  9
1	select process_name from business_processes where next_process_id = 9	SELECT process_name FROM Business_processes WHERE process_id  =  (SELECT next_process_id FROM Business_processes WHERE process_id  =  9)
1	select count ( * ) from process_outcomes	SELECT count(*) FROM Process_outcomes
1	select process_outcome_code , process_outcome_description from process_outcomes	SELECT process_outcome_code ,  process_outcome_description FROM Process_outcomes
1	select process_outcome_description from process_outcomes where process_outcome_code = 'working'	SELECT process_outcome_description FROM Process_outcomes WHERE process_outcome_code  =  "working"
1	select count ( * ) from process_status	SELECT count(*) FROM Process_status
1	select process_status_code , process_status_description from process_status	SELECT process_status_code ,  process_status_description FROM Process_status
1	select process_status_description from process_status where process_status_code = 'ct'	SELECT process_status_description FROM Process_status WHERE process_status_code  =  "ct"
1	select count ( * ) from staff	SELECT count(*) FROM Staff
1	select staff_id , staff_details from staff	SELECT staff_id ,  staff_details FROM Staff
1	select staff_details from staff where staff_id = 100	SELECT staff_details FROM Staff WHERE staff_id  =  100
1	select count ( * ) from ref_staff_roles	SELECT count(*) FROM Ref_staff_roles
1	select staff_role_code , staff_role_description from ref_staff_roles	SELECT staff_role_code ,  staff_role_description FROM Ref_staff_roles
1	select staff_role_description from ref_staff_roles where staff_role_code = 'HR'	SELECT staff_role_description FROM Ref_staff_roles WHERE staff_role_code  =  "HR"
1	select count ( distinct document_id ) from documents_processes	SELECT count(DISTINCT document_id) FROM Documents_processes
1	select distinct process_id from documents_processes	SELECT DISTINCT process_id FROM Documents_processes
1	select document_id from documents except select document_id from documents_processes	SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_processes
1	select process_id from business_processes except select process_id from documents_processes	SELECT process_id FROM Business_processes EXCEPT SELECT process_id FROM Documents_processes
1	select process_outcomes.process_outcome_description , process_status.process_status_description from process_outcomes join documents_processes on process_outcomes.process_outcome_code = documents_processes.process_outcome_code join process_status on documents_processes.process_status_code = process_status.process_status_code where document_id = 0	SELECT T2.process_outcome_description ,  T3.process_status_description FROM Documents_processes AS T1 JOIN Process_outcomes AS T2 ON T1.process_outcome_code  =  T2.process_outcome_code JOIN Process_Status AS T3 ON T1.process_status_code  =  T3.process_status_code WHERE T1.document_id  =  0
0	select business_processes.process_name from documents join business_processes on documents.document_id = business_processes.process_id where documents.document_name = 'Travel to Brazil'	SELECT T3.process_name FROM Documents_processes AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id JOIN Business_processes AS T3 ON T1.process_id  =  T3.process_id WHERE T2.document_name  =  "Travel to Brazil"
0	select a.process_id , count ( b.document_id ) as num_docs from documents_processes a left join staff_in_processes b on a.process_id = b.process_id left join documents d on a.document_id = d.document_id group by a.process_id	SELECT process_id ,  count(*) FROM Documents_processes GROUP BY process_id
0	select count ( distinct s.staff_id ) from staff s join staff_in_processes sip on s.staff_id = sip.staff_id join documents_processes dp on sip.process_id = dp.process_id where dp.document_id = 0 and dp.process_id = 9	SELECT count(*) FROM Staff_in_processes WHERE document_id  =  0 AND process_id  =  9
0	select s.staff_id , count ( distinct sip.document_id ) as num_processes from staff s left join staff_in_processes sip on s.staff_id = sip.staff_id group by s.staff_id	SELECT staff_id ,  count(*) FROM Staff_in_processes GROUP BY staff_id
1	select staff_role_code , count ( * ) from staff_in_processes group by staff_role_code	SELECT staff_role_code ,  count(*) FROM Staff_in_processes GROUP BY staff_role_code
1	select count ( distinct ref_staff_roles.staff_role_code ) from staff join staff_in_processes on staff.staff_id = staff_in_processes.staff_id join ref_staff_roles on staff_in_processes.staff_role_code = ref_staff_roles.staff_role_code where staff.staff_id = 3	SELECT count(DISTINCT staff_role_code) FROM Staff_in_processes WHERE staff_id  =  3
1	select count ( * ) from agencies	SELECT count(*) FROM Agencies
1	select count ( * ) from agencies	SELECT count(*) FROM Agencies
1	select agency_id , agency_details from agencies	SELECT agency_id ,  agency_details FROM Agencies
1	select agency_id , agency_details from agencies	SELECT agency_id ,  agency_details FROM Agencies
1	select count ( * ) from clients	SELECT count(*) FROM Clients
1	select count ( * ) from clients	SELECT count(*) FROM Clients
1	select client_id , client_details from clients	SELECT client_id ,  client_details FROM Clients
1	select client_id , client_details from clients	SELECT client_id ,  client_details FROM Clients
0	select a.agency_id , count ( c.client_id ) from agencies a left join clients c on a.agency_id = c.agency_id group by a.agency_id	SELECT agency_id ,  count(*) FROM Clients GROUP BY agency_id
1	select count ( * ) , agencies.agency_id from agencies join clients on agencies.agency_id = clients.agency_id group by agencies.agency_id	SELECT agency_id ,  count(*) FROM Clients GROUP BY agency_id
0	select agency_id , client_details from clients group by agency_id order by count ( * ) desc limit 1	SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1
1	select agencies.agency_id , agencies.agency_details from agencies join clients on agencies.agency_id = clients.agency_id group by agencies.agency_id order by count ( * ) desc limit 1	SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1
0	select clients.agency_id , clients.client_details from clients join agencies on clients.agency_id = agencies.agency_id group by clients.agency_id having count ( * ) >= 2	SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id HAVING count(*)  >=  2
0	select clients.agency_id , clients.client_details from clients join agencies on clients.agency_id = agencies.agency_id group by clients.agency_id having count ( * ) >= 2	SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id HAVING count(*)  >=  2
1	select agencies.agency_details from agencies join clients on agencies.agency_id = clients.agency_id where clients.client_details = 'Mac'	SELECT T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id WHERE T1.client_details  =  'Mac'
1	select agencies.agency_details from clients join agencies on clients.agency_id = agencies.agency_id where clients.client_details = 'Mac'	SELECT T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id WHERE T1.client_details  =  'Mac'
0	select clients.client_details , staff.staff_details from clients join staff on clients.agency_id = staff.agency_id	SELECT T1.client_details ,  T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id
1	select clients.client_details , agencies.agency_details from clients join agencies on clients.agency_id = agencies.agency_id	SELECT T1.client_details ,  T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id
1	select sic_code , count ( * ) from clients group by sic_code	SELECT sic_code ,  count(*) FROM Clients GROUP BY sic_code
1	select sic_code , count ( * ) from clients group by sic_code	SELECT sic_code ,  count(*) FROM Clients GROUP BY sic_code
1	select client_id , client_details from clients where sic_code = 'Bad'	SELECT client_id ,  client_details FROM Clients WHERE sic_code  =  "Bad";
1	select client_id , client_details from clients where sic_code = 'Bad'	SELECT client_id ,  client_details FROM Clients WHERE sic_code  =  "Bad";
1	select clients.agency_id , agencies.agency_details from clients join agencies on clients.agency_id = agencies.agency_id	SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id
0	select agencies.agency_id , agencies.agency_details from agencies join clients on agencies.agency_id = clients.agency_id where clients.client_details = 'Y'	SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id
1	select agency_id from agencies except select agency_id from clients	SELECT agency_id FROM Agencies EXCEPT SELECT agency_id FROM Clients
1	select agency_id from agencies except select agency_id from clients	SELECT agency_id FROM Agencies EXCEPT SELECT agency_id FROM Clients
1	select count ( * ) from invoices	SELECT count(*) FROM Invoices
1	select count ( * ) from invoices	SELECT count(*) FROM Invoices
1	select invoice_id , invoice_status , invoice_details from invoices join clients on invoices.client_id = clients.client_id	SELECT invoice_id ,  invoice_status ,  invoice_details FROM Invoices
1	select invoice_id , invoice_status , invoice_details from invoices	SELECT invoice_id ,  invoice_status ,  invoice_details FROM Invoices
1	select clients.client_id , count ( * ) from invoices join clients on invoices.client_id = clients.client_id group by clients.client_id	SELECT client_id ,  count(*) FROM Invoices GROUP BY client_id
1	select client_id , count ( * ) from invoices group by client_id	SELECT client_id ,  count(*) FROM Invoices GROUP BY client_id
1	select clients.client_id , clients.client_details from clients join invoices on invoices.client_id = clients.client_id group by clients.client_id order by count ( * ) desc limit 1	SELECT T1.client_id ,  T2.client_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id ORDER BY count(*) DESC LIMIT 1
1	select clients.client_id , clients.client_details from clients join invoices on invoices.client_id = clients.client_id group by clients.client_id order by count ( * ) desc limit 1	SELECT T1.client_id ,  T2.client_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id ORDER BY count(*) DESC LIMIT 1
1	select clients.client_id from invoices join clients on invoices.client_id = clients.client_id group by clients.client_id having count ( * ) >= 2	SELECT client_id FROM Invoices GROUP BY client_id HAVING count(*)  >=  2
1	select clients.client_id from clients join invoices on invoices.client_id = clients.client_id group by clients.client_id having count ( * ) >= 2	SELECT client_id FROM Invoices GROUP BY client_id HAVING count(*)  >=  2
1	select invoice_status , count ( * ) from invoices group by invoice_status	SELECT invoice_status ,  count(*) FROM Invoices GROUP BY invoice_status
1	select invoice_status , count ( * ) from invoices group by invoice_status	SELECT invoice_status ,  count(*) FROM Invoices GROUP BY invoice_status
0	select invoice_status from invoices group by invoice_status having count ( * ) = ( select max ( count ) from ( select count ( * ) as count from invoices group by invoice_status ) )	SELECT invoice_status FROM Invoices GROUP BY invoice_status ORDER BY count(*) DESC LIMIT 1
1	select invoice_status from invoices group by invoice_status order by count ( * ) desc limit 1	SELECT invoice_status FROM Invoices GROUP BY invoice_status ORDER BY count(*) DESC LIMIT 1
0	select invoices.invoice_status , invoices.invoice_details , clients.client_id , agencies.agency_id , clients.client_details from invoices join clients on invoices.client_id = clients.client_id join agencies on clients.agency_id = agencies.agency_id	SELECT T1.invoice_status ,  T1.invoice_details ,  T2.client_id ,  T2.client_details ,  T3.agency_id ,  T3.agency_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id JOIN Agencies AS T3 ON T2.agency_id  =  T3.agency_id
0	sql placeholder	SELECT T1.invoice_status ,  T1.invoice_details ,  T2.client_id ,  T2.client_details ,  T3.agency_id ,  T3.agency_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id JOIN Agencies AS T3 ON T2.agency_id  =  T3.agency_id
1	select meeting_type , other_details from meetings	SELECT meeting_type ,  other_details FROM meetings
1	select meeting_type , other_details from meetings	SELECT meeting_type ,  other_details FROM meetings
1	select meeting_outcome , purpose_of_meeting from meetings	SELECT meeting_outcome ,  purpose_of_meeting FROM meetings
1	select meeting_outcome , purpose_of_meeting from meetings	SELECT meeting_outcome ,  purpose_of_meeting FROM meetings
0	select payments.invoice_id , invoices.invoice_details from payments join invoices on payments.invoice_id = invoices.invoice_id where invoices.invoice_status = 'Working'	SELECT T1.payment_id ,  T1.payment_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id WHERE T2.invoice_status  =  'Working'
1	select payments.payment_id , payments.payment_details from payments join invoices on payments.invoice_id = invoices.invoice_id where invoices.invoice_status = 'Working'	SELECT T1.payment_id ,  T1.payment_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id WHERE T2.invoice_status  =  'Working'
1	select invoice_id , invoice_status from invoices where invoice_id not in ( select invoice_id from payments )	SELECT invoice_id ,  invoice_status FROM Invoices EXCEPT SELECT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id
1	select invoice_id , invoice_status from invoices where invoice_id not in ( select invoice_id from payments )	SELECT invoice_id ,  invoice_status FROM Invoices EXCEPT SELECT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id
1	select count ( * ) from payments	SELECT count(*) FROM Payments
1	select count ( * ) from payments	SELECT count(*) FROM Payments
1	select payments.payment_id , payments.invoice_id , payments.payment_details from payments join invoices on payments.invoice_id = invoices.invoice_id	SELECT payment_id ,  invoice_id ,  payment_details FROM Payments
1	select payment_id , invoice_id , payment_details from payments	SELECT payment_id ,  invoice_id ,  payment_details FROM Payments
1	select distinct payments.invoice_id , invoices.invoice_status from payments join invoices on payments.invoice_id = invoices.invoice_id	SELECT DISTINCT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id
1	select distinct payments.invoice_id , invoices.invoice_status from payments join invoices on payments.invoice_id = invoices.invoice_id	SELECT DISTINCT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id
0	select a.invoice_id , count ( b.payment_id ) as number_of_payments from invoices a left join payments b on a.invoice_id = b.invoice_id group by a.invoice_id	SELECT invoice_id ,  count(*) FROM Payments GROUP BY invoice_id
1	select invoices.invoice_id , count ( * ) from invoices join payments on invoices.invoice_id = payments.invoice_id group by invoices.invoice_id	SELECT invoice_id ,  count(*) FROM Payments GROUP BY invoice_id
1	select invoices.invoice_id , invoices.invoice_status , invoices.invoice_details from payments join invoices on payments.invoice_id = invoices.invoice_id group by payments.invoice_id order by count ( * ) desc limit 1	SELECT T1.invoice_id ,  T2.invoice_status ,  T2.invoice_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id GROUP BY T1.invoice_id ORDER BY count(*) DESC LIMIT 1
1	select invoices.invoice_id , invoices.invoice_status , invoices.invoice_details from payments join invoices on payments.invoice_id = invoices.invoice_id group by payments.invoice_id order by count ( * ) desc limit 1	SELECT T1.invoice_id ,  T2.invoice_status ,  T2.invoice_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id GROUP BY T1.invoice_id ORDER BY count(*) DESC LIMIT 1
1	select count ( * ) from staff	SELECT count(*) FROM Staff
1	select count ( * ) from staff	SELECT count(*) FROM Staff
0	select a.agency_id , count ( s.staff_id ) from agencies a left join staff s on a.agency_id = s.agency_id group by a.agency_id	SELECT agency_id ,  count(*) FROM Staff GROUP BY agency_id
0	select a.agency_id , count ( s.staff_id ) from agencies a left join staff s on a.agency_id = s.agency_id group by a.agency_id	SELECT agency_id ,  count(*) FROM Staff GROUP BY agency_id
0	select a.agency_id , a.agency_details from agencies a , staff s where a.agency_id = s.agency_id group by a.agency_id having count ( s.staff_id ) = ( select max ( count ) from ( select count ( staff_id ) as count from staff group by agency_id ) )	SELECT T1.agency_id ,  T2.agency_details FROM Staff AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1
1	select agencies.agency_id , agencies.agency_details from agencies join staff on agencies.agency_id = staff.agency_id group by agencies.agency_id order by count ( * ) desc limit 1	SELECT T1.agency_id ,  T2.agency_details FROM Staff AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1
1	select meeting_outcome , count ( * ) from meetings group by meeting_outcome	SELECT meeting_outcome ,  count(*) FROM Meetings GROUP BY meeting_outcome
1	select meeting_outcome , count ( * ) from meetings group by meeting_outcome	SELECT meeting_outcome ,  count(*) FROM Meetings GROUP BY meeting_outcome
1	select clients.client_id , count ( * ) from meetings join clients on meetings.client_id = clients.client_id group by clients.client_id	SELECT client_id ,  count(*) FROM Meetings GROUP BY client_id
1	select client_id , count ( * ) from meetings group by client_id	SELECT client_id ,  count(*) FROM Meetings GROUP BY client_id
0	select meeting_type , count ( * ) from meetings join clients on meetings.client_id = clients.client_id group by meetings.client_id	SELECT meeting_type ,  count(*) FROM Meetings GROUP BY meeting_type
1	select meeting_type , count ( * ) from meetings group by meeting_type	SELECT meeting_type ,  count(*) FROM Meetings GROUP BY meeting_type
1	select meeting_id , meeting_outcome , meeting_type , clients.client_details from meetings join clients on meetings.client_id = clients.client_id	SELECT T1.meeting_id ,  T1.meeting_outcome ,  T1.meeting_type ,  T2.client_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id
1	select meeting_id , meeting_outcome , meeting_type , clients.client_details from meetings join clients on meetings.client_id = clients.client_id	SELECT T1.meeting_id ,  T1.meeting_outcome ,  T1.meeting_type ,  T2.client_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id
0	select m.meeting_id , count ( distinct s.staff_id ) as staff_count from meetings m left join staff_in_meetings s on m.meeting_id = s.meeting_id group by m.meeting_id	SELECT meeting_id ,  count(*) FROM Staff_in_meetings GROUP BY meeting_id
1	select meetings.meeting_id , count ( staff_id ) from meetings join staff_in_meetings on meetings.meeting_id = staff_in_meetings.meeting_id group by meetings.meeting_id	SELECT meeting_id ,  count(*) FROM Staff_in_meetings GROUP BY meeting_id
1	select staff.staff_id , count ( * ) from staff join staff_in_meetings on staff.staff_id = staff_in_meetings.staff_id group by staff.staff_id order by count ( * ) asc limit 1	SELECT staff_id ,  count(*) FROM Staff_in_meetings GROUP BY staff_id ORDER BY count(*) ASC LIMIT 1;
0	select staff.staff_id from staff join staff_in_meetings on staff.staff_id = staff_in_meetings.staff_id group by staff.staff_id order by count ( * ) asc limit 1	SELECT staff_id ,  count(*) FROM Staff_in_meetings GROUP BY staff_id ORDER BY count(*) ASC LIMIT 1;
1	select count ( distinct staff_id ) from staff_in_meetings	SELECT count(DISTINCT staff_id) FROM Staff_in_meetings
1	select count ( distinct staff_id ) from staff_in_meetings	SELECT count(DISTINCT staff_id) FROM Staff_in_meetings
1	select count ( * ) from staff where staff_id not in ( select staff_id from staff_in_meetings )	SELECT count(*) FROM Staff WHERE staff_id NOT IN ( SELECT staff_id FROM Staff_in_meetings )
1	select count ( * ) from staff where staff_id not in ( select staff_id from staff_in_meetings )	SELECT count(*) FROM Staff WHERE staff_id NOT IN ( SELECT staff_id FROM Staff_in_meetings )
1	select clients.client_id , clients.client_details from clients join meetings on clients.client_id = meetings.client_id union select clients.client_id , clients.client_details from clients join invoices on invoices.client_id = clients.client_id	SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id UNION SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id
1	select clients.client_id , clients.client_details from clients join meetings on clients.client_id = meetings.client_id union select clients.client_id , clients.client_details from clients join invoices on invoices.client_id = clients.client_id	SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id UNION SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id
0	select staff.staff_id , staff.staff_details from staff join staff_in_meetings on staff.staff_id = staff_in_meetings.staff_id where staff_in_meetings.meeting_id like '%s%'	SELECT staff_id ,  staff_details FROM staff WHERE staff_details LIKE "%s%" GROUP BY staff_id HAVING count(*)  >=  1
0	select staff.staff_id , staff.staff_details from staff join staff_in_meetings on staff.staff_id = staff_in_meetings.staff_id where staff_in_meetings.meeting_id like '%s%'	SELECT staff_id ,  staff_details FROM staff WHERE staff_details LIKE "%s%" GROUP BY staff_id HAVING count(*)  >=  1
0	select clients.client_id , clients.sic_code , clients.agency_id from meetings join clients on meetings.client_id = clients.client_id group by clients.client_id having count ( * ) = 1 intersect select clients.client_id , clients.sic_code , clients.agency_id from meetings join clients on meetings.client_id = clients.client_id group by clients.client_id having count ( * ) = 1	SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id HAVING count(*)  =  1 INTERSECT SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id
0	select meetings.client_id , clients.sic_code , clients.agency_id from meetings join clients on meetings.client_id = clients.client_id join invoices on invoices.client_id = clients.client_id group by meetings.client_id having count ( * ) = 1	SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id HAVING count(*)  =  1 INTERSECT SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id
0	sql placeholder	SELECT T1.start_date_time ,  T1.end_date_time ,  T2.client_details ,  T4.staff_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id JOIN staff_in_meetings AS T3 ON T1.meeting_id  =  T3.meeting_id JOIN staff AS T4 ON T3.staff_id  =  T4.staff_id
1	select meetings.start_date_time , meetings.end_date_time , clients.client_details , staff.staff_details from meetings join clients on meetings.client_id = clients.client_id join staff_in_meetings on meetings.meeting_id = staff_in_meetings.meeting_id join staff on staff_in_meetings.staff_id = staff.staff_id	SELECT T1.start_date_time ,  T1.end_date_time ,  T2.client_details ,  T4.staff_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id JOIN staff_in_meetings AS T3 ON T1.meeting_id  =  T3.meeting_id JOIN staff AS T4 ON T3.staff_id  =  T4.staff_id
                     easy                 medium               hard                 extra                all                 
count                0                    0                    0                    0                    2147                
=====================   EXECUTION ACCURACY     =====================
execution            0.000                0.000                0.000                0.000                0.639               
