1	select count(*) from singer;	SELECT count(*) FROM singer
1	select count(*) from singer;	SELECT count(*) FROM singer
1	select singer.name , singer.country , singer.age from singer   order by singer.age desc;	SELECT name ,  country ,  age FROM singer ORDER BY age DESC
1	select singer.name , singer.country , singer.age from singer   order by singer.age desc;	SELECT name ,  country ,  age FROM singer ORDER BY age DESC
1	select avg(singer.age) , min(singer.age) , max(singer.age) from singer where  singer.country = "France";	SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
1	select avg(singer.age) , min(singer.age) , max(singer.age) from singer where  singer.country = "France";	SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
1	select singer.song_name , singer.song_release_year from singer   order by singer.age asc limit 1;	SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
1	select singer.song_name , singer.song_release_year from singer   order by singer.age asc limit 1;	SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
1	select distinct singer.country from singer where  singer.age > 20;	SELECT DISTINCT country FROM singer WHERE age  >  20
1	select distinct singer.country from singer where  singer.age > 20;	SELECT DISTINCT country FROM singer WHERE age  >  20
1	select singer.country , count(*) from singer  group by singer.country;	SELECT country ,  count(*) FROM singer GROUP BY country
1	select singer.country , count(*) from singer  group by singer.country;	SELECT country ,  count(*) FROM singer GROUP BY country
1	select singer.song_name from singer where  singer.age > (select avg(singer.age) from singer  );	SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
1	select singer.song_name from singer where  singer.age > (select avg(singer.age) from singer  );	SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
1	select stadium.location , stadium.name from stadium where  stadium.capacity between 5000 and 10000;	SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
1	select stadium.location , stadium.name from stadium where  stadium.capacity between 5000 and 10000;	SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
0	select max(stadium.capacity) , avg(stadium.capacity) from stadium;	select max(capacity), average from stadium
1	select avg(stadium.capacity) , max(stadium.capacity) from stadium;	select avg(capacity) ,  max(capacity) from stadium
0	select stadium.name , stadium.capacity from stadium  group by stadium.name  order by avg(stadium.average) desc limit 1;	SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
0	select stadium.name , stadium.capacity from stadium  group by stadium.name  order by avg(stadium.average) desc limit 1;	SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
1	select count(*) from concert where  concert.year = 2014 or concert.year = 2015;	SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
1	select count(*) from concert where  concert.year = 2014 or concert.year = 2015;	SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
1	select stadium.name , count(*) from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID  group by concert.stadium_id;	SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
1	select stadium.name , count(*) from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID  group by concert.stadium_id;	SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
0	select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year >= 2014  group by concert.stadium_id  order by count(*) desc limit 1;	SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1
1	select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year > 2013  group by stadium.stadium_id  order by count(*) desc limit 1;	select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1
1	select concert.year from concert  group by concert.year  order by count(*) desc limit 1;	SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
1	select concert.year from concert  group by concert.year  order by count(*) desc limit 1;	SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
1	select stadium.name from stadium where  stadium.stadium_id not in (select concert.Stadium_ID from concert  );	SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
1	select stadium.name from stadium where  stadium.stadium_id not in (select concert.Stadium_ID from concert  );	SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
1	select singer.country from singer where  singer.age > 40   intersect select singer.country from singer where  singer.age < 30;	SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
1	select stadium.name from stadium   except select stadium.name from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2014;	SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
1	select stadium.name from stadium   except select stadium.name from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2014;	SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
0	select concert.concert_name , concert.theme , count(*) from singer_in_concert join concert on singer_in_concert.concert_ID = concert.concert_ID  group by concert.concert_name;	SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id
0	select concert.concert_name , concert.theme , count(*) from singer_in_concert join concert on singer_in_concert.concert_ID = concert.concert_ID  group by concert.concert_name;	select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id
0	select singer.name , count(*) from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID  group by singer.name;	SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
0	select singer.name , count(*) from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID  group by singer.name;	SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
1	select singer.name from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID join concert on singer_in_concert.concert_ID = concert.concert_ID where  concert.year = 2014;	SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
1	select singer.name from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID join concert on singer_in_concert.concert_ID = concert.concert_ID where  concert.year = 2014;	SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
1	select singer.name , singer.country from singer where  singer.song_name like "%Hey%";	SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
1	select singer.name , singer.country from singer where  singer.song_name like "%Hey%";	SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
1	select stadium.name , stadium.location from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2014   intersect select stadium.name , stadium.location from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2015;	SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
1	select stadium.name , stadium.location from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2014   intersect select stadium.name , stadium.location from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2015;	SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
1	select count(*) from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  stadium.capacity = (select max(stadium.Capacity) from stadium  );	select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
1	select count(*) from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  stadium.capacity = (select max(stadium.Capacity) from stadium  );	select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
1	select count(*) from Pets where  pets.weight > 10;	SELECT count(*) FROM pets WHERE weight  >  10
1	select count(*) from Pets where  pets.weight > 10;	SELECT count(*) FROM pets WHERE weight  >  10
0	select pets.weight from Pets where  pets.pettype = "dog"   order by pets.pet_age asc limit 1;	SELECT weight FROM pets ORDER BY pet_age LIMIT 1
0	select pets.weight from Pets where  pets.pet_age = "dog"   order by pets.pet_age asc limit 1;	SELECT weight FROM pets ORDER BY pet_age LIMIT 1
1	select max(pets.weight) , pets.pettype from Pets  group by pets.pettype;	SELECT max(weight) ,  petType FROM pets GROUP BY petType
1	select max(pets.weight) , pets.pettype from Pets  group by pets.pettype;	SELECT max(weight) ,  petType FROM pets GROUP BY petType
1	select count(*) from Has_Pet join Student on Has_Pet.StuID = Student.StuID where  student.age > 20;	SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
1	select count(*) from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  student.age > 20;	SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
1	select count(*) from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  student.sex = "F" and pets.pettype = "dog";	SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
1	select count(*) from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  student.sex = "F" and pets.pettype = "dog";	SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
1	select count( distinct pets.pettype) from Pets;	SELECT count(DISTINCT pettype) FROM pets
1	select count( distinct pets.pettype) from Pets;	SELECT count(DISTINCT pettype) FROM pets
0	select student.fname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "cat" or pets.pettype = "dog";	SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
0	select student.fname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "cat" or pets.pettype = "dog";	SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
1	select student.fname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "cat"   intersect select student.fname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "dog";	select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'
1	select student.fname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "cat"   intersect select student.fname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "dog";	SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
0	select student.major , student.age from Student   except select student.major , student.age from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "cat";	SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
0	select student.major , student.age from Student   except select student.major , student.age from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "cat";	SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
1	select student.stuid from Student   except select student.stuid from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "cat";	SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
1	select student.stuid from Student   except select student.stuid from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "cat";	SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
0	select student.fname , student.age from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "dog" and pets.pettype != "cat";	SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
0	select student.fname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = "dog" and pets.pettype != "cat";	SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
1	select pets.pettype , pets.weight from Pets   order by pets.pet_age asc limit 1;	SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
1	select pets.pettype , pets.weight from Pets   order by pets.pet_age asc limit 1;	SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
1	select pets.petid , pets.weight from Pets where  pets.pet_age > 1;	SELECT petid ,  weight FROM pets WHERE pet_age  >  1
1	select pets.petid , pets.weight from Pets where  pets.pet_age > 1;	SELECT petid ,  weight FROM pets WHERE pet_age  >  1
1	select pets.pettype , avg(pets.pet_age) , max(pets.pet_age) from Pets  group by pets.pettype;	SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
1	select pets.pettype , avg(pets.pet_age) , max(pets.pet_age) from Pets  group by pets.pettype;	SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
1	select pets.pettype , avg(pets.weight) from Pets  group by pets.pettype;	SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
1	select pets.pettype , avg(pets.weight) from Pets  group by pets.pettype;	SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
1	select distinct student.fname , student.age from Has_Pet join Student on Has_Pet.StuID = Student.StuID;	SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
1	select distinct student.fname , student.age from Has_Pet join Student on Has_Pet.StuID = Student.StuID;	SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
1	select has_pet.petid from Has_Pet join Student on Has_Pet.StuID = Student.StuID where  student.lname = "Smith";	SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
1	select has_pet.petid from Has_Pet join Student on Has_Pet.StuID = Student.StuID where  student.lname = "Smith";	SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
1	select count(*) , has_pet.stuid from Has_Pet  group by has_pet.stuid;	SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid
1	select count(*) , has_pet.stuid from Has_Pet  group by has_pet.stuid;	select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid
1	select student.fname , student.sex from Has_Pet join Student on Has_Pet.StuID = Student.StuID  group by has_pet.stuid having  count(*) > 1;	SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
1	select student.fname , student.sex from Has_Pet join Student on Has_Pet.StuID = Student.StuID  group by has_pet.stuid having  count(*) > 1;	SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
1	select student.lname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pet_age = 3 and pets.pettype = "cat";	SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
1	select student.lname from Has_Pet join Student on Has_Pet.StuID = Student.StuID join Pets on Has_Pet.PetID = Pets.PetID where  pets.pet_age = 3 and pets.pettype = "cat";	SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
1	select avg(student.age) from Student where  student.stuid not in (select Has_Pet.StuID from Has_Pet  );	select avg(age) from student where stuid not in (select stuid from has_pet)
1	select avg(student.age) from Student where  student.stuid not in (select Has_Pet.StuID from Has_Pet  );	select avg(age) from student where stuid not in (select stuid from has_pet)
1	select count(*) from continents;	SELECT count(*) FROM CONTINENTS;
1	select count(*) from continents;	SELECT count(*) FROM CONTINENTS;
1	select continents.contid , continents.continent , count(*) from countries join continents on countries.Continent = continents.ContId  group by continents.contid;	SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
0	select continents.continent , countries.countryname , count(*) from countries join continents on countries.Continent = continents.ContId  group by continents.continent;	SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
1	select count(*) from countries;	SELECT count(*) FROM COUNTRIES;
1	select count(*) from countries;	SELECT count(*) FROM COUNTRIES;
0	select car_makers.fullname , car_makers.maker , count(*) from model_list join car_makers on model_list.Maker = car_makers.Id  group by car_makers.maker;	SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
1	select car_makers.fullname , car_makers.id , count(*) from model_list join car_makers on model_list.Maker = car_makers.Id  group by car_makers.id;	SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
1	select model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model   order by cars_data.horsepower asc limit 1;	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
1	select model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model   order by cars_data.horsepower asc limit 1;	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
0	select model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  cars_data.weight < (select avg(cars_data.Weight) from cars_data  );	SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
0	select model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  cars_data.weight < (select avg(cars_data.Weight) from cars_data  );	SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
0	select car_makers.maker from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id where  cars_data.year = 1970;	SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
1	select distinct car_makers.maker from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id where  cars_data.year = 1970;	SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
0	select car_names.make , cars_data.year from cars_data join car_names on cars_data.Id = car_names.MakeId   order by cars_data.year asc limit 1;	SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
0	select car_makers.maker , cars_data.year from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id   order by cars_data.year asc limit 1;	SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
1	select distinct model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  cars_data.year > 1980;	SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
1	select distinct model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  cars_data.year > 1980;	SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
1	select continents.continent , count(*) from car_makers join countries on car_makers.Country = countries.CountryId join continents on countries.Continent = continents.ContId  group by continents.continent;	SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
1	select continents.continent , count(*) from car_makers join countries on car_makers.Country = countries.CountryId join continents on countries.Continent = continents.ContId  group by continents.continent;	SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
0	select countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.countryname  order by count(*) desc limit 1;	SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
1	select countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId  group by car_makers.country  order by count(*) desc limit 1;	SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
0	select count(*) , car_makers.fullname from model_list join car_makers on model_list.Maker = car_makers.Id  group by car_makers.maker;	select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;
1	select count(*) , car_makers.id , car_makers.fullname from model_list join car_makers on model_list.Maker = car_makers.Id  group by car_makers.id;	SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;
1	select cars_data.accelerate from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = "amc hornet sportabout (sw)";	SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
1	select cars_data.accelerate from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = "amc hornet sportabout (sw)";	SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
1	select count(*) from car_makers join countries on car_makers.Country = countries.CountryId where  countries.countryname = "france";	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
1	select count(*) from car_makers join countries on car_makers.Country = countries.CountryId where  countries.countryname = "france";	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
1	select count(*) from model_list join car_makers on model_list.Maker = car_makers.Id join countries on car_makers.Country = countries.CountryId where  countries.countryname = "usa";	SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
0	select count(*) from model_list join car_makers on model_list.Maker = car_makers.Id where  car_makers.country = "USA";	SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
1	select avg(cars_data.mpg) from cars_data where  cars_data.cylinders = 4;	SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
1	select avg(cars_data.mpg) from cars_data where  cars_data.cylinders = 4;	SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
1	select min(cars_data.weight) from cars_data where  cars_data.year = 1974 and cars_data.cylinders = 8;	select min(weight) from cars_data where cylinders  =  8 and year  =  1974
1	select min(cars_data.weight) from cars_data where  cars_data.year = 1974 and cars_data.cylinders = 8;	select min(weight) from cars_data where cylinders  =  8 and year  =  1974
0	select car_makers.maker , model_list.model from model_list join car_makers on model_list.Maker = car_makers.Id;	SELECT Maker ,  Model FROM MODEL_LIST;
0	select car_makers.maker , model_list.model from model_list join car_makers on model_list.Maker = car_makers.Id;	SELECT Maker ,  Model FROM MODEL_LIST;
0	select countries.countryname , car_makers.id from car_makers join countries on car_makers.Country = countries.CountryId;	SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
0	select countries.countryname , countries.countryid from car_makers join countries on car_makers.Country = countries.CountryId;	SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
1	select count(*) from cars_data where  cars_data.horsepower > 150;	SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
1	select count(*) from cars_data where  cars_data.horsepower > 150;	SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
1	select avg(cars_data.weight) , cars_data.year from cars_data  group by cars_data.year;	SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
1	select avg(cars_data.weight) , cars_data.year from cars_data  group by cars_data.year;	SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
1	select countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId join continents on countries.Continent = continents.ContId where  continents.continent = "europe"  group by countries.countryname having  count(*) >= 3;	SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
1	select countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId join continents on countries.Continent = continents.ContId where  continents.continent = "europe"  group by countries.countryname having  count(*) >= 3;	SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
0	select max(cars_data.horsepower) , car_names.make from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.cylinders = 3;	SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
1	select max(cars_data.horsepower) , car_names.make from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.cylinders = 3  group by car_names.make  order by max(cars_data.horsepower) desc limit 1;	SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
1	select model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model   order by cars_data.mpg desc limit 1;	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;
1	select model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model   order by cars_data.mpg desc limit 1;	select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;
1	select avg(cars_data.horsepower) from cars_data where  cars_data.year < 1980;	SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;
1	select avg(cars_data.horsepower) from cars_data where  cars_data.year < 1980;	select avg(horsepower) from cars_data where year  <  1980;
1	select avg(cars_data.edispl) from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  model_list.model = "volvo";	SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
1	select avg(cars_data.edispl) from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = "volvo";	SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
1	select max(cars_data.accelerate) , cars_data.cylinders from cars_data  group by cars_data.cylinders;	SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
1	select max(cars_data.accelerate) , cars_data.cylinders from cars_data  group by cars_data.cylinders;	SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
0	select model_list.model from car_names join model_list on car_names.Model = model_list.Model  group by car_names.make  order by count(*) desc limit 1;	SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
0	select model_list.model from model_list  group by model_list.model  order by count(*) desc limit 1;	SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
1	select count(*) from cars_data where  cars_data.cylinders > 4;	SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
1	select count(*) from cars_data where  cars_data.cylinders > 4;	SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
1	select count(*) from cars_data where  cars_data.year = 1980;	SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
1	select count(*) from cars_data where  cars_data.year = 1980;	SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
1	select count(*) from model_list join car_makers on model_list.Maker = car_makers.Id where  car_makers.fullname = "American Motor Company";	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
1	select count(*) from model_list join car_makers on model_list.Maker = car_makers.Id where  car_makers.fullname = "American Motor Company";	SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
1	select car_makers.fullname , car_makers.id from model_list join car_makers on model_list.Maker = car_makers.Id  group by car_makers.id having  count(*) > 3;	SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
0	select car_makers.maker , car_makers.id from model_list join car_makers on model_list.Maker = car_makers.Id  group by car_makers.maker having  count(*) > 3;	SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
1	select distinct model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id where  car_makers.fullname = "General Motors" or cars_data.weight > 3500;	SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
1	select distinct model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id where  car_makers.fullname = "General Motors" or cars_data.weight > 3500;	SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
0	select cars_data.year from cars_data where  cars_data.weight between 3000 and 4000;	select distinct year from cars_data where weight between 3000 and 4000;
0	select distinct cars_data.year from cars_data where  cars_data.weight < 4000 and cars_data.weight > 3000;	select distinct year from cars_data where weight between 3000 and 4000;
1	select cars_data.horsepower from cars_data   order by cars_data.accelerate desc limit 1;	SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
1	select cars_data.horsepower from cars_data   order by cars_data.accelerate desc limit 1;	SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
1	select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  model_list.model = "volvo"   order by cars_data.accelerate asc limit 1;	SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
1	select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  model_list.model = "volvo"   order by cars_data.accelerate asc limit 1;	SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
0	select count(*) from cars_data where  cars_data.accelerate > (select max(cars_data.accelerate) from cars_data  );	SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
0	select count(*) from cars_data where  cars_data.accelerate > (select max(cars_data.accelerate) from cars_data  );	SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
0	select count(*) from car_makers  group by car_makers.Id having  count(*) > 2;	select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
0	select count(*) from car_makers  group by car_makers.Id having  count(*) > 2;	select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
1	select count(*) from cars_data where  cars_data.cylinders > 6;	SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
1	select count(*) from cars_data where  cars_data.cylinders > 6;	SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
1	select car_names.model from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.cylinders = 4   order by cars_data.horsepower desc limit 1;	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
1	select car_names.model from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.cylinders = 4   order by cars_data.horsepower desc limit 1;	SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
0	select car_names.makeid , car_names.make from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.horsepower > (select min(cars_data.Horsepower) from cars_data where  cars_data.cylinders > 3  );	SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;
0	select car_names.make , car_names.model from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.cylinders < 4;	select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;
1	select max(cars_data.mpg) from cars_data where  cars_data.cylinders = 8 or cars_data.year < 1980;	select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
1	select max(cars_data.mpg) from cars_data where  cars_data.cylinders = 8 or cars_data.year < 1980;	select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
0	select model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id where  cars_data.weight < 3500 and car_makers.fullname != "Ford Motor Company";	SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
1	select distinct model_list.model from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id where  cars_data.weight < 3500 and car_makers.fullname != "Ford Motor Company";	SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
0	select countries.countryname from countries where  countries.countryid not in (select car_makers.Country from car_makers  );	SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
0	select countries.countryname from countries where  countries.countryid not in (select car_makers.Country from car_makers  );	SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
0	select car_makers.id , car_makers.maker from model_list join car_makers on model_list.Maker = car_makers.Id  group by car_makers.id having  count(*) >= 2;	select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;
0	select car_makers.id , car_makers.maker from model_list join car_makers on model_list.Maker = car_makers.Id  group by car_makers.id having  count(*) >= 2;	SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;
1	select countries.countryid , countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.countryid having  count(*) > 3  union select countries.countryid , countries.countryname from model_list join car_makers on model_list.Maker = car_makers.Id join countries on car_makers.Country = countries.CountryId where  model_list.model = "fiat";	SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';
0	select countries.countryid , countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.countryid having  count(*) > 3  union select countries.countryid , countries.countryname from model_list join car_makers on model_list.Maker = car_makers.Id join countries on car_makers.Country = countries.CountryId where  model_list.model = "Fiat";	select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';
1	select airlines.country from airlines where  airlines.airline = "JetBlue Airways";	SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
1	select airlines.country from airlines where  airlines.airline = "JetBlue Airways";	SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
1	select airlines.abbreviation from airlines where  airlines.airline = "JetBlue Airways";	SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
1	select airlines.abbreviation from airlines where  airlines.airline = "JetBlue Airways";	SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
1	select airlines.airline , airlines.abbreviation from airlines where  airlines.country = "USA";	SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
1	select airlines.airline , airlines.abbreviation from airlines where  airlines.country = "USA";	SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
1	select airports.airportcode , airports.airportname from airports where  airports.city = "Anthony";	SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
1	select airports.airportcode , airports.airportname from airports where  airports.city = "Anthony";	SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
1	select count(*) from airlines;	SELECT count(*) FROM AIRLINES
1	select count(*) from airlines;	SELECT count(*) FROM AIRLINES
1	select count(*) from airports;	SELECT count(*) FROM AIRPORTS
1	select count(*) from airports;	SELECT count(*) FROM AIRPORTS
1	select count(*) from flights;	SELECT count(*) FROM FLIGHTS
1	select count(*) from flights;	SELECT count(*) FROM FLIGHTS
1	select airlines.airline from airlines where  airlines.abbreviation = "UAL";	SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
1	select airlines.airline from airlines where  airlines.abbreviation = "UAL";	SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
1	select count(*) from airlines where  airlines.country = "USA";	SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
1	select count(*) from airlines where  airlines.country = "USA";	SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
1	select airports.city , airports.country from airports where  airports.airportname = "Alton";	SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
1	select airports.city , airports.country from airports where  airports.airportname = "Alton";	SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
1	select airports.airportname from airports where  airports.airportcode = "AKO";	SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
1	select airports.airportname from airports where  airports.airportcode = "AKO";	SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
1	select airports.airportname from airports where  airports.city = "Aberdeen";	SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
1	select airports.airportname from airports where  airports.city = "Aberdeen";	SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
1	select count(*) from flights where  flights.sourceairport = "APG";	SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
1	select count(*) from flights where  flights.sourceairport = "APG";	SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
1	select count(*) from flights where  flights.destairport = "ATO";	SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
0	select count(*) from flights where  flights.sourceairport = "ATO";	SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
0	select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "Aberdeen";	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
0	select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "Aberdeen";	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
1	select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "Aberdeen";	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
1	select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "Aberdeen";	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
0	select count(*) from flights where  flights.destairport in (select airports.AirportCode from airports where  airports.city = "Aberdeen"   intersect select airports.AirportCode from airports where  airports.city = "Ashley"   );	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
0	select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "Aberdeen" and airports.airportname = "Ashley";	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
1	select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = "JetBlue Airways";	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
1	select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = "JetBlue Airways";	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
0	select count(*) from flights join airports on flights.DestAirport = airports.AirportCode join airlines on airports.Country = airlines.Country where  airports.airportcode = "ASY" and airlines.airline = "United Airlines";	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
0	select count(*) from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = "ASY" and airlines.airline = "United Airlines";	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
1	select count(*) from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = "AHD" and airlines.airline = "United Airlines";	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
1	select count(*) from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = "AHD" and airlines.airline = "United Airlines";	SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
0	select count(*) from flights join airports on flights.DestAirport = airports.AirportCode join airlines on airports.Country = airlines.Country where  airports.city = "Aberdeen" and airlines.airline = "United Airlines";	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
0	select count(*) from airlines join airports on airlines.uid = airports.AirportCode where  airports.city = "Aberdeen" and airlines.airline = "United Airlines";	SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
1	select airports.city from flights join airports on flights.DestAirport = airports.AirportCode  group by airports.city  order by count(*) desc limit 1;	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
1	select airports.city from flights join airports on flights.DestAirport = airports.AirportCode  group by airports.city  order by count(*) desc limit 1;	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
0	select airports.city from flights join airports on flights.DestAirport = airports.AirportCode  group by airports.city  order by count(*) desc limit 1;	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
0	select airports.city from flights join airports on flights.DestAirport = airports.AirportCode  group by airports.city  order by count(*) desc limit 1;	SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
0	select airports.airportcode from flights join airports on flights.DestAirport = airports.AirportCode  group by airports.airportcode  order by count(*) desc limit 1;	SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
0	select airports.airportcode from flights join airports on flights.DestAirport = airports.AirportCode  group by airports.airportcode  order by count(*) desc limit 1;	SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
0	select airports.airportcode from flights join airports on flights.DestAirport = airports.AirportCode  group by airports.airportcode  order by count(*) asc limit 1;	SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
0	select airports.airportcode from flights join airports on flights.DestAirport = airports.AirportCode  group by airports.airportcode  order by count(*) asc limit 1;	SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
1	select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline  order by count(*) desc limit 1;	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
1	select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline  order by count(*) desc limit 1;	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
0	select airlines.abbreviation , airlines.country from airlines join flights on airlines.uid = flights.Airline  group by airlines.abbreviation  order by count(*) asc limit 1;	SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
0	select airlines.abbreviation , airlines.country from airlines join flights on airlines.uid = flights.Airline  group by airlines.country  order by count(*) asc limit 1;	SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
1	select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = "AHD";	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
1	select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = "AHD";	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
0	select airlines.airline from airlines join airports on airlines.uid = airports.AirportCode where  airports.airportcode = "AHD";	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
1	select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.destairport = "AHD";	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
1	select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = "APG"   intersect select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = "CVO";	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
1	select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = "APG"   intersect select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = "CVO";	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
1	select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = "CVO"   except select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = "APG";	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
1	select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = "CVO"   except select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = "APG";	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
0	select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) >= 10;	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
0	select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) >= 10;	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
1	select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200;	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
1	select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200;	SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
1	select flights.flightno from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = "United Airlines";	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
1	select flights.flightno from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = "United Airlines";	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
0	select flights.flightno from flights where  flights.destairport = "APG";	SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
1	select flights.flightno from flights where  flights.sourceairport = "APG";	SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
1	select flights.flightno from flights where  flights.destairport = "APG";	SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
1	select flights.flightno from flights where  flights.destairport = "APG";	SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
0	select flights.flightno from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "Aberdeen";	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
0	select flights.flightno from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "Aberdeen";	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
1	select flights.flightno from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "Aberdeen";	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
1	select flights.flightno from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "Aberdeen";	SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
1	select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "Aberdeen" or airports.city = "Abilene";	SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
1	select count(*) from flights join airports on flights.DestAirport = airports.AirportCode where  airports.city = "Aberdeen" or airports.city = "Abilene";	SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
0	select airports.airportname from airports where  airports.airportcode not in (select flights.DestAirport from flights  );	SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
0	select airports.airportname from airports where  airports.airportcode not in (select flights.DestAirport from flights  );	SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
1	select count(*) from employee;	SELECT count(*) FROM employee
1	select count(*) from employee;	SELECT count(*) FROM employee
1	select employee.name from employee   order by employee.age asc;	SELECT name FROM employee ORDER BY age
1	select employee.name from employee   order by employee.age asc;	SELECT name FROM employee ORDER BY age
1	select employee.city , count(*) from employee  group by employee.city;	SELECT count(*) ,  city FROM employee GROUP BY city
1	select employee.city , count(*) from employee  group by employee.city;	SELECT count(*) ,  city FROM employee GROUP BY city
0	select employee.city from employee where  employee.age > 30  group by employee.city having  count(*) > 1;	SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
0	select employee.city from employee where  employee.age > 30  group by employee.city having  count(*) > 1;	SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
1	select count(*) , shop.location from shop  group by shop.location;	SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
1	select shop.location , count(*) from shop  group by shop.location;	SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
1	select shop.manager_name , shop.district from shop   order by shop.number_products desc limit 1;	SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
1	select shop.manager_name , shop.district from shop   order by shop.number_products desc limit 1;	SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
1	select min(shop.number_products) , max(shop.number_products) from shop;	SELECT min(Number_products) ,  max(Number_products) FROM shop
1	select min(shop.number_products) , max(shop.number_products) from shop;	SELECT min(Number_products) ,  max(Number_products) FROM shop
1	select shop.name , shop.location , shop.district from shop   order by shop.number_products desc;	SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
1	select shop.name , shop.location , shop.district from shop   order by shop.number_products desc;	SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
1	select shop.name from shop where  shop.number_products > (select avg(shop.number_products) from shop  );	SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
1	select shop.name from shop where  shop.number_products > (select avg(shop.number_products) from shop  );	SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
1	select employee.name from evaluation join employee on evaluation.Employee_ID = employee.Employee_ID  group by evaluation.employee_id  order by count(*) desc limit 1;	SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
1	select employee.name from evaluation join employee on evaluation.Employee_ID = employee.Employee_ID  group by evaluation.employee_id  order by count(*) desc limit 1;	SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
1	select employee.name from evaluation join employee on evaluation.Employee_ID = employee.Employee_ID   order by evaluation.bonus desc limit 1;	SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
1	select employee.name from evaluation join employee on evaluation.Employee_ID = employee.Employee_ID   order by evaluation.bonus desc limit 1;	SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
1	select employee.name from employee where  employee.employee_id not in (select evaluation.Employee_ID from evaluation  );	SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
1	select employee.name from employee where  employee.employee_id not in (select evaluation.Employee_ID from evaluation  );	SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
1	select shop.name from hiring join shop on hiring.Shop_ID = shop.Shop_ID  group by hiring.shop_id  order by count(*) desc limit 1;	SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
1	select shop.name from hiring join shop on hiring.Shop_ID = shop.Shop_ID  group by hiring.shop_id  order by count(*) desc limit 1;	SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
1	select shop.name from shop where  shop.shop_id not in (select hiring.Shop_ID from hiring  );	SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
1	select shop.name from shop where  shop.shop_id not in (select hiring.Shop_ID from hiring  );	SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
0	select count(*) , shop.name from hiring join shop on hiring.Shop_ID = shop.Shop_ID  group by hiring.shop_id;	SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
0	select count(*) , shop.name from hiring join shop on hiring.Shop_ID = shop.Shop_ID  group by hiring.shop_id;	SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
1	select sum(evaluation.bonus) from evaluation;	SELECT sum(bonus) FROM evaluation
1	select sum(evaluation.bonus) from evaluation;	SELECT sum(bonus) FROM evaluation
1	select * from hiring;	SELECT * FROM hiring
1	select * from hiring;	SELECT * FROM hiring
1	select shop.district from shop where  shop.number_products < 3000   intersect select shop.district from shop where  shop.number_products > 10000;	SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
1	select shop.district from shop where  shop.number_products < 3000   intersect select shop.district from shop where  shop.number_products > 10000;	SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
1	select count( distinct shop.location) from shop;	SELECT count(DISTINCT LOCATION) FROM shop
1	select count( distinct shop.location) from shop;	SELECT count(DISTINCT LOCATION) FROM shop
1	select count(*) from Documents;	SELECT count(*) FROM Documents
1	select count(*) from Documents;	SELECT count(*) FROM Documents
1	select documents.document_id , documents.document_name , documents.document_description from Documents;	SELECT document_id ,  document_name ,  document_description FROM Documents
1	select documents.document_id , documents.document_name , documents.document_description from Documents;	SELECT document_id ,  document_name ,  document_description FROM Documents
1	select documents.document_name , documents.template_id from Documents where  documents.document_description like "%w%";	SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
1	select documents.document_name , documents.template_id from Documents where  documents.document_description like "%w%";	SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
1	select documents.document_id , documents.template_id , documents.document_description from Documents where  documents.document_name = "Robbin CV";	SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
1	select documents.document_id , documents.template_id , documents.document_description from Documents where  documents.document_name = "Robbin CV";	SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
1	select count( distinct documents.template_id) from Documents;	SELECT count(DISTINCT template_id) FROM Documents
1	select count( distinct documents.template_id) from Documents;	SELECT count(DISTINCT template_id) FROM Documents
1	select count(*) from Documents join Templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = "PPT";	SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
1	select count(*) from Documents join Templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = "PPT";	SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
1	select documents.template_id , count(*) from Documents  group by documents.template_id;	SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
1	select documents.template_id , count(*) from Documents  group by documents.template_id;	SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
1	select templates.template_id , templates.template_type_code from Documents join Templates on Documents.Template_ID = Templates.Template_ID  group by templates.template_id  order by count(*) desc limit 1;	SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
1	select documents.template_id , templates.template_type_code from Documents join Templates on Documents.Template_ID = Templates.Template_ID  group by documents.template_id  order by count(*) desc limit 1;	SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
1	select documents.template_id from Documents  group by documents.template_id having  count(*) > 1;	SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
1	select documents.template_id from Documents  group by documents.template_id having  count(*) > 1;	SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
1	select templates.template_id from Templates   except select documents.template_id from Documents;	SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
1	select templates.template_id from Templates   except select documents.template_id from Documents;	SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
1	select count(*) from Templates;	SELECT count(*) FROM Templates
1	select count(*) from Templates;	SELECT count(*) FROM Templates
1	select templates.template_id , templates.version_number , templates.template_type_code from Templates;	SELECT template_id ,  version_number ,  template_type_code FROM Templates
1	select templates.template_id , templates.version_number , templates.template_type_code from Templates;	SELECT template_id ,  version_number ,  template_type_code FROM Templates
1	select distinct templates.template_type_code from Templates;	SELECT DISTINCT template_type_code FROM Templates
1	select distinct templates.template_type_code from Templates;	SELECT DISTINCT template_type_code FROM Templates
1	select templates.template_id from Templates where  templates.template_type_code = "PP" or templates.template_type_code = "PPT";	SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
1	select templates.template_id from Templates where  templates.template_type_code = "PP" or templates.template_type_code = "PPT";	SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
1	select count(*) from Templates where  templates.template_type_code = "CV";	SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
1	select count(*) from Templates where  templates.template_type_code = "CV";	SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
1	select templates.version_number , templates.template_type_code from Templates where  templates.version_number > 5;	SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
1	select templates.version_number , templates.template_type_code from Templates where  templates.version_number > 5;	SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
1	select templates.template_type_code , count(*) from Templates  group by templates.template_type_code;	SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
1	select templates.template_type_code , count(*) from Templates  group by templates.template_type_code;	SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
1	select templates.template_type_code from Templates  group by templates.template_type_code  order by count(*) desc limit 1;	SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
1	select templates.template_type_code from Templates  group by templates.template_type_code  order by count(*) desc limit 1;	SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
1	select templates.template_type_code from Templates  group by templates.template_type_code having  count(*) < 3;	SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
1	select templates.template_type_code from Templates  group by templates.template_type_code having  count(*) < 3;	SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
0	select min(templates.version_number) , templates.template_type_code from Templates  group by templates.template_type_code;	SELECT min(Version_Number) ,  template_type_code FROM Templates
1	select templates.version_number , templates.template_type_code from Templates   order by templates.version_number asc limit 1;	SELECT min(Version_Number) ,  template_type_code FROM Templates
1	select templates.template_type_code from Documents join Templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = "Data base";	SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
1	select templates.template_type_code from Documents join Templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = "Data base";	SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
1	select documents.document_name from Documents join Templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = "BK";	SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
1	select documents.document_name from Documents join Templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = "BK";	SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
1	select templates.template_type_code , count(*) from Documents join Templates on Documents.Template_ID = Templates.Template_ID  group by templates.template_type_code;	SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
1	select templates.template_type_code , count(*) from Documents join Templates on Documents.Template_ID = Templates.Template_ID  group by templates.template_type_code;	SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
1	select templates.template_type_code from Documents join Templates on Documents.Template_ID = Templates.Template_ID  group by templates.template_type_code  order by count(*) desc limit 1;	SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
1	select templates.template_type_code from Documents join Templates on Documents.Template_ID = Templates.Template_ID  group by templates.template_type_code  order by count(*) desc limit 1;	SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
1	select templates.template_type_code from Templates   except select templates.template_type_code from Documents join Templates on Documents.Template_ID = Templates.Template_ID;	SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
1	select templates.template_type_code from Templates   except select templates.template_type_code from Documents join Templates on Documents.Template_ID = Templates.Template_ID;	SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
1	select ref_template_types.template_type_code , ref_template_types.template_type_description from Ref_Template_Types;	SELECT template_type_code ,  template_type_description FROM Ref_template_types
1	select ref_template_types.template_type_code , ref_template_types.template_type_description from Ref_Template_Types;	SELECT template_type_code ,  template_type_description FROM Ref_template_types
0	select ref_template_types.template_type_description from Templates join Ref_Template_Types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  templates.template_type_code = "AD";	SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
0	select ref_template_types.template_type_description from Templates join Ref_Template_Types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  templates.template_type_code = "AD";	SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
1	select ref_template_types.template_type_code from Ref_Template_Types where  ref_template_types.template_type_description = "Book";	SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
1	select ref_template_types.template_type_code from Ref_Template_Types where  ref_template_types.template_type_description = "Book";	SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
1	select distinct ref_template_types.template_type_description from Documents join Templates on Documents.Template_ID = Templates.Template_ID join Ref_Template_Types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code;	SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
1	select distinct ref_template_types.template_type_description from Documents join Templates on Documents.Template_ID = Templates.Template_ID join Ref_Template_Types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code;	SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
1	select templates.template_id from Templates join Ref_Template_Types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = "Presentation";	SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
1	select templates.template_id from Templates join Ref_Template_Types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = "Presentation";	SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
1	select count(*) from Paragraphs;	SELECT count(*) FROM Paragraphs
1	select count(*) from Paragraphs;	SELECT count(*) FROM Paragraphs
1	select count(*) from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = "Summer Show";	SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
1	select count(*) from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = "Summer Show";	SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
1	select paragraphs.other_details from Paragraphs where  paragraphs.paragraph_text = "Korea";	select other_details from paragraphs where paragraph_text like 'korea'
0	select paragraphs.other_details from Paragraphs where  paragraphs.paragraph_text like "%Korea%";	select other_details from paragraphs where paragraph_text like 'korea'
1	select paragraphs.paragraph_id , paragraphs.paragraph_text from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = "Welcome to NY";	SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
1	select paragraphs.paragraph_id , paragraphs.paragraph_text from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = "Welcome to NY";	SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
1	select paragraphs.paragraph_text from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = "Customer reviews";	SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
1	select paragraphs.paragraph_text from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = "Customer reviews";	SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
0	select paragraphs.document_id , count(*) from Paragraphs  group by paragraphs.document_id  order by count(*) asc;	SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
0	select paragraphs.document_id , count(*) from Paragraphs  group by paragraphs.document_id  order by count(*) asc;	SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
1	select documents.document_id , documents.document_name , count(*) from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID  group by paragraphs.document_id;	SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
1	select documents.document_id , documents.document_name , count(*) from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID  group by paragraphs.document_id;	SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
1	select paragraphs.document_id from Paragraphs  group by paragraphs.document_id having  count(*) >= 2;	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
1	select paragraphs.document_id from Paragraphs  group by paragraphs.document_id having  count(*) >= 2;	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
1	select documents.document_id , documents.document_name from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID  group by paragraphs.document_id  order by count(*) desc limit 1;	SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
1	select documents.document_id , documents.document_name from Paragraphs join Documents on Paragraphs.Document_ID = Documents.Document_ID  group by paragraphs.document_id  order by count(*) desc limit 1;	SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
1	select paragraphs.document_id from Paragraphs  group by paragraphs.document_id  order by count(*) asc limit 1;	SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
1	select paragraphs.document_id from Paragraphs  group by paragraphs.document_id  order by count(*) asc limit 1;	SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
1	select paragraphs.document_id from Paragraphs  group by paragraphs.document_id having  count(*) between 1 and 2;	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
1	select paragraphs.document_id from Paragraphs  group by paragraphs.document_id having  count(*) between 1 and 2;	SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
1	select paragraphs.document_id from Paragraphs where  paragraphs.paragraph_text = "Brazil"   intersect select paragraphs.document_id from Paragraphs where  paragraphs.paragraph_text = "Ireland";	SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
1	select paragraphs.document_id from Paragraphs where  paragraphs.paragraph_text = "Brazil"   intersect select paragraphs.document_id from Paragraphs where  paragraphs.paragraph_text = "Ireland";	SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
1	select count(*) from teacher;	SELECT count(*) FROM teacher
1	select count(*) from teacher;	SELECT count(*) FROM teacher
1	select teacher.name from teacher   order by teacher.age asc;	SELECT Name FROM teacher ORDER BY Age ASC
1	select teacher.name from teacher   order by teacher.age asc;	SELECT Name FROM teacher ORDER BY Age ASC
1	select teacher.age , teacher.hometown from teacher;	SELECT Age ,  Hometown FROM teacher
1	select teacher.age , teacher.hometown from teacher;	SELECT Age ,  Hometown FROM teacher
0	select teacher.name from teacher where  teacher.hometown != "Little Lever Urban District";	select name from teacher where hometown != "little lever urban district"
0	select teacher.name from teacher where  teacher.hometown != "Little Lever Urban District";	select name from teacher where hometown != "little lever urban district"
1	select teacher.name from teacher where  teacher.age = 32 or teacher.age = 33;	SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
1	select teacher.name from teacher where  teacher.age = 32 or teacher.age = 33;	SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
1	select teacher.hometown from teacher   order by teacher.age asc limit 1;	SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
1	select teacher.hometown from teacher   order by teacher.age asc limit 1;	SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
1	select teacher.hometown , count(*) from teacher  group by teacher.hometown;	SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
1	select teacher.hometown , count(*) from teacher  group by teacher.hometown;	SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
1	select teacher.hometown from teacher  group by teacher.hometown  order by count(*) desc limit 1;	SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
1	select teacher.hometown from teacher  group by teacher.hometown  order by count(*) desc limit 1;	SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
1	select teacher.hometown from teacher  group by teacher.hometown having  count(*) >= 2;	SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
1	select teacher.hometown from teacher  group by teacher.hometown having  count(*) >= 2;	SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
1	select teacher.name , course.course from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID join course on course_arrange.Course_ID = course.Course_ID;	SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
1	select teacher.name , course.course from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID join course on course_arrange.Course_ID = course.Course_ID;	SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
1	select teacher.name , course.course from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID join course on course_arrange.Course_ID = course.Course_ID   order by teacher.name asc;	SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
1	select teacher.name , course.course from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID join course on course_arrange.Course_ID = course.Course_ID   order by teacher.name asc;	SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
1	select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID join course on course_arrange.Course_ID = course.Course_ID where  course.course = "Math";	SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
1	select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID join course on course_arrange.Course_ID = course.Course_ID where  course.course = "Math";	SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
0	select teacher.name , count(*) from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by course_arrange.teacher_id;	SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
1	select teacher.name , count(*) from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name;	SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
0	select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by course_arrange.teacher_id having  count(*) >= 2;	SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
0	select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by course_arrange.teacher_id having  count(*) >= 2;	SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
1	select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  );	SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
1	select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  );	SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
1	select count(*) from visitor where  visitor.age < 30;	SELECT count(*) FROM visitor WHERE age  <  30
1	select visitor.name from visitor where  visitor.level_of_membership > 4   order by visitor.level_of_membership desc;	SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
0	select avg(visitor.age) from visitor where  visitor.level_of_membership > 4;	SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4
1	select visitor.name , visitor.level_of_membership from visitor where  visitor.level_of_membership > 4   order by visitor.age desc;	SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
1	select museum.museum_id , museum.name from museum   order by museum.num_of_staff desc limit 1;	SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1
1	select avg(museum.num_of_staff) from museum where  museum.open_year < 2009;	SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009
1	select museum.open_year , museum.num_of_staff from museum where  museum.name = "Plaza Museum";	SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'
1	select museum.name from museum where  museum.num_of_staff > (select min(museum.num_of_staff) from museum where  museum.open_year > 2010  );	SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
0	select visit.visitor_id , visitor.name , visitor.age from visit join visitor on visit.visitor_ID = visitor.ID  group by visit.visitor_id having  count(*) > 1;	SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1
0	select visitor.id , visitor.name , visitor.level_of_membership from visit join visitor on visit.visitor_ID = visitor.ID  group by visit.visitor_id  order by sum(visit.total_spent) desc limit 1;	SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1
1	select museum.museum_id , museum.name from visit join museum on visit.Museum_ID = museum.Museum_ID  group by visit.museum_id  order by count(*) desc limit 1;	SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1
1	select museum.name from museum where  museum.museum_id not in (select visit.Museum_ID from visit  );	SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)
0	select visitor.name , visitor.age from visit join visitor on visit.visitor_ID = visitor.ID  group by visit.visitor_id  order by sum(visit.num_of_ticket) desc limit 1;	SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
1	select avg(visit.num_of_ticket) , max(visit.num_of_ticket) from visit;	SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit
1	select sum(visit.total_spent) from visit join visitor on visit.visitor_ID = visitor.ID where  visitor.level_of_membership = 1;	SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1
1	select visitor.name from visit join visitor on visit.visitor_ID = visitor.ID join museum on visit.Museum_ID = museum.Museum_ID where  museum.open_year < 2009   intersect select visitor.name from visit join visitor on visit.visitor_ID = visitor.ID join museum on visit.Museum_ID = museum.Museum_ID where  museum.open_year > 2011;	SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011
0	select count(*) from visit where  visit.museum_id not in (select museum.Museum_ID from museum where  museum.open_year > 2010  );	SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)
1	select count(*) from museum where  museum.open_year > 2013 or museum.open_year < 2008;	SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008
1	select count(*) from players;	SELECT count(*) FROM players
1	select count(*) from players;	SELECT count(*) FROM players
1	select count(*) from matches;	SELECT count(*) FROM matches
1	select count(*) from matches;	SELECT count(*) FROM matches
1	select players.first_name , players.birth_date from players where  players.country_code = "USA";	SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
1	select players.first_name , players.birth_date from players where  players.country_code = "USA";	SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
1	select avg(matches.loser_age) , avg(matches.winner_age) from matches;	SELECT avg(loser_age) ,  avg(winner_age) FROM matches
1	select avg(matches.loser_age) , avg(matches.winner_age) from matches;	SELECT avg(loser_age) ,  avg(winner_age) FROM matches
1	select avg(matches.winner_rank) from matches;	SELECT avg(winner_rank) FROM matches
1	select avg(matches.winner_rank) from matches;	SELECT avg(winner_rank) FROM matches
1	select min(matches.loser_rank) from matches;	SELECT min(loser_rank) FROM matches
0	select matches.loser_rank from matches   order by matches.loser_rank desc limit 1;	SELECT min(loser_rank) FROM matches
1	select count( distinct players.country_code) from players;	SELECT count(DISTINCT country_code) FROM players
1	select count( distinct players.country_code) from players;	SELECT count(DISTINCT country_code) FROM players
1	select count( distinct matches.loser_name) from matches;	SELECT count(DISTINCT loser_name) FROM matches
1	select count( distinct matches.loser_name) from matches;	SELECT count(DISTINCT loser_name) FROM matches
1	select matches.tourney_name from matches  group by matches.tourney_name having  count(*) > 10;	SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
1	select matches.tourney_name from matches  group by matches.tourney_name having  count(*) > 10;	SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
1	select matches.winner_name from matches where  matches.year = 2013   intersect select matches.winner_name from matches where  matches.year = 2016;	SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
0	select players.first_name , players.last_name from matches join players on matches.winner_id = players.player_id where  matches.year = 2013   intersect select players.first_name , players.last_name from matches join players on matches.winner_id = players.player_id where  matches.year = 2016;	SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
1	select count(*) from matches where  matches.year = 2013 or matches.year = 2016;	SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
1	select count(*) from matches where  matches.year = 2013 or matches.year = 2016;	SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
1	select players.country_code , players.first_name from matches join players on matches.winner_id = players.player_id where  matches.tourney_name = "WTA Championships"   intersect select players.country_code , players.first_name from matches join players on matches.winner_id = players.player_id where  matches.tourney_name = "Australian Open";	SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
1	select players.first_name , players.country_code from matches join players on matches.winner_id = players.player_id where  matches.tourney_name = "WTA Championships"   intersect select players.first_name , players.country_code from matches join players on matches.winner_id = players.player_id where  matches.tourney_name = "Australian Open";	SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
0	select players.first_name , players.country_code from players   order by players.birth_date desc limit 1;	SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
0	select players.first_name , players.country_code from matches join players on matches.winner_id = players.player_id   order by matches.winner_age desc limit 1;	SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
1	select players.first_name , players.last_name from players   order by players.birth_date asc;	SELECT first_name ,  last_name FROM players ORDER BY birth_date
1	select players.first_name , players.last_name from players   order by players.birth_date asc;	SELECT first_name ,  last_name FROM players ORDER BY birth_date
0	select players.first_name , players.last_name from players where  players.hand = "left"   order by players.birth_date asc;	SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
0	select players.first_name , players.last_name from players where  players.hand = "left"   order by players.birth_date asc;	SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
0	select players.first_name , players.country_code from rankings join players on rankings.player_id = players.player_id  group by rankings.player_id  order by count(*) desc limit 1;	SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
0	select players.first_name , players.country_code from rankings join players on rankings.player_id = players.player_id  group by rankings.player_id  order by count(*) desc limit 1;	SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
1	select matches.year from matches  group by matches.year  order by count(*) desc limit 1;	SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
1	select matches.year from matches  group by matches.year  order by count(*) desc limit 1;	SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
1	select matches.winner_name , matches.winner_rank_points from matches  group by matches.winner_name  order by count(*) desc limit 1;	SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
1	select matches.winner_name , matches.winner_rank_points from matches  group by matches.winner_name  order by count(*) desc limit 1;	SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
1	select matches.winner_name from matches where  matches.tourney_name = "Australian Open"   order by matches.winner_rank_points desc limit 1;	SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
1	select matches.winner_name from matches where  matches.tourney_name = "Australian Open"   order by matches.winner_rank_points desc limit 1;	SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
1	select matches.loser_name , matches.winner_name from matches   order by matches.minutes desc limit 1;	SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
1	select matches.winner_name , matches.loser_name from matches   order by matches.minutes desc limit 1;	SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
1	select players.first_name , avg(rankings.ranking) from rankings join players on rankings.player_id = players.player_id  group by players.first_name;	SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
1	select players.first_name , avg(rankings.ranking) from rankings join players on rankings.player_id = players.player_id  group by players.first_name;	SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
1	select sum(rankings.ranking_points) , players.first_name from rankings join players on rankings.player_id = players.player_id  group by players.first_name;	SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
1	select players.first_name , sum(rankings.ranking_points) from rankings join players on rankings.player_id = players.player_id  group by players.first_name;	SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
1	select players.country_code , count(*) from players  group by players.country_code;	SELECT count(*) ,  country_code FROM players GROUP BY country_code
1	select players.country_code , count(*) from players  group by players.country_code;	SELECT count(*) ,  country_code FROM players GROUP BY country_code
1	select players.country_code from players  group by players.country_code  order by count(*) desc limit 1;	SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
1	select players.country_code from players  group by players.country_code  order by count(*) desc limit 1;	SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
1	select players.country_code from players  group by players.country_code having  count(*) > 50;	SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
1	select players.country_code from players  group by players.country_code having  count(*) > 50;	SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
1	select sum(rankings.tours) , rankings.ranking_date from rankings  group by rankings.ranking_date;	SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
1	select rankings.ranking_date , sum(rankings.tours) from rankings  group by rankings.ranking_date;	SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
1	select matches.year , count(*) from matches  group by matches.year;	SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
1	select matches.year , count(*) from matches  group by matches.year;	SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
0	select matches.winner_name , matches.winner_rank from matches   order by matches.winner_age asc limit 3;	SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
0	select matches.winner_name , matches.winner_rank from matches   order by matches.winner_age asc limit 3;	SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
0	select count(*) from matches join players on matches.winner_id = players.player_id where  matches.tourney_name = "WTA Championships" and players.hand = "left";	SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
0	select count(*) from matches join players on matches.winner_id = players.player_id where  matches.tourney_name = "WTA Championships" and players.hand = "left";	SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
1	select players.first_name , players.country_code , players.birth_date from matches join players on matches.winner_id = players.player_id   order by matches.winner_rank_points desc limit 1;	SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
0	select players.first_name , players.country_code , players.birth_date from matches join players on matches.winner_id = players.player_id  group by players.player_id  order by sum(matches.winner_rank_points) desc limit 1;	SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
1	select players.hand , count(*) from players  group by players.hand;	SELECT count(*) ,  hand FROM players GROUP BY hand
1	select players.hand , count(*) from players  group by players.hand;	SELECT count(*) ,  hand FROM players GROUP BY hand
1	select count(*) from ship where  ship.disposition_of_ship = "Captured";	SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
1	select ship.name , ship.tonnage from ship   order by ship.name desc;	SELECT name ,  tonnage FROM ship ORDER BY name DESC
0	select battle.name , battle.date , battle.result from battle;	SELECT name ,  date FROM battle
0	select max(death.caused_by_ship_id) , min(death.caused_by_ship_id) from death  group by death.caused_by_ship_id;	SELECT max(killed) ,  min(killed) FROM death
0	select death.id , avg(death.injured) from death  group by death.id;	SELECT avg(injured) FROM death
1	select death.injured , death.killed from death join ship on death.caused_by_ship_id = ship.id where  ship.tonnage = "t";	SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
1	select battle.name , battle.result from battle where  battle.bulgarian_commander != "Boril";	SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'
1	select distinct battle.id , battle.name from ship join battle on ship.lost_in_battle = battle.id where  ship.ship_type = "Brig";	SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'
1	select battle.id , battle.name from death join ship on death.caused_by_ship_id = ship.id join battle on ship.lost_in_battle = battle.id  group by battle.id having  sum(death.killed) > 10;	SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10
0	select ship.id , ship.name from death join ship on death.caused_by_ship_id = ship.id  group by ship.id  order by sum(death.injured) desc limit 1;	SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
0	select distinct battle.name from battle where  battle.bulgarian_commander = "Kaloyan" and battle.latin_commander = "Baldwin I";	SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'
1	select count( distinct battle.result) from battle;	SELECT count(DISTINCT RESULT) FROM battle
1	select count(*) from battle where  battle.id not in (select ship.lost_in_battle from ship where  ship.tonnage = "225"  );	SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );
1	select battle.name , battle.date from ship join battle on ship.lost_in_battle = battle.id where  ship.name = "Lettice"   intersect select battle.name , battle.date from ship join battle on ship.lost_in_battle = battle.id where  ship.name = "HMS Atalanta";	SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'
1	select battle.name , battle.result , battle.bulgarian_commander from battle   except select battle.name , battle.result , battle.bulgarian_commander from ship join battle on ship.lost_in_battle = battle.id where  ship.location = "English Channel";	SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
1	select death.note from death where  death.note like "%East%";	SELECT note FROM death WHERE note LIKE '%East%'
0	select * from Addresses where  addresses.line_1 = "1" and addresses.line_2 = "2";	SELECT line_1 ,  line_2 FROM addresses
1	select addresses.line_1 , addresses.line_2 from Addresses;	SELECT line_1 ,  line_2 FROM addresses
1	select count(*) from Courses;	SELECT count(*) FROM Courses
1	select count(*) from Courses;	SELECT count(*) FROM Courses
1	select courses.course_description from Courses where  courses.course_name = "math";	SELECT course_description FROM Courses WHERE course_name  =  'math'
1	select courses.course_description from Courses where  courses.course_name = "math";	SELECT course_description FROM Courses WHERE course_name  =  'math'
1	select addresses.zip_postcode from Addresses where  addresses.city = "Port Chelsea";	SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
1	select addresses.zip_postcode from Addresses where  addresses.city = "Port Chelsea";	SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
1	select departments.department_name , degree_programs.department_id from Degree_Programs join Departments on Degree_Programs.department_id = Departments.department_id  group by degree_programs.department_id  order by count(*) desc limit 1;	SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
1	select departments.department_name , degree_programs.department_id from Degree_Programs join Departments on Degree_Programs.department_id = Departments.department_id  group by degree_programs.department_id  order by count(*) desc limit 1;	select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1
1	select count( distinct degree_programs.department_id) from Degree_Programs;	SELECT count(DISTINCT department_id) FROM Degree_Programs
1	select count( distinct degree_programs.department_id) from Degree_Programs;	SELECT count(DISTINCT department_id) FROM Degree_Programs
1	select count( distinct degree_programs.degree_summary_name) from Degree_Programs;	SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
1	select count( distinct degree_programs.degree_summary_name) from Degree_Programs;	SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
0	select count(*) from Degree_Programs join Departments on Degree_Programs.department_id = Departments.department_id where  departments.department_name = "ENGINEERING";	SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
0	select count(*) from Degree_Programs join Departments on Degree_Programs.department_id = Departments.department_id where  departments.department_name = "Engineering";	SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
1	select sections.section_name , sections.section_description from Sections;	SELECT section_name ,  section_description FROM Sections
1	select sections.section_name , sections.section_description from Sections;	SELECT section_name ,  section_description FROM Sections
1	select courses.course_name , sections.course_id from Sections join Courses on Sections.course_id = Courses.course_id  group by sections.course_id having  count(*) <= 2;	SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
0	select courses.course_name , sections.course_id from Sections join Courses on Sections.course_id = Courses.course_id  group by sections.course_id having  count(*) < 2;	SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
1	select sections.section_name from Sections   order by sections.section_name desc;	SELECT section_name FROM Sections ORDER BY section_name DESC
1	select sections.section_name from Sections   order by sections.section_name desc;	SELECT section_name FROM Sections ORDER BY section_name DESC
1	select semesters.semester_name , student_enrolment.semester_id from Student_Enrolment join Semesters on Student_Enrolment.semester_id = Semesters.semester_id  group by student_enrolment.semester_id  order by count(*) desc limit 1;	SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
1	select semesters.semester_name , student_enrolment.semester_id from Student_Enrolment join Semesters on Student_Enrolment.semester_id = Semesters.semester_id  group by student_enrolment.semester_id  order by count(*) desc limit 1;	SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
0	select departments.department_description from Departments where  departments.department_name like "%the computer%";	SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
1	select departments.department_description from Departments where  departments.department_name like "%computer%";	SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
0	select students.first_name , students.middle_name , students.last_name , student_enrolment.semester_id from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id  group by student_enrolment.semester_id having  count(*) = 2;	SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
1	select students.first_name , students.middle_name , students.last_name , student_enrolment.student_id from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id  group by student_enrolment.student_id having  count(*) = 2;	SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
0	select students.first_name , students.middle_name , students.last_name from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id join Degree_Programs on Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id where  degree_programs.degree_summary_name = "Bachelor";	SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
0	select students.first_name , students.middle_name , students.last_name from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id where  student_enrolment.degree_program_id = "B";	SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
0	select student_enrolment.degree_program_id from Student_Enrolment  group by student_enrolment.degree_program_id  order by count(*) desc limit 1;	SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
1	select degree_programs.degree_summary_name from Student_Enrolment join Degree_Programs on Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id  group by degree_programs.degree_summary_name  order by count(*) desc limit 1;	SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
1	select student_enrolment.degree_program_id , degree_programs.degree_summary_name from Student_Enrolment join Degree_Programs on Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id  group by student_enrolment.degree_program_id  order by count(*) desc limit 1;	SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
1	select student_enrolment.degree_program_id , degree_programs.degree_summary_name from Student_Enrolment join Degree_Programs on Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id  group by student_enrolment.degree_program_id  order by count(*) desc limit 1;	SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
0	select student_enrolment.student_id , students.first_name , students.middle_name , students.last_name , count(*) from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id  group by student_enrolment.student_id  order by count(*) desc limit 1;	SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
0	select students.first_name , students.middle_name , students.last_name , student_enrolment.student_id , count(*) from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id  group by student_enrolment.student_id  order by count(*) desc limit 1;	SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
1	select semesters.semester_name from Semesters where  semesters.semester_id not in (select Student_Enrolment.semester_id from Student_Enrolment  );	SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
1	select semesters.semester_name from Semesters where  semesters.semester_id not in (select Student_Enrolment.semester_id from Student_Enrolment  );	SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
0	select courses.course_name from Student_Enrolment_Courses join Courses on Student_Enrolment_Courses.course_id = Courses.course_id;	SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
1	select distinct courses.course_name from Student_Enrolment_Courses join Courses on Student_Enrolment_Courses.course_id = Courses.course_id;	SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
1	select courses.course_name from Student_Enrolment_Courses join Courses on Student_Enrolment_Courses.course_id = Courses.course_id  group by courses.course_name  order by count(*) desc limit 1;	SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
1	select courses.course_name from Student_Enrolment_Courses join Courses on Student_Enrolment_Courses.course_id = Courses.course_id  group by courses.course_name  order by count(*) desc limit 1;	SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
0	select students.last_name from Students join Addresses on Students.permanent_address_id = Addresses.address_id where  addresses.state_province_county = "North Carolina"   except select students.last_name from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id;	SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
0	select students.last_name from Students join Addresses on Students.permanent_address_id = Addresses.address_id where  addresses.state_province_county = "NC"   except select students.last_name from Student_Enrolment join Students on Student_Enrolment.student_id = Students.student_id;	SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
1	select transcripts.transcript_date , transcripts.transcript_id from Transcript_Contents join Transcripts on Transcript_Contents.transcript_id = Transcripts.transcript_id join Student_Enrolment_Courses on Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id  group by transcripts.transcript_id having  count(*) >= 2;	SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
1	select transcripts.transcript_date , transcripts.transcript_id from Transcript_Contents join Transcripts on Transcript_Contents.transcript_id = Transcripts.transcript_id  group by transcripts.transcript_id having  count(*) >= 2;	SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
1	select students.cell_mobile_number from Students where  students.first_name = "Timmothy" and students.last_name = "Ward";	SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'
0	select students.cell_mobile_number from Students where  students.first_name = "Timmothy" and students.last_name = "Ward";	select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'
1	select students.first_name , students.middle_name , students.last_name from Students   order by students.date_first_registered asc limit 1;	SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
1	select students.first_name , students.middle_name , students.last_name from Students   order by students.date_first_registered asc limit 1;	SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
0	select students.first_name , students.middle_name , students.last_name from Students   order by students.date_first_registered asc limit 1;	SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
0	select students.first_name , students.middle_name , students.last_name from Students   order by students.date_first_registered asc limit 1;	SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
1	select students.first_name from Students where  students.permanent_address_id != students.current_address_id;	SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
1	select students.first_name from Students where  students.permanent_address_id != students.current_address_id;	SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
0	select addresses.address_id , addresses.line_1 , addresses.line_2 from Students join Addresses on Students.permanent_address_id = Addresses.address_id  group by addresses.address_id  order by count(*) desc limit 1;	SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
0	select addresses.address_id , addresses.line_1 , addresses.line_2 from Students join Addresses on Students.permanent_address_id = Addresses.address_id  group by addresses.address_id  order by count(*) desc limit 1;	SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
1	select avg(transcripts.transcript_date) from Transcripts;	SELECT avg(transcript_date) FROM Transcripts
1	select avg(transcripts.transcript_date) from Transcripts;	SELECT avg(transcript_date) FROM Transcripts
1	select transcripts.transcript_date , transcripts.other_details from Transcripts   order by transcripts.transcript_date asc limit 1;	SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
1	select transcripts.transcript_date , transcripts.other_details from Transcripts   order by transcripts.transcript_date asc limit 1;	SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
1	select count(*) from Transcripts;	SELECT count(*) FROM Transcripts
1	select count(*) from Transcripts;	SELECT count(*) FROM Transcripts
1	select transcripts.transcript_date from Transcripts   order by transcripts.transcript_date desc limit 1;	SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
1	select transcripts.transcript_date from Transcripts   order by transcripts.transcript_date desc limit 1;	SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
0	select count( distinct transcripts.transcript_id) , student_enrolment_courses.student_enrolment_id from Transcript_Contents join Transcripts on Transcript_Contents.transcript_id = Transcripts.transcript_id join Student_Enrolment_Courses on Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id  group by transcripts.transcript_id  order by count( distinct transcripts.transcript_id) desc limit 1;	SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
0	select count( distinct transcript_contents.transcript_id) , student_enrolment_courses.student_enrolment_id from Transcript_Contents join Student_Enrolment_Courses on Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id  group by student_enrolment_courses.student_enrolment_id  order by count( distinct transcript_contents.transcript_id) desc limit 1;	SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
0	select transcripts.transcript_date , transcripts.transcript_id from Transcripts  group by transcripts.transcript_id  order by count(*) asc limit 1;	SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
0	select transcripts.transcript_date , transcripts.transcript_id from Transcripts  group by transcripts.transcript_id  order by count(*) asc limit 1;	SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
1	select student_enrolment.semester_id from Student_Enrolment join Degree_Programs on Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id where  degree_programs.degree_summary_name = "Master"   intersect select student_enrolment.semester_id from Student_Enrolment join Degree_Programs on Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id where  degree_programs.degree_summary_name = "Bachelor";	SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
0	select student_enrolment.semester_id from Student_Enrolment where  student_enrolment.degree_program_id = "MA"   intersect select student_enrolment.semester_id from Student_Enrolment where  student_enrolment.degree_program_id = "Bachelor";	SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
1	select count( distinct students.current_address_id) from Students;	SELECT count(DISTINCT current_address_id) FROM Students
0	select distinct addresses.address_id from Students join Addresses on Students.permanent_address_id = Addresses.address_id;	SELECT count(DISTINCT current_address_id) FROM Students
1	select students.other_student_details from Students   order by students.other_student_details desc;	SELECT other_student_details FROM Students ORDER BY other_student_details DESC
1	select students.other_student_details from Students   order by students.other_student_details desc;	SELECT other_student_details FROM Students ORDER BY other_student_details DESC
1	select sections.section_description from Sections where  sections.section_name = "h";	SELECT section_description FROM Sections WHERE section_name  =  'h'
1	select sections.section_description from Sections where  sections.section_name = "h";	SELECT section_description FROM Sections WHERE section_name  =  'h'
0	select students.first_name from Students join Addresses on Students.permanent_address_id = Addresses.address_id where  addresses.country = "Haiti" or students.cell_mobile_number = "09700166582";	select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
0	select students.first_name from Students join Addresses on Students.permanent_address_id = Addresses.address_id where  addresses.country = "Haiti" or students.cell_mobile_number = "09700166582";	select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
1	select cartoon.title from Cartoon   order by cartoon.title asc;	SELECT Title FROM Cartoon ORDER BY title
1	select cartoon.title from Cartoon   order by cartoon.title asc;	SELECT Title FROM Cartoon ORDER BY title
1	select cartoon.title from Cartoon where  cartoon.directed_by = "Ben Jones";	SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
1	select cartoon.title from Cartoon where  cartoon.directed_by = "Ben Jones";	SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
1	select count(*) from Cartoon where  cartoon.written_by = "Joseph Kuhr";	SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
1	select count(*) from Cartoon where  cartoon.written_by = "Joseph Kuhr";	SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
1	select cartoon.title , cartoon.directed_by from Cartoon   order by cartoon.original_air_date asc;	SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
1	select cartoon.title , cartoon.directed_by from Cartoon   order by cartoon.original_air_date asc;	SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
1	select cartoon.title from Cartoon where  cartoon.directed_by = "Ben Jones" or cartoon.directed_by = "Brandon Vietti";	SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
1	select cartoon.title from Cartoon where  cartoon.directed_by = "Ben Jones" or cartoon.directed_by = "Brandon Vietti";	SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
1	select tv_channel.country , count(*) from TV_Channel  group by tv_channel.country  order by count(*) desc limit 1;	SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
1	select tv_channel.country , count(*) from TV_Channel  group by tv_channel.country  order by count(*) desc limit 1;	SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
1	select count( distinct tv_channel.series_name) , count( distinct tv_channel.content) from TV_Channel;	SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
1	select count( distinct tv_channel.series_name) , count( distinct tv_channel.content) from TV_Channel;	SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
1	select tv_channel.content from TV_Channel where  tv_channel.series_name = "Sky Radio";	SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
1	select tv_channel.content from TV_Channel where  tv_channel.series_name = "Sky Radio";	SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
1	select tv_channel.package_option from TV_Channel where  tv_channel.series_name = "Sky Radio";	SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
1	select tv_channel.package_option from TV_Channel where  tv_channel.series_name = "Sky Radio";	SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
1	select count(*) from TV_Channel where  tv_channel.language = "English";	SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
1	select count(*) from TV_Channel where  tv_channel.language = "English";	SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
1	select tv_channel.language , count(*) from TV_Channel  group by tv_channel.language  order by count(*) asc limit 1;	SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
1	select tv_channel.language , count(*) from TV_Channel  group by tv_channel.language  order by count(*) asc limit 1;	SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
1	select tv_channel.language , count(*) from TV_Channel  group by tv_channel.language;	SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
1	select tv_channel.language , count(*) from TV_Channel  group by tv_channel.language;	SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
1	select tv_channel.series_name from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.title = "The Rise of the Blue Beetle!";	SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
1	select tv_channel.series_name from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.title = "The Rise of the Blue Beetle!";	SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
1	select cartoon.title from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  tv_channel.series_name = "Sky Radio";	SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
1	select cartoon.title from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  tv_channel.series_name = "Sky Radio";	SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
1	select tv_series.episode from TV_series   order by tv_series.rating asc;	SELECT Episode FROM TV_series ORDER BY rating
1	select tv_series.episode from TV_series   order by tv_series.rating asc;	SELECT Episode FROM TV_series ORDER BY rating
1	select tv_series.episode , tv_series.rating from TV_series   order by tv_series.rating desc limit 3;	SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
1	select tv_series.episode , tv_series.rating from TV_series   order by tv_series.rating desc limit 3;	SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
1	select min(tv_series.share) , max(tv_series.share) from TV_series;	SELECT max(SHARE) , min(SHARE) FROM TV_series;
1	select max(tv_series.share) , min(tv_series.share) from TV_series;	SELECT max(SHARE) , min(SHARE) FROM TV_series;
1	select tv_series.air_date from TV_series where  tv_series.episode = "A Love of a Lifetime";	SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
1	select tv_series.air_date from TV_series where  tv_series.episode = "A Love of a Lifetime";	SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
1	select tv_series.weekly_rank from TV_series where  tv_series.episode = "A Love of a Lifetime";	SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
1	select tv_series.weekly_rank from TV_series where  tv_series.episode = "A Love of a Lifetime";	SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
1	select tv_channel.series_name from TV_series join TV_Channel on TV_series.Channel = TV_Channel.id where  tv_series.episode = "A Love of a Lifetime";	SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
1	select tv_channel.series_name from TV_series join TV_Channel on TV_series.Channel = TV_Channel.id where  tv_series.episode = "A Love of a Lifetime";	SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
1	select tv_series.episode from TV_series join TV_Channel on TV_series.Channel = TV_Channel.id where  tv_channel.series_name = "Sky Radio";	SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
1	select tv_series.episode from TV_series join TV_Channel on TV_series.Channel = TV_Channel.id where  tv_channel.series_name = "Sky Radio";	SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
1	select cartoon.directed_by , count(*) from Cartoon  group by cartoon.directed_by;	SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
1	select cartoon.directed_by , count(*) from Cartoon  group by cartoon.directed_by;	SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
1	select cartoon.production_code , cartoon.channel from Cartoon   order by cartoon.original_air_date desc limit 1;	select production_code ,  channel from cartoon order by original_air_date desc limit 1
1	select cartoon.production_code , cartoon.channel from Cartoon   order by cartoon.original_air_date desc limit 1;	select production_code ,  channel from cartoon order by original_air_date desc limit 1
0	select tv_channel.package_option , tv_channel.series_name from TV_Channel where  tv_channel.hight_definition_tv = "Yes";	SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
0	select tv_channel.package_option , tv_channel.series_name from TV_Channel where  tv_channel.hight_definition_tv = "Yes";	SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
1	select tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = "Todd Casey";	SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
1	select tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = "Todd Casey";	SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
1	select tv_channel.country from TV_Channel   except select tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = "Todd Casey";	SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
1	select tv_channel.country from TV_Channel   except select tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = "Todd Casey";	SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
1	select tv_channel.series_name , tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = "Ben Jones"   intersect select tv_channel.series_name , tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = "Michael Chang";	SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
1	select tv_channel.series_name , tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = "Ben Jones"   intersect select tv_channel.series_name , tv_channel.country from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = "Michael Chang";	SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
1	select tv_channel.pixel_aspect_ratio_par , tv_channel.country from TV_Channel where  tv_channel.language != "English";	SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
1	select tv_channel.pixel_aspect_ratio_par , tv_channel.country from TV_Channel where  tv_channel.language != "English";	SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
1	select tv_channel.id from TV_Channel  group by tv_channel.country having  count(*) > 2;	SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
0	select tv_channel.id from TV_Channel  group by tv_channel.id having  count(*) > 2;	SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
1	select tv_channel.id from TV_Channel   except select cartoon.channel from Cartoon where  cartoon.directed_by = "Ben Jones";	SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
1	select tv_channel.id from TV_Channel   except select cartoon.channel from Cartoon where  cartoon.directed_by = "Ben Jones";	SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
0	select tv_channel.package_option from TV_Channel   except select tv_channel.package_option from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = "Ben Jones";	SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
0	select tv_channel.package_option from TV_Channel   except select tv_channel.package_option from Cartoon join TV_Channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = "Ben Jones";	SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
1	select count(*) from poker_player;	SELECT count(*) FROM poker_player
1	select count(*) from poker_player;	SELECT count(*) FROM poker_player
1	select poker_player.earnings from poker_player   order by poker_player.earnings desc;	SELECT Earnings FROM poker_player ORDER BY Earnings DESC
1	select poker_player.earnings from poker_player   order by poker_player.earnings desc;	SELECT Earnings FROM poker_player ORDER BY Earnings DESC
1	select poker_player.final_table_made , poker_player.best_finish from poker_player;	SELECT Final_Table_Made ,  Best_Finish FROM poker_player
1	select poker_player.final_table_made , poker_player.best_finish from poker_player;	SELECT Final_Table_Made ,  Best_Finish FROM poker_player
1	select avg(poker_player.earnings) from poker_player;	SELECT avg(Earnings) FROM poker_player
1	select avg(poker_player.earnings) from poker_player;	SELECT avg(Earnings) FROM poker_player
1	select poker_player.money_rank from poker_player   order by poker_player.earnings desc limit 1;	SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
1	select poker_player.money_rank from poker_player   order by poker_player.earnings desc limit 1;	SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
1	select max(poker_player.final_table_made) from poker_player where  poker_player.earnings < 200000;	SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
1	select max(poker_player.final_table_made) from poker_player where  poker_player.earnings < 200000;	SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
1	select people.name from poker_player join people on poker_player.People_ID = people.People_ID;	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
1	select people.name from poker_player join people on poker_player.People_ID = people.People_ID;	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
1	select people.name from poker_player join people on poker_player.People_ID = people.People_ID where  poker_player.earnings > 300000;	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
1	select people.name from poker_player join people on poker_player.People_ID = people.People_ID where  poker_player.earnings > 300000;	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
1	select people.name from poker_player join people on poker_player.People_ID = people.People_ID   order by poker_player.final_table_made asc;	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
1	select people.name from poker_player join people on poker_player.People_ID = people.People_ID   order by poker_player.final_table_made asc;	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
1	select people.birth_date from poker_player join people on poker_player.People_ID = people.People_ID   order by poker_player.earnings asc limit 1;	SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
1	select people.birth_date from poker_player join people on poker_player.People_ID = people.People_ID   order by poker_player.earnings asc limit 1;	SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
1	select poker_player.money_rank from poker_player join people on poker_player.People_ID = people.People_ID   order by people.height desc limit 1;	SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
1	select poker_player.money_rank from poker_player join people on poker_player.People_ID = people.People_ID   order by people.height desc limit 1;	SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
1	select avg(poker_player.earnings) from poker_player join people on poker_player.People_ID = people.People_ID where  people.height > 200;	SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
1	select avg(poker_player.earnings) from poker_player join people on poker_player.People_ID = people.People_ID where  people.height > 200;	SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
1	select people.name from poker_player join people on poker_player.People_ID = people.People_ID   order by poker_player.earnings desc;	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
1	select people.name from poker_player join people on poker_player.People_ID = people.People_ID   order by poker_player.earnings desc;	SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
1	select people.nationality , count(*) from people  group by people.nationality;	SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
1	select people.nationality , count(*) from people  group by people.nationality;	SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
1	select people.nationality from people  group by people.nationality  order by count(*) desc limit 1;	SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
1	select people.nationality from people  group by people.nationality  order by count(*) desc limit 1;	SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
1	select people.nationality from people  group by people.nationality having  count(*) >= 2;	SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
1	select people.nationality from people  group by people.nationality having  count(*) >= 2;	SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
1	select people.name , people.birth_date from people   order by people.name asc;	SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
1	select people.name , people.birth_date from people   order by people.name asc;	SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
1	select people.name from people where  people.nationality != "Russia";	SELECT Name FROM people WHERE Nationality != "Russia"
1	select people.name from people where  people.nationality != "Russia";	SELECT Name FROM people WHERE Nationality != "Russia"
0	select people.name from people   except select people.name from poker_player join people on poker_player.People_ID = people.People_ID;	SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
0	select people.name from people   except select people.name from poker_player join people on poker_player.People_ID = people.People_ID;	SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
1	select count( distinct people.nationality) from people;	SELECT count(DISTINCT Nationality) FROM people
1	select count( distinct people.nationality) from people;	SELECT count(DISTINCT Nationality) FROM people
1	select count(*) from AREA_CODE_STATE;	SELECT count(*) FROM area_code_state
1	select contestants.contestant_number , contestants.contestant_name from CONTESTANTS   order by contestants.contestant_name desc;	SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC
1	select votes.vote_id , votes.phone_number , votes.state from VOTES;	SELECT vote_id ,  phone_number ,  state FROM votes
1	select max(area_code_state.area_code) , min(area_code_state.area_code) from AREA_CODE_STATE;	SELECT max(area_code) ,  min(area_code) FROM area_code_state
0	select votes.created from VOTES where  votes.state = "CA"   order by votes.created desc limit 1;	SELECT max(created) FROM votes WHERE state  =  'CA'
1	select contestants.contestant_name from CONTESTANTS where  contestants.contestant_name != "Jessie Alloway";	SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
1	select distinct votes.state , votes.created from VOTES;	SELECT DISTINCT state ,  created FROM votes
1	select contestants.contestant_number , contestants.contestant_name from VOTES join CONTESTANTS on VOTES.contestant_number = CONTESTANTS.contestant_number  group by votes.contestant_number having  count(*) >= 2;	SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2
1	select contestants.contestant_number , contestants.contestant_name from VOTES join CONTESTANTS on VOTES.contestant_number = CONTESTANTS.contestant_number  group by votes.contestant_number  order by count(*) asc limit 1;	SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1
1	select count(*) from VOTES where  votes.state = "NY" or votes.state = "CA";	SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'
1	select count(*) from CONTESTANTS where  contestants.contestant_number not in (select VOTES.contestant_number from VOTES  );	SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )
1	select area_code_state.area_code from VOTES join AREA_CODE_STATE on VOTES.state = AREA_CODE_STATE.state  group by area_code_state.area_code  order by count(*) desc limit 1;	SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1
1	select votes.created , votes.state , votes.phone_number from VOTES join CONTESTANTS on VOTES.contestant_number = CONTESTANTS.contestant_number where  contestants.contestant_name = "Tabatha Gehling";	SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'
1	select area_code_state.area_code from VOTES join CONTESTANTS on VOTES.contestant_number = CONTESTANTS.contestant_number join AREA_CODE_STATE on VOTES.state = AREA_CODE_STATE.state where  contestants.contestant_name = "Tabatha Gehling"   intersect select area_code_state.area_code from VOTES join CONTESTANTS on VOTES.contestant_number = CONTESTANTS.contestant_number join AREA_CODE_STATE on VOTES.state = AREA_CODE_STATE.state where  contestants.contestant_name = "Kelly Clauss";	SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
1	select contestants.contestant_name from CONTESTANTS where  contestants.contestant_name like "%Al%";	select contestant_name from contestants where contestant_name like "%al%"
1	select country.name from country where  country.indepyear > 1950;	SELECT Name FROM country WHERE IndepYear  >  1950
1	select country.name from country where  country.indepyear > 1950;	SELECT Name FROM country WHERE IndepYear  >  1950
1	select count(*) from country where  country.governmentform = "Republic";	SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
1	select count(*) from country where  country.governmentform = "Republic";	SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
1	select sum(country.surfacearea) from country where  country.region = "Caribbean";	SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
0	select sum(country.surfacearea) from country where  country.region = "Carribean"  group by country.region;	SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
1	select country.continent from country where  country.name = "Anguilla";	SELECT Continent FROM country WHERE Name  =  "Anguilla"
1	select country.continent from country where  country.name = "Anguilla";	SELECT Continent FROM country WHERE Name  =  "Anguilla"
1	select country.region from city join country on city.CountryCode = country.Code where  city.name = "Kabul";	SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
1	select country.region from city join country on city.CountryCode = country.Code where  city.name = "Kabul";	SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
1	select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.name = "Aruba"   order by countrylanguage.percentage desc limit 1;	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
0	select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.name = "Aruba"  group by countrylanguage.language  order by count(*) desc limit 1;	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
1	select country.population , country.lifeexpectancy from country where  country.name = "Brazil";	SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
1	select country.population , country.lifeexpectancy from country where  country.name = "Brazil";	SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
1	select country.region , country.population from country where  country.name = "Angola";	SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
1	select country.region , country.population from country where  country.name = "Angola";	SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
1	select avg(country.lifeexpectancy) from country where  country.region = "Central Africa";	SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
1	select avg(country.lifeexpectancy) from country where  country.region = "Central Africa";	SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
1	select country.name from country where  country.continent = "Asia"   order by country.lifeexpectancy asc limit 1;	SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
1	select country.name from country where  country.continent = "Asia"   order by country.lifeexpectancy asc limit 1;	SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
1	select sum(country.population) , max(country.gnp) from country where  country.continent = "Asia";	SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
0	select country.population , country.gnp from country where  country.continent = "Asia"   order by country.gnp desc limit 1;	SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
1	select avg(country.lifeexpectancy) from country where  country.governmentform = "Republic" and country.continent = "Africa";	SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
1	select avg(country.lifeexpectancy) from country where  country.continent = "Africa" and country.governmentform = "Republic";	SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
1	select sum(country.surfacearea) from country where  country.continent = "Asia" or country.continent = "Europe";	SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
1	select sum(country.surfacearea) from country where  country.continent = "Asia" or country.continent = "Europe";	SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
1	select sum(city.population) from city where  city.district = "Gelderland";	SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
1	select sum(city.population) from city where  city.district = "Gelderland";	SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
1	select avg(country.gnp) , sum(country.population) from country where  country.governmentform = "US Territory";	SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
1	select avg(country.gnp) , sum(country.population) from country where  country.governmentform = "US Territory";	SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
1	select count( distinct countrylanguage.language) from countrylanguage;	SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
1	select count( distinct countrylanguage.language) from countrylanguage;	SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
1	select count( distinct country.governmentform) from country where  country.continent = "Africa";	SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
1	select count( distinct country.governmentform) from country where  country.continent = "Africa";	SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
0	select count( distinct countrylanguage.language) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.name = "Aruba";	SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
0	select count( distinct countrylanguage.language) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.name = "Aruba";	SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
0	select count( distinct countrylanguage.isofficial) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.name = "Afghanistan";	SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
0	select count( distinct countrylanguage.isofficial) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.name = "Afghanistan";	SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
1	select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by country.name  order by count(*) desc limit 1;	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
1	select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by country.name  order by count(*) desc limit 1;	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
1	select country.continent from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by country.continent  order by count(*) desc limit 1;	SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
1	select country.continent from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by country.continent  order by count(*) desc limit 1;	SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
0	select count(*) from countrylanguage where  countrylanguage.countrycode in (select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = "English"   intersect select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = "Dutch"   );	SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
0	select count(*) from countrylanguage where  countrylanguage.countrycode in (select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = "English"   intersect select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = "Dutch"   );	SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
1	select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "English"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "French";	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
1	select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "English"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "French";	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
0	select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "English"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "French";	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
0	select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "English"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "French";	SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
1	select count( distinct country.continent) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "Chinese";	SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
0	select count(*) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "Chinese";	SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
0	select country.region from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "English" or countrylanguage.language = "Dutch";	SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
0	select country.region from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = "Dutch" or countrylanguage.language = "English";	SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
0	select countrylanguage.countrycode from countrylanguage where  countrylanguage.language = "English" or countrylanguage.language = "Dutch";	select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t"
0	select countrylanguage.countrycode from countrylanguage where  countrylanguage.language = "English" or countrylanguage.language = "Dutch";	SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"
1	select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.continent = "Asia"  group by countrylanguage.language  order by count(*) desc limit 1;	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
1	select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.continent = "Asia"  group by countrylanguage.language  order by count(*) desc limit 1;	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
1	select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.governmentform = "Republic"  group by countrylanguage.language having  count(*) = 1;	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
1	select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.governmentform = "Republic"  group by countrylanguage.language having  count(*) = 1;	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
0	select city.population from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = "English"   order by city.population desc limit 1;	SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
0	select city.population from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = "English"   order by city.population desc limit 1;	SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
1	select country.name , country.population , country.lifeexpectancy from country where  country.continent = "Asia"   order by country.surfacearea desc limit 1;	SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
1	select country.name , country.population , country.lifeexpectancy from country where  country.continent = "Asia"   order by country.surfacearea desc limit 1;	SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
0	select avg(country.lifeexpectancy) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != "English";	SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
0	select avg(country.lifeexpectancy) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != "English";	SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
0	select sum(country.population) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != "English";	SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
0	select sum(country.population) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != "English";	SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
0	select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.headofstate = "Beatrix";	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
0	select countrylanguage.isofficial from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.headofstate = "Beatrix";	SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
0	select count( distinct countrylanguage.isofficial) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.indepyear < 1930;	SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
0	select count( distinct countrylanguage.isofficial) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.indepyear < 1930;	SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
0	select country.name from country where  country.surfacearea > (select max(country.surfacearea) from country where  country.continent = "Europe"  );	SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
0	select country.name from country where  country.surfacearea > (select max(country.surfacearea) from country where  country.continent = "Europe"  );	SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
0	select country.name from country where  country.population < (select max(country.population) from country where  country.continent = "Africa"  );	SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")
0	select country.name from country where  country.population < (select max(country.population) from country where  country.continent = "Africa"  );	SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")
0	select country.name from country where  country.population > (select max(country.population) from country where  country.continent = "Africa"  );	SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")
0	select country.name from country where  country.population > (select max(country.population) from country where  country.continent = "Africa"  );	SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")
0	select countrylanguage.countrycode from countrylanguage where  countrylanguage.language != "English";	SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
0	select country.code from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != "English";	SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
0	select countrylanguage.countrycode from countrylanguage where  countrylanguage.language != "English";	SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
0	select countrylanguage.countrycode from countrylanguage where  countrylanguage.language != "English";	SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
1	select country.code from country where  country.governmentform != "Republic"   except select countrylanguage.countrycode from countrylanguage where  countrylanguage.language = "English";	SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
1	select country.code from country where  country.governmentform != "Republic"   except select countrylanguage.countrycode from countrylanguage where  countrylanguage.language = "English";	SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
0	select city.name from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  country.continent = "Europe" and countrylanguage.language != "English";	SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
0	select city.name from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  country.continent = "Europe" and countrylanguage.language != "English";	SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
0	select distinct city.name from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  country.continent = "Asia" and countrylanguage.language = "Chinese";	select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  "asia"
0	select distinct city.name from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  country.continent = "Asia" and countrylanguage.language = "Chinese";	SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"
1	select country.name , country.indepyear , country.surfacearea from country   order by country.population asc limit 1;	SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
1	select country.name , country.indepyear , country.surfacearea from country   order by country.population asc limit 1;	SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
1	select country.population , country.name , country.headofstate from country   order by country.surfacearea desc limit 1;	SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
1	select country.name , country.population , country.headofstate from country   order by country.surfacearea desc limit 1;	SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
1	select country.name , count(*) from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by country.name having  count(*) >= 3;	SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
1	select country.name , count(*) from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by country.name having  count(*) > 2;	SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
1	select count(*) , city.district from city where  city.population > (select avg(city.population) from city  )  group by city.district;	SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
1	select count(*) , city.district from city where  city.population > (select avg(city.population) from city  )  group by city.district;	SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
1	select country.governmentform , sum(country.population) from country  group by country.governmentform having  avg(country.lifeexpectancy) > 72;	SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
1	select country.governmentform , sum(country.population) from country  group by country.governmentform having  avg(country.lifeexpectancy) > 72;	SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
1	select avg(country.lifeexpectancy) , sum(country.population) , country.continent from country  group by country.continent having  avg(country.lifeexpectancy) < 72;	SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
1	select country.continent , sum(country.population) , avg(country.lifeexpectancy) from country  group by country.continent having  avg(country.lifeexpectancy) < 72;	SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
1	select country.name , country.surfacearea from country   order by country.surfacearea desc limit 5;	SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
0	select country.name , country.surfacearea from country   order by country.population desc limit 5;	SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
1	select country.name from country   order by country.population desc limit 3;	SELECT Name FROM country ORDER BY Population DESC LIMIT 3
1	select country.name from country   order by country.population desc limit 3;	SELECT Name FROM country ORDER BY Population DESC LIMIT 3
1	select country.name from country   order by country.population asc limit 3;	SELECT Name FROM country ORDER BY Population ASC LIMIT 3
1	select country.name from country   order by country.population asc limit 3;	SELECT Name FROM country ORDER BY Population ASC LIMIT 3
1	select count(*) from country where  country.continent = "Asia";	SELECT count(*) FROM country WHERE continent  =  "Asia"
1	select count(*) from country where  country.continent = "Asia";	SELECT count(*) FROM country WHERE continent  =  "Asia"
1	select country.name from country where  country.continent = "Europe" and country.population = 80000;	SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
1	select country.name from country where  country.continent = "Europe" and country.population = 80000;	SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
0	select avg(country.surfacearea) , sum(country.population) from country where  country.continent = "North America" and country.surfacearea > 3000;	select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
0	select sum(country.population) , avg(country.surfacearea) from country where  country.continent = "North America" and country.surfacearea > 3000;	select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
1	select city.name from city where  city.population between 160000 and 900000;	SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000
1	select city.name from city where  city.population between 160000 and 900000;	select name from city where population between 160000 and 900000
1	select countrylanguage.language from countrylanguage  group by countrylanguage.language  order by count(*) desc limit 1;	SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
1	select countrylanguage.language from countrylanguage  group by countrylanguage.language  order by count(*) desc limit 1;	SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
0	select countrylanguage.language from countrylanguage   order by countrylanguage.percentage desc limit 1;	SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
0	select countrylanguage.countrycode , max(countrylanguage.percentage) from countrylanguage  group by countrylanguage.countrycode;	SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
0	select count(*) from countrylanguage where  countrylanguage.language = "Spanish"   order by countrylanguage.percentage desc limit 1;	SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
0	select count(*) from countrylanguage where  countrylanguage.language = "Spanish";	SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
0	select countrylanguage.countrycode from countrylanguage where  countrylanguage.language = "Spanish"   order by countrylanguage.percentage desc limit 1;	SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
0	select countrylanguage.countrycode from countrylanguage where  countrylanguage.language = "Spanish"  group by countrylanguage.countrycode;	SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
1	select count(*) from conductor;	SELECT count(*) FROM conductor
1	select count(*) from conductor;	SELECT count(*) FROM conductor
1	select conductor.name from conductor   order by conductor.age asc;	SELECT Name FROM conductor ORDER BY Age ASC
1	select conductor.name from conductor   order by conductor.age asc;	SELECT Name FROM conductor ORDER BY Age ASC
1	select conductor.name from conductor where  conductor.nationality != "USA";	SELECT Name FROM conductor WHERE Nationality != 'USA'
1	select conductor.name from conductor where  conductor.nationality != "USA";	SELECT Name FROM conductor WHERE Nationality != 'USA'
1	select orchestra.record_company from orchestra   order by orchestra.year_of_founded desc;	SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
1	select orchestra.record_company from orchestra   order by orchestra.year_of_founded desc;	SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
1	select avg(show.attendance) from show;	SELECT avg(Attendance) FROM SHOW
1	select avg(show.attendance) from show;	SELECT avg(Attendance) FROM SHOW
1	select max(performance.share) , min(performance.share) from performance where  performance.type != "Live final";	SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
1	select max(performance.share) , min(performance.share) from performance where  performance.type != "Live final";	SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
1	select count( distinct conductor.nationality) from conductor;	SELECT count(DISTINCT Nationality) FROM conductor
1	select count( distinct conductor.nationality) from conductor;	SELECT count(DISTINCT Nationality) FROM conductor
1	select conductor.name from conductor   order by conductor.year_of_work desc;	SELECT Name FROM conductor ORDER BY Year_of_Work DESC
1	select conductor.name from conductor   order by conductor.year_of_work desc;	SELECT Name FROM conductor ORDER BY Year_of_Work DESC
1	select conductor.name from conductor   order by conductor.year_of_work desc limit 1;	SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
1	select conductor.name from conductor   order by conductor.year_of_work desc limit 1;	SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
1	select conductor.name , orchestra.orchestra from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID;	SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
1	select conductor.name , orchestra.orchestra from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID;	SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
1	select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID  group by orchestra.conductor_id having  count(*) > 1;	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
1	select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID  group by orchestra.conductor_id having  count(*) > 1;	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
1	select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID  group by orchestra.conductor_id  order by count(*) desc limit 1;	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
1	select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID  group by orchestra.conductor_id  order by count(*) desc limit 1;	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
1	select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008;	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
1	select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008;	SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
1	select orchestra.record_company , count(*) from orchestra  group by orchestra.record_company;	SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
1	select orchestra.record_company , count(*) from orchestra  group by orchestra.record_company;	SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
1	select orchestra.major_record_format from orchestra  group by orchestra.major_record_format  order by count(*) asc;	SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
1	select orchestra.major_record_format from orchestra  group by orchestra.major_record_format  order by count(*) asc;	SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
1	select orchestra.record_company from orchestra  group by orchestra.record_company  order by count(*) desc limit 1;	SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
1	select orchestra.record_company from orchestra  group by orchestra.record_company  order by count(*) desc limit 1;	SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
1	select orchestra.orchestra from orchestra where  orchestra.orchestra_id not in (select performance.Orchestra_ID from performance  );	SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
1	select orchestra.orchestra from orchestra where  orchestra.orchestra_id not in (select performance.Orchestra_ID from performance  );	SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
1	select orchestra.record_company from orchestra where  orchestra.year_of_founded < 2003   intersect select orchestra.record_company from orchestra where  orchestra.year_of_founded > 2003;	SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
1	select orchestra.record_company from orchestra where  orchestra.year_of_founded < 2003   intersect select orchestra.record_company from orchestra where  orchestra.year_of_founded > 2003;	SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
1	select count(*) from orchestra where  orchestra.major_record_format = "CD" or orchestra.major_record_format = "DVD";	SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
1	select count(*) from orchestra where  orchestra.major_record_format = "CD" or orchestra.major_record_format = "DVD";	SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
1	select orchestra.year_of_founded from performance join orchestra on performance.Orchestra_ID = orchestra.Orchestra_ID  group by performance.orchestra_id having  count(*) > 1;	SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
1	select orchestra.year_of_founded from performance join orchestra on performance.Orchestra_ID = orchestra.Orchestra_ID  group by performance.orchestra_id having  count(*) > 1;	SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
1	select count(*) from Highschooler;	SELECT count(*) FROM Highschooler
1	select count(*) from Highschooler;	SELECT count(*) FROM Highschooler
1	select highschooler.name , highschooler.grade from Highschooler;	SELECT name ,  grade FROM Highschooler
1	select highschooler.name , highschooler.grade from Highschooler;	SELECT name ,  grade FROM Highschooler
0	select distinct highschooler.grade from Highschooler;	SELECT grade FROM Highschooler
1	select highschooler.grade from Highschooler;	SELECT grade FROM Highschooler
1	select highschooler.grade from Highschooler where  highschooler.name = "Kyle";	SELECT grade FROM Highschooler WHERE name  =  "Kyle"
1	select highschooler.grade from Highschooler where  highschooler.name = "Kyle";	SELECT grade FROM Highschooler WHERE name  =  "Kyle"
1	select highschooler.name from Highschooler where  highschooler.grade = 10;	SELECT name FROM Highschooler WHERE grade  =  10
1	select highschooler.name from Highschooler where  highschooler.grade = 10;	SELECT name FROM Highschooler WHERE grade  =  10
1	select highschooler.id from Highschooler where  highschooler.name = "Kyle";	SELECT ID FROM Highschooler WHERE name  =  "Kyle"
1	select highschooler.id from Highschooler where  highschooler.name = "Kyle";	SELECT ID FROM Highschooler WHERE name  =  "Kyle"
1	select count(*) from Highschooler where  highschooler.grade = 9 or highschooler.grade = 10;	SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
1	select count(*) from Highschooler where  highschooler.grade = 9 or highschooler.grade = 10;	SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
1	select highschooler.grade , count(*) from Highschooler  group by highschooler.grade;	SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
1	select count(*) , highschooler.grade from Highschooler  group by highschooler.grade;	SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
1	select highschooler.grade from Highschooler  group by highschooler.grade  order by count(*) desc limit 1;	SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
1	select highschooler.grade from Highschooler  group by highschooler.grade  order by count(*) desc limit 1;	SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
1	select highschooler.grade from Highschooler  group by highschooler.grade having  count(*) >= 4;	SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
1	select highschooler.grade from Highschooler  group by highschooler.grade having  count(*) >= 4;	SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
1	select friend.student_id , count(*) from Friend  group by friend.student_id;	SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
1	select count(*) , friend.student_id from Friend  group by friend.student_id;	SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
0	select highschooler.name , count(*) from Friend join Highschooler on Friend.friend_id = Highschooler.ID  group by friend.student_id;	SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
0	select highschooler.name , count(*) from Friend join Highschooler on Friend.friend_id = Highschooler.ID  group by highschooler.name;	SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
0	select highschooler.name from Friend join Highschooler on Friend.friend_id = Highschooler.ID  group by friend.friend_id  order by count(*) desc limit 1;	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
0	select highschooler.name from Friend join Highschooler on Friend.friend_id = Highschooler.ID  group by friend.student_id  order by count(*) desc limit 1;	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
0	select highschooler.name from Friend join Highschooler on Friend.friend_id = Highschooler.ID  group by friend.friend_id having  count(*) >= 3;	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
0	select highschooler.name from Friend join Highschooler on Friend.friend_id = Highschooler.ID  group by friend.friend_id having  count(*) >= 3;	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
0	select highschooler.name from Highschooler where  highschooler.name = "Kyle";	SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
0	select friend.friend_id from Friend join Highschooler on Friend.friend_id = Highschooler.ID where  highschooler.name = "Kyle";	SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
0	select count( distinct friend.friend_id) from Friend join Highschooler on Friend.friend_id = Highschooler.ID where  highschooler.name = "Kyle";	SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
0	select count( distinct friend.friend_id) from Friend join Highschooler on Friend.friend_id = Highschooler.ID where  highschooler.name = "Kyle";	SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
1	select highschooler.id from Highschooler   except select friend.student_id from Friend;	SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
1	select highschooler.id from Highschooler   except select friend.student_id from Friend;	SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
0	select highschooler.name from Highschooler where  highschooler.id not in (select Friend.friend_id from Friend  );	SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
0	select highschooler.name from Highschooler where  highschooler.id not in (select Friend.friend_id from Friend  );	SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
0	select highschooler.id from Highschooler   intersect select likes.student_id from Likes;	SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
0	select friend.student_id from Friend   intersect select likes.student_id from Likes;	SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
0	select highschooler.name from Highschooler   intersect select highschooler.name from Likes join Highschooler on Likes.student_id = Highschooler.ID;	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
0	select highschooler.name from Highschooler   intersect select highschooler.name from Likes join Highschooler on Likes.student_id = Highschooler.ID;	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
1	select count(*) , likes.student_id from Likes  group by likes.student_id;	SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
1	select likes.student_id , count(*) from Likes  group by likes.student_id;	SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
1	select highschooler.name , count(*) from Likes join Highschooler on Likes.student_id = Highschooler.ID  group by likes.student_id;	SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
1	select highschooler.name , count(*) from Likes join Highschooler on Likes.student_id = Highschooler.ID  group by likes.student_id;	SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
1	select highschooler.name from Likes join Highschooler on Likes.student_id = Highschooler.ID  group by likes.student_id  order by count(*) desc limit 1;	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
1	select highschooler.name from Likes join Highschooler on Likes.student_id = Highschooler.ID  group by likes.student_id  order by count(*) desc limit 1;	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
1	select highschooler.name from Likes join Highschooler on Likes.student_id = Highschooler.ID  group by likes.student_id having  count(*) >= 2;	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
1	select highschooler.name from Likes join Highschooler on Likes.student_id = Highschooler.ID  group by likes.student_id having  count(*) >= 2;	SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
0	select highschooler.name from Friend join Highschooler on Friend.friend_id = Highschooler.ID where  highschooler.grade > 5  group by friend.student_id having  count(*) >= 2;	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
0	select highschooler.name from Friend join Highschooler on Friend.friend_id = Highschooler.ID where  highschooler.grade > 5  group by friend.friend_id having  count(*) >= 2;	SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
1	select count(*) from Likes join Highschooler on Likes.student_id = Highschooler.ID where  highschooler.name = "Kyle";	SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
1	select count(*) from Likes join Highschooler on Likes.student_id = Highschooler.ID where  highschooler.name = "Kyle";	SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
0	select avg(highschooler.grade) from Friend join Highschooler on Friend.friend_id = Highschooler.ID;	SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
0	select avg(highschooler.grade) from Friend join Highschooler on Friend.friend_id = Highschooler.ID;	SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
0	select min(highschooler.grade) from Highschooler where  highschooler.id not in (select Friend.friend_id from Friend  );	SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
0	select min(highschooler.grade) from Highschooler where  highschooler.id not in (select Friend.friend_id from Friend  );	SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
1	select owners.state from Owners   intersect select professionals.state from Professionals;	SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
1	select owners.state from Owners   intersect select professionals.state from Professionals;	SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
0	select avg(dogs.age) from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id;	SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
0	select avg(dogs.age) from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id;	SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
1	select professionals.professional_id , professionals.last_name , professionals.cell_number from Professionals where  professionals.state = "Indiana"   union select professionals.professional_id , professionals.last_name , professionals.cell_number from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id  group by treatments.professional_id having  count(*) > 2;	SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
1	select professionals.professional_id , professionals.last_name , professionals.cell_number from Professionals where  professionals.state = "Indiana"   union select professionals.professional_id , professionals.last_name , professionals.cell_number from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id  group by treatments.professional_id having  count(*) > 2;	SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
0	select dogs.name from Dogs   except select dogs.name from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id where  treatments.cost_of_treatment > 1000;	select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
0	select dogs.name from Dogs   except select dogs.name from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id where  treatments.cost_of_treatment > 1000;	select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
0	select professionals.first_name from Dogs join Owners on Dogs.owner_id = Owners.owner_id join Treatments on Dogs.dog_id = Treatments.dog_id join Professionals on Treatments.professional_id = Professionals.professional_id   union select professionals.first_name from Dogs join Owners on Dogs.owner_id = Owners.owner_id join Treatments on Dogs.dog_id = Treatments.dog_id join Professionals on Treatments.professional_id = Professionals.professional_id;	SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
0	select professionals.first_name from Dogs join Owners on Dogs.owner_id = Owners.owner_id join Treatments on Dogs.dog_id = Treatments.dog_id join Professionals on Treatments.professional_id = Professionals.professional_id   union select professionals.first_name from Dogs join Owners on Dogs.owner_id = Owners.owner_id join Treatments on Dogs.dog_id = Treatments.dog_id join Professionals on Treatments.professional_id = Professionals.professional_id;	SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
1	select professionals.professional_id , professionals.role_code , professionals.email_address from Professionals   except select professionals.professional_id , professionals.role_code , professionals.email_address from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id;	SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
1	select professionals.professional_id , professionals.role_code , professionals.email_address from Professionals   except select professionals.professional_id , professionals.role_code , professionals.email_address from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id;	SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
1	select owners.owner_id , owners.first_name , owners.last_name from Dogs join Owners on Dogs.owner_id = Owners.owner_id  group by dogs.owner_id  order by count(*) desc limit 1;	SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
1	select owners.owner_id , owners.first_name , owners.last_name from Dogs join Owners on Dogs.owner_id = Owners.owner_id  group by dogs.owner_id  order by count(*) desc limit 1;	SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
1	select professionals.professional_id , professionals.role_code , professionals.first_name from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id  group by treatments.professional_id having  count(*) >= 2;	SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
1	select professionals.professional_id , professionals.role_code , professionals.first_name from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id  group by treatments.professional_id having  count(*) >= 2;	SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
1	select breeds.breed_name from Dogs join Breeds on Dogs.breed_code = Breeds.breed_code  group by breeds.breed_name  order by count(*) desc limit 1;	SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
1	select breeds.breed_name from Dogs join Breeds on Dogs.breed_code = Breeds.breed_code  group by breeds.breed_name  order by count(*) desc limit 1;	SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
0	select owners.owner_id , owners.last_name from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id join Owners on Dogs.owner_id = Owners.owner_id  group by owners.owner_id  order by sum(treatments.cost_of_treatment) desc limit 1;	SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
0	select owners.owner_id , owners.last_name from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id join Owners on Dogs.owner_id = Owners.owner_id  group by dogs.owner_id  order by sum(treatments.cost_of_treatment) desc limit 1;	SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
1	select treatment_types.treatment_type_description from Treatments join Treatment_Types on Treatments.treatment_type_code = Treatment_Types.treatment_type_code  group by treatments.treatment_type_code  order by sum(treatments.cost_of_treatment) asc limit 1;	SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
1	select treatment_types.treatment_type_description from Treatments join Treatment_Types on Treatments.treatment_type_code = Treatment_Types.treatment_type_code  group by treatments.treatment_type_code  order by sum(treatments.cost_of_treatment) asc limit 1;	SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
0	select dogs.owner_id , owners.zip_code from charges join dogs join owners  group by dogs.owner_id  order by sum(charges.charge_amount) desc limit 1;	SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
1	select dogs.owner_id , owners.zip_code from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id join Owners on Dogs.owner_id = Owners.owner_id  group by dogs.owner_id  order by sum(treatments.cost_of_treatment) desc limit 1;	SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
1	select treatments.professional_id , professionals.cell_number from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id  group by treatments.professional_id having  count(*) >= 2;	SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
1	select professionals.professional_id , professionals.cell_number from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id  group by treatments.professional_id having  count(*) >= 2;	SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
0	select professionals.first_name , professionals.last_name from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id where  treatments.cost_of_treatment < (select avg(Treatments.cost_of_treatment) from Treatments  );	SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
0	select professionals.first_name , professionals.last_name from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id where  treatments.cost_of_treatment < (select avg(Treatments.cost_of_treatment) from Treatments  );	SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
1	select treatments.date_of_treatment , professionals.first_name from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id;	SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
1	select treatments.date_of_treatment , professionals.first_name from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id;	SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
1	select treatments.cost_of_treatment , treatment_types.treatment_type_description from Treatments join Treatment_Types on Treatments.treatment_type_code = Treatment_Types.treatment_type_code;	SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
1	select treatments.cost_of_treatment , treatment_types.treatment_type_description from Treatments join Treatment_Types on Treatments.treatment_type_code = Treatment_Types.treatment_type_code;	SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
1	select owners.first_name , owners.last_name , dogs.size_code from Dogs join Owners on Dogs.owner_id = Owners.owner_id;	SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
1	select owners.first_name , owners.last_name , dogs.size_code from Dogs join Owners on Dogs.owner_id = Owners.owner_id;	SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
1	select owners.first_name , dogs.name from Dogs join Owners on Dogs.owner_id = Owners.owner_id;	SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
1	select owners.first_name , dogs.name from Dogs join Owners on Dogs.owner_id = Owners.owner_id;	SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
0	select dogs.name , treatments.date_of_treatment from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id   order by dogs.breed_code asc limit 1;	SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
0	select dogs.name , treatments.date_of_treatment from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id  group by dogs.dog_id  order by count(*) asc limit 1;	SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
1	select owners.first_name , dogs.name from Dogs join Owners on Dogs.owner_id = Owners.owner_id where  owners.state = "Virginia";	SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
1	select owners.first_name , dogs.name from Dogs join Owners on Dogs.owner_id = Owners.owner_id where  owners.state = "Virginia";	SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
0	select dogs.date_arrived , dogs.date_departed from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id;	SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
0	select dogs.date_arrived , dogs.date_departed from Treatments join Dogs on Treatments.dog_id = Dogs.dog_id;	SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
0	select owners.last_name from Dogs join Owners on Dogs.owner_id = Owners.owner_id   order by dogs.age asc limit 1;	SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
0	select owners.last_name from Dogs join Owners on Dogs.owner_id = Owners.owner_id   order by dogs.age asc limit 1;	SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
1	select professionals.email_address from Professionals where  professionals.state = "Hawaii" or professionals.state = "Wisconsin";	SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
1	select professionals.email_address from Professionals where  professionals.state = "Hawaii" or professionals.state = "Wisconsin";	SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
1	select dogs.date_arrived , dogs.date_departed from Dogs;	SELECT date_arrived ,  date_departed FROM Dogs
1	select dogs.date_arrived , dogs.date_departed from Dogs;	SELECT date_arrived ,  date_departed FROM Dogs
0	select count(*) from Treatments;	SELECT count(DISTINCT dog_id) FROM Treatments
1	select count( distinct treatments.dog_id) from Treatments;	SELECT count(DISTINCT dog_id) FROM Treatments
1	select count( distinct treatments.professional_id) from Treatments;	SELECT count(DISTINCT professional_id) FROM Treatments
1	select count( distinct treatments.professional_id) from Treatments;	SELECT count(DISTINCT professional_id) FROM Treatments
1	select professionals.role_code , professionals.street , professionals.city , professionals.state from Professionals where  professionals.city like "%West%";	SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
1	select professionals.role_code , professionals.street , professionals.city , professionals.state from Professionals where  professionals.city like "%West%";	SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
1	select owners.first_name , owners.last_name , owners.email_address from Owners where  owners.state like "%North%";	SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
1	select owners.first_name , owners.last_name , owners.email_address from Owners where  owners.state like "%North%";	SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
1	select count(*) from Dogs where  dogs.age < (select avg(dogs.age) from Dogs  );	SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
1	select count(*) from Dogs where  dogs.age < (select avg(dogs.age) from Dogs  );	SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
1	select treatments.cost_of_treatment from Treatments   order by treatments.date_of_treatment desc limit 1;	SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
1	select treatments.cost_of_treatment from Treatments   order by treatments.date_of_treatment desc limit 1;	SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
1	select count(*) from Dogs where  dogs.dog_id not in (select Treatments.dog_id from Treatments  );	SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )
1	select count(*) from Dogs where  dogs.dog_id not in (select Treatments.dog_id from Treatments  );	select count(*) from dogs where dog_id not in ( select dog_id from treatments )
1	select count(*) from Owners where  owners.owner_id not in (select Dogs.owner_id from Dogs  );	SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
1	select count(*) from Owners where  owners.owner_id not in (select Dogs.owner_id from Dogs  );	SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
1	select count(*) from Professionals where  professionals.professional_id not in (select Treatments.professional_id from Treatments  );	SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
1	select count(*) from Professionals where  professionals.professional_id not in (select Treatments.professional_id from Treatments  );	SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
1	select dogs.name , dogs.age , dogs.weight from Dogs where  dogs.abandoned_yn = 1;	SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
1	select dogs.name , dogs.age , dogs.weight from Dogs where  dogs.abandoned_yn = 1;	SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
1	select avg(dogs.age) from Dogs;	SELECT avg(age) FROM Dogs
1	select avg(dogs.age) from Dogs;	SELECT avg(age) FROM Dogs
1	select dogs.age from Dogs   order by dogs.age desc limit 1;	SELECT max(age) FROM Dogs
1	select dogs.age from Dogs   order by dogs.age desc limit 1;	SELECT max(age) FROM Dogs
0	select charges.charge_type , sum(charges.charge_amount) from Charges  group by charges.charge_type;	SELECT charge_type ,  charge_amount FROM Charges
0	select charges.charge_type , sum(charges.charge_amount) from Charges  group by charges.charge_type;	SELECT charge_type ,  charge_amount FROM Charges
0	select charges.charge_type from Charges   order by charges.charge_amount desc limit 1;	SELECT max(charge_amount) FROM Charges
0	select charges.charge_amount from Charges   order by charges.charge_type desc limit 1;	SELECT max(charge_amount) FROM Charges
1	select professionals.email_address , professionals.cell_number , professionals.home_phone from Professionals;	SELECT email_address ,  cell_number ,  home_phone FROM professionals
1	select professionals.email_address , professionals.cell_number , professionals.home_phone from Professionals;	SELECT email_address ,  cell_number ,  home_phone FROM professionals
0	select distinct dogs.breed_code , sizes.size_description from Dogs join Sizes on Dogs.size_code = Sizes.size_code;	SELECT DISTINCT breed_code ,  size_code FROM dogs
1	select distinct dogs.breed_code , dogs.size_code from Dogs;	SELECT DISTINCT breed_code ,  size_code FROM dogs
0	select professionals.first_name , treatment_types.treatment_type_description from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id join Treatment_Types on Treatments.treatment_type_code = Treatment_Types.treatment_type_code;	SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
0	select professionals.first_name , treatment_types.treatment_type_description from Treatments join Professionals on Treatments.professional_id = Professionals.professional_id join Treatment_Types on Treatments.treatment_type_code = Treatment_Types.treatment_type_code;	SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
1	select count(*) from singer;	SELECT count(*) FROM singer
1	select count(*) from singer;	SELECT count(*) FROM singer
1	select singer.name from singer   order by singer.net_worth_millions asc;	SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
1	select singer.name from singer   order by singer.net_worth_millions asc;	SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
1	select singer.birth_year , singer.citizenship from singer;	SELECT Birth_Year ,  Citizenship FROM singer
1	select singer.birth_year , singer.citizenship from singer;	SELECT Birth_Year ,  Citizenship FROM singer
1	select singer.name from singer where  singer.citizenship != "France";	SELECT Name FROM singer WHERE Citizenship != "France"
0	select singer.name from singer where  singer.citizenship != "French";	SELECT Name FROM singer WHERE Citizenship != "France"
1	select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949;	SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
1	select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949;	SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
1	select singer.name from singer   order by singer.net_worth_millions desc limit 1;	SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
1	select singer.name from singer   order by singer.net_worth_millions desc limit 1;	SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
1	select singer.citizenship , count(*) from singer  group by singer.citizenship;	SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
1	select singer.citizenship , count(*) from singer  group by singer.citizenship;	SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
1	select singer.citizenship from singer  group by singer.citizenship  order by count(*) desc limit 1;	SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
1	select singer.citizenship from singer  group by singer.citizenship  order by count(*) desc limit 1;	select citizenship from singer group by citizenship order by count(*) desc limit 1
1	select singer.citizenship , max(singer.net_worth_millions) from singer  group by singer.citizenship;	SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
1	select max(singer.net_worth_millions) , singer.citizenship from singer  group by singer.citizenship;	SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
1	select song.title , singer.name from song join singer on song.Singer_ID = singer.Singer_ID;	SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
1	select song.title , singer.name from song join singer on song.Singer_ID = singer.Singer_ID;	SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
1	select distinct singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000;	SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
1	select distinct singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000;	SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
0	select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by song.singer_id having  count(*) > 1;	SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
0	select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by song.singer_id having  count(*) > 1;	SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
0	select singer.name , sum(song.sales) from song join singer on song.Singer_ID = singer.Singer_ID  group by song.singer_id;	SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
1	select sum(song.sales) , singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name;	SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
1	select singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  );	SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
1	select singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  );	SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
1	select singer.citizenship from singer where  singer.birth_year < 1945   intersect select singer.citizenship from singer where  singer.birth_year > 1955;	SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
1	select singer.citizenship from singer where  singer.birth_year < 1945   intersect select singer.citizenship from singer where  singer.birth_year > 1955;	SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
1	select count(*) from Other_Available_Features;	SELECT count(*) FROM Other_Available_Features
1	select ref_feature_types.feature_type_name from Other_Available_Features join Ref_Feature_Types on Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code where  other_available_features.feature_name = "AirCon";	SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"
0	select ref_property_types.property_type_description from Properties join Ref_Property_Types on Properties.property_type_code = Ref_Property_Types.property_type_code where  properties.property_type_code = "C";	SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code
1	select properties.property_name from Properties where  properties.property_type_code = "House"   union select properties.property_name from Properties where  properties.property_type_code = "Apartment" and properties.room_count > 1;	SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1
                     easy                 medium               hard                 extra                all                 
count                248                  446                  174                  166                  1034                
=====================   EXECUTION ACCURACY     =====================
execution            0.899                0.789                0.678                0.560                0.760               
